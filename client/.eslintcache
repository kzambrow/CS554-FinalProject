[{"C:\\554workspace\\finalproject\\client\\src\\components\\App.js":"1","C:\\554workspace\\finalproject\\client\\src\\components\\Landing.js":"2","C:\\554workspace\\finalproject\\client\\src\\firebase\\FirebaseFunctions.js":"3","C:\\554workspace\\finalproject\\client\\src\\components\\SocialSignIn.js":"4","C:\\554workspace\\finalproject\\client\\src\\components\\GetCode.js":"5","C:\\554workspace\\finalproject\\client\\src\\reportWebVitals.js":"6","C:\\554workspace\\finalproject\\client\\src\\components\\PrivateRoute.js":"7","C:\\554workspace\\finalproject\\client\\src\\components\\CurrentUserAccount.js":"8","C:\\554workspace\\finalproject\\client\\src\\components\\GetWaitingInfo.js":"9","C:\\554workspace\\finalproject\\client\\src\\components\\Landings.js":"10","C:\\554workspace\\finalproject\\client\\src\\firebase\\Firebase.js":"11","C:\\554workspace\\finalproject\\client\\src\\components\\Chat.js":"12","C:\\554workspace\\finalproject\\client\\src\\components\\Navigation.js":"13","C:\\554workspace\\finalproject\\client\\src\\components\\UploadProfilePic.js":"14","C:\\554workspace\\finalproject\\client\\src\\index.js":"15","C:\\554workspace\\finalproject\\client\\src\\components\\Account.js":"16","C:\\554workspace\\finalproject\\client\\src\\components\\SignIn.js":"17","C:\\554workspace\\finalproject\\client\\src\\components\\Post.js":"18","C:\\554workspace\\finalproject\\client\\src\\components\\SignUp.js":"19","C:\\554workspace\\finalproject\\client\\src\\components\\ChangePassword.js":"20","C:\\554workspace\\finalproject\\client\\src\\firebase\\Auth.js":"21","C:\\554workspace\\finalproject\\client\\src\\components\\PostPage.js":"22","C:\\554workspace\\finalproject\\client\\src\\components\\SignOut.js":"23","C:\\554workspace\\finalproject\\client\\src\\components\\Comments.js":"24"},{"size":1772,"mtime":1608359368904,"results":"25","hashOfConfig":"26"},{"size":3540,"mtime":1608348568649,"results":"27","hashOfConfig":"26"},{"size":1711,"mtime":1608147521909,"results":"28","hashOfConfig":"26"},{"size":739,"mtime":1608147521906,"results":"29","hashOfConfig":"26"},{"size":3910,"mtime":1608326411835,"results":"30","hashOfConfig":"26"},{"size":375,"mtime":1608147521913,"results":"31","hashOfConfig":"26"},{"size":499,"mtime":1608147521902,"results":"32","hashOfConfig":"26"},{"size":5589,"mtime":1608326411833,"results":"33","hashOfConfig":"26"},{"size":4075,"mtime":1608326411836,"results":"34","hashOfConfig":"26"},{"size":3298,"mtime":1608348555529,"results":"35","hashOfConfig":"26"},{"size":537,"mtime":1608147521908,"results":"36","hashOfConfig":"26"},{"size":5245,"mtime":1608350048124,"results":"37","hashOfConfig":"26"},{"size":2266,"mtime":1608350421155,"results":"38","hashOfConfig":"26"},{"size":2131,"mtime":1608350800822,"results":"39","hashOfConfig":"26"},{"size":578,"mtime":1608326411842,"results":"40","hashOfConfig":"26"},{"size":9590,"mtime":1608342148458,"results":"41","hashOfConfig":"26"},{"size":3036,"mtime":1608342148459,"results":"42","hashOfConfig":"26"},{"size":4865,"mtime":1608326411840,"results":"43","hashOfConfig":"26"},{"size":3237,"mtime":1608347182197,"results":"44","hashOfConfig":"26"},{"size":2672,"mtime":1608147521895,"results":"45","hashOfConfig":"26"},{"size":1909,"mtime":1608167277018,"results":"46","hashOfConfig":"26"},{"size":5267,"mtime":1608359865439,"results":"47","hashOfConfig":"26"},{"size":260,"mtime":1608147521905,"results":"48","hashOfConfig":"26"},{"size":2575,"mtime":1608361902261,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1yyacow",{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"55"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"55"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"55"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"55"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"55"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\554workspace\\finalproject\\client\\src\\components\\App.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\Landing.js",["107","108"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Card, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport '../App.css';\r\nimport turnip from '../img/turnip.png'\r\nimport Account from './Account'; \r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n\t\tmarginRight: 'auto',\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n\t},\r\n\ttitleHead: {\r\n\t\tborderBottom: '1px solid #1e8678',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tgrid: {\r\n\t\tflexGrow: 1,\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\tmedia: {\r\n\t\theight: '100%',\r\n\t\twidth: '100%'\r\n\t},\r\n\tbutton: {\r\n\t\tcolor: '#1e8678',\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 12\r\n\t}\r\n});\r\nconst Landing = (props) => {\r\n\t\r\n\tconst classes = useStyles();\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [showsData, setShowsData] = useState(undefined);\r\n\tconst [visible, setVisible] = useState(4);\r\n\t\r\n\r\n\r\n\tlet card = null;\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tasync function fetchData() {\r\n\t\t\ttry {\r\n\t\t\t\t//getting data for main page\r\n\t\t\t\tconst { data } = await axios.get('http://localhost:5000/post/buy');\r\n\t\t\t\tsetShowsData(data);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\r\n\tconst showMore = () => {\r\n\t\tsetVisible((prevValue) => prevValue + 4);\r\n\t}\r\n\t\r\n\t\r\n\tconst buildCard = (show) => { \r\n\t\tconsole.log('show ID is ' + show.creator); \r\n\t\treturn (\r\n\t\t\t<Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id}>\r\n\t\t\t\t<Card className={classes.card} variant='outlined'>\r\n\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\t\t\t\tcomponent='img'\r\n\t\t\t\t\t\t\t\timage='/imgs/turnip.png'\r\n\t\t\t\t\t\t\t\talt = 'No image'\r\n\t\t\t\t\t\t\t\ttitle='show image'\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Typography variant='body2' color='textSecondary' component='p'>\r\n\t\t\t\t\t\t\t\t\tType: Buying\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPosted by: \r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t{/* <Link to ={{pathname: '/account',\r\n\t\t\t\t\t\t\t\t\t\tstate:{\r\n\t\t\t\t\t\t\t\t\t\t\tuser:user\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}>a</Link>\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t */}\r\n\t\t\t\t\t\t\t\t\t<Link to = {'/account/' + show.creator}> {show.displayName} </Link>\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPrice: {show.price}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tTicket Price: {show.ticketPrice}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tDescription: {show.description ? <p>{show.description}</p> : \"None available\"}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tdatePosted: {show.createdAt}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\texpirationTime: {show.endTime}<br />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\r\n\t\t\t\t\t{/* <Button><Link to={'/joinqueue'} postId={show.id}></Link></Button> */}\r\n\t\t\t\t\t<Button><Link to={`/posts/${show._id}`} > More Info</Link></Button>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t};\r\n\r\n\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Loading....</h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\telse {\r\n\t\tcard =\r\n\t\t\tshowsData &&\r\n\t\t\tshowsData.data.slice(0, visible).map((show) => {\r\n\t\t\t\treturn buildCard(show);\r\n\t\t\t});\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button style = {{position: 'absolute', left: '50%'}}> <Link to={\"/sell\"}> View Selling </Link> </Button>\r\n\t\t\t\t<br/><br/>\r\n\r\n\t\t\t\t<Grid container className={classes.grid} spacing={5}>\r\n\t\t\t\t\t{card}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Button style={{ display: visible >= showsData.data.length ? 'none' : 'block' }} onClick={showMore}>Load More</Button>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Landing;",["109","110"],"C:\\554workspace\\finalproject\\client\\src\\firebase\\FirebaseFunctions.js",["111"],"import firebase from 'firebase/app';\r\nconst axios = require('axios');\r\n\r\nasync function doCreateUserWithEmailAndPassword(email, password, displayName, islandName, inGameName) {\r\n    await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n    firebase.auth().currentUser.updateProfile({ displayName: displayName , islandName:islandName, inGameName:inGameName});\r\n\r\n}\r\n\r\nasync function doChangePassword(email, oldPassword, newPassword) {\r\n    let credential = firebase.auth.EmailAuthProvider.credential(\r\n        email,\r\n        oldPassword\r\n    );\r\n    await firebase.auth().currentUser.reauthenticateWithCredential(credential);\r\n    await firebase.auth().currentUser.updatePassword(newPassword);\r\n    await doSignOut();\r\n}\r\n\r\nasync function doSignInWithEmailAndPassword(email, password) {\r\n    await firebase.auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nasync function doSocialSignIn(provider) {\r\n    let socialProvider = null;\r\n    if (provider === 'google') {\r\n        socialProvider = new firebase.auth.GoogleAuthProvider();\r\n    } else if (provider === 'facebook') {\r\n        socialProvider = new firebase.auth.FacebookAuthProvider();\r\n    }\r\n    await firebase.auth().signInWithPopup(socialProvider);\r\n}\r\n\r\nasync function doPasswordReset(email) {\r\n    await firebase.auth().sendPasswordResetEmail(email);\r\n}\r\n\r\nasync function doPasswordUpdate(password) {\r\n    await firebase.auth().updatePassword(password);\r\n}\r\n\r\nasync function doSignOut() {\r\n    await firebase.auth().signOut();\r\n}\r\n\r\nexport {\r\n    doCreateUserWithEmailAndPassword,\r\n    doSocialSignIn,\r\n    doSignInWithEmailAndPassword,\r\n    doPasswordReset,\r\n    doPasswordUpdate,\r\n    doSignOut,\r\n    doChangePassword\r\n};","C:\\554workspace\\finalproject\\client\\src\\components\\SocialSignIn.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\GetCode.js",["112","113","114","115","116","117","118"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport '../App.css';\r\nimport noImage from '../img/no-image.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport Countdown from 'react-countdown';\r\n\r\n\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 250,\r\n        height: 'auto',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        borderRadius: 5,\r\n        border: '1px solid #1e8678',\r\n        boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n    },\r\n    titleHead: {\r\n        borderBottom: '1px solid #1e8678',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        flexGrow: 1,\r\n        flexDirection: 'row'\r\n    },\r\n    media: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        color: '#1e8678',\r\n        fontWeight: 'bold',\r\n        fontSize: 12\r\n    }\r\n});\r\n\r\n//TODO\r\n//provide links to change password\r\n//display user info\r\n//display different information for authenticated vs non authenticated\r\n//ask about updating user schema to include island code, nintendo ID\r\nfunction GetCode(props) {\r\n    const postId = props.postId;\r\n    const queueId = props.queueId;\r\n\r\n\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [islandCode, setIslandCode] = useState(undefined);\r\n    // const [queueId, setQueueId] = useState(undefined);\r\n\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        const getCode = async () => {\r\n            // const userInfo = await axios.get(`http://localhost:5000/user/email/${currentUser.email}`);\r\n            try {\r\n                // const queue = await axios.post('http://localhost:5000/queue/find', {\r\n                //     userId: currentUser.id,\r\n                //     postId: postId\r\n                // })\r\n                // setQueueId(queue.data.data._id);\r\n                const code = await axios.post('http://localhost:5000/queue/getCode', {\r\n                    postId: postId,\r\n                    queueId: queueId\r\n                })\r\n                setIslandCode(code.data.data);\r\n            } catch (e) {\r\n                console.log(e.response)\r\n            }\r\n        }\r\n        // console.log(queueId)\r\n        if (queueId) getCode();\r\n\r\n    }, []);\r\n    let card = null;\r\n\r\n    islandCode && (card =\r\n        <Card className={classes.card} variant='outlined'>\r\n            <CardActionArea>\r\n                <CardContent>\r\n                    <Typography variant='body2' color='textSecondary' component='p'>\r\n                        <br></br>\r\n                            Code: {islandCode}\r\n                        <br></br>\r\n\r\n\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea><br />\r\n            Time left:\r\n            <Countdown date={Date.now() + 300000} />\r\n        </Card>\r\n    );\r\n    if (islandCode!='Waiting.....') {\r\n        return (\r\n            <Grid container className={classes.grid} spacing={5}>\r\n                {card}\r\n            </Grid>\r\n\r\n        );\r\n    } else {\r\n        return (\r\n            <Grid container className={classes.grid} spacing={5}>\r\n                <Card className={classes.card} variant='outlined'>\r\n                    <CardActionArea>\r\n                        <CardContent>\r\n                            <Typography variant='body2' color='textSecondary' component='p'>\r\n                                <br></br>\r\n                            Waiting.....\r\n                                <br></br>\r\n\r\n\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea><br />\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default GetCode;","C:\\554workspace\\finalproject\\client\\src\\reportWebVitals.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\PrivateRoute.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\CurrentUserAccount.js",["119","120","121","122","123","124"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport noImage from '../img/no-image.png';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n\t\tmarginRight: 'auto',\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n\t},\r\n\ttitleHead: {\r\n\t\tborderBottom: '1px solid #1e8678',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tgrid: {\r\n\t\tflexGrow: 1,\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\tmedia: {\r\n\t\theight: '100%',\r\n\t\twidth: '100%'\r\n\t},\r\n\tbutton: {\r\n\t\tcolor: '#1e8678',\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 12\r\n\t}\r\n});\r\n\r\nfunction CurrentUserAccount(props){\r\n\r\n    const regex = /(<([^>]+)>)/gi;\r\n    const classes = useStyles();\r\n    const [ loading, setLoading ] = useState(true);\r\n    const [ buying, setBuying ] = useState(true);\r\n    const [profileData, setProfileData ] = useState(undefined);\r\n    const [authUser, setAuthUser] = useState(props.user); \r\n    const [userData, setUserData] = useState(undefined); \r\n\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                //getting data for user profile\r\n                const { data } = await axios.get('http://localhost:5000/post/buy');\r\n                setProfileData(data);\r\n                setLoading(false);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n    \r\n    const buildCard = (show) => {\r\n        return (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id}>\r\n                <Card className={classes.card} variant='outlined'>\r\n                    <CardActionArea>\r\n                        \r\n                            <CardMedia\r\n                                className={classes.media}\r\n                                component='img'\r\n                                image={show.image && show.image.original ? show.image.original : noImage}\r\n                                title='show image'\r\n                            />\r\n\r\n                            <CardContent>\r\n        \r\n                                <Typography variant='body2' color='textSecondary' component='p'>\r\n                                    Type: {show.sell ? \"Selling\": \"Buying\"}\r\n                                    <br></br>\r\n                                    Price: {show.price}\r\n                                    <br></br>\r\n                                    Ticket Price: {show.ticketPrice}\r\n                                    <br></br>\r\n                                    Rating: {show.rating}\r\n                                    <br></br>\r\n                                    datePosted: {show.Date}\r\n                                    <br></br>\r\n                                    expirationTime: {show.endTime}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        \r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>\r\n        );\r\n    };\r\n    \r\n\r\n    let card = null;\r\n    card =\r\n        profileData &&\r\n        profileData.data.map((show) => {\r\n            return buildCard(show);\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function getData(){\r\n            const userInfo = await axios.get(`http://localhost:5000/user/email/${authUser.email}`); \r\n            //console.log(userInfo); \r\n            setUserData(userInfo); \r\n            console.log(userInfo); \r\n        };\r\n        getData();\r\n    }, []);\r\n    let userCard = null; \r\n        \r\n         userData && (userCard = \r\n            <Card className={classes.card} variant='outlined'>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        component='img'\r\n                        image={noImage}\r\n                        title='show image'\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant='body2' color='textSecondary' component='p'>\r\n                            <br></br>\r\n                            Username: {userData.data.data.displayName}\r\n                            <br></br>\r\n                            Island Code: ABCD \r\n                            <br></br>\r\n                            Ingame Name: GAMER1\r\n                            <br></br>\r\n                            Nintendo ID: 1234567 \r\n                            <br></br>\r\n                            redirect to change password\r\n                            <br></br>\r\n                            redirect to Edit profile\r\n                            <br></br>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n    );\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                <h2>Loading....</h2>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                <br />\r\n                <br />\r\n                <Button> <Link to =  {\"/sell\" }> Selling </Link> </Button>\r\n                <Grid container className={classes.grid} spacing={5}>\r\n                    {card}\r\n                </Grid>\r\n                <div>\r\n                    {userCard}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CurrentUserAccount; ","C:\\554workspace\\finalproject\\client\\src\\components\\GetWaitingInfo.js",["125","126","127","128","129","130","131","132"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport '../App.css';\r\nimport noImage from '../img/no-image.png';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport GetCode from './GetCode';\r\nconst axios = require('axios');\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 250,\r\n        height: 'auto',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        borderRadius: 5,\r\n        border: '1px solid #1e8678',\r\n        boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n    },\r\n    titleHead: {\r\n        borderBottom: '1px solid #1e8678',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        flexGrow: 1,\r\n        flexDirection: 'row'\r\n    },\r\n    media: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        color: '#1e8678',\r\n        fontWeight: 'bold',\r\n        fontSize: 12\r\n    }\r\n});\r\n\r\n\r\nconst GetWaitingInfo = props => {\r\n    const [track, setTrack] = useState('');\r\n    const queueId = props.queueId;\r\n    const postId = props.postId;\r\n    const classes = useStyles();\r\n    const [errorMsg, setErrorMsg] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        let repeat;\r\n        async function fetchData() {\r\n            if (track !== -1) {\r\n                try {\r\n                    const res = await axios.post('http://localhost:5000/queue/check', {\r\n                        postId: postId,\r\n                        queueId: queueId\r\n                    })\r\n\r\n                    setTrack(res.data.data);\r\n                    console.log(track);\r\n\r\n                    repeat = setTimeout(fetchData, 3000); // request again after 3 second\r\n                } catch (error) {\r\n                    setErrorMsg(error.response.data.error);\r\n                }\r\n            } else {\r\n                repeat = undefined;\r\n            }\r\n        }\r\n        if (track !== -1) fetchData();\r\n\r\n        return () => {\r\n            if (repeat && track !== -1) {\r\n                clearTimeout(repeat);\r\n            }\r\n        }\r\n    }, [track]);\r\n    // console.log(track);\r\n\r\n    if (errorMsg) {\r\n        return (\r\n            <Grid container className={classes.grid} spacing={5}>\r\n                <Card className={classes.card} variant='outlined'>\r\n                    <CardActionArea>\r\n                        <CardContent>\r\n                            <Typography variant='body2' color='textSecondary' component='p'>\r\n                                {errorMsg}\r\n                                \r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea><br />\r\n                </Card>\r\n            </Grid>\r\n\r\n        )\r\n    }\r\n\r\n    if (track === -1) {\r\n        return (\r\n            <GetCode queueId={queueId} postId={postId} />\r\n        );\r\n    } else {\r\n        if (track) {\r\n            return (\r\n                <Grid container className={classes.grid} spacing={5}>\r\n                    <Card className={classes.card} variant='outlined'>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n                                <Typography variant='body2' color='textSecondary' component='p'>\r\n                                    <ul>\r\n                                        {track.map((user) => {\r\n                                            return (\r\n                                                <li>{user}</li>\r\n                                            )\r\n                                        })}\r\n                                    </ul>\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </CardActionArea><br />\r\n                    </Card>\r\n                </Grid>\r\n\r\n            )\r\n        }\r\n        return (\r\n            <div>User List Here</div>\r\n        )\r\n    }\r\n\r\n};\r\n\r\nexport default GetWaitingInfo;","C:\\554workspace\\finalproject\\client\\src\\components\\Landings.js",[],"C:\\554workspace\\finalproject\\client\\src\\firebase\\Firebase.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\Chat.js",["133","134","135","136"],"import React, {useContext, useState, useEffect, useRef} from \"react\";\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport io from \"socket.io-client\";\r\nimport '../App.css';\r\nconst axios = require('axios');\r\n\r\n\r\n\r\nconst Chat = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [ID, setID] = useState(\"\");\r\n    const [currentImage, setCurrentImage] = useState(\"/imgs/turnipSmall.png\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const socketRef = useRef();\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io('http://localhost:5000', {\r\n            transports: ['websocket'],\r\n            upgrade: false\r\n        });\r\n        socketRef.current.on(\"RECEIVE_MESSAGE\", function(message) {\r\n            receivedMessage(message);\r\n        });\r\n        async function getImage() {\r\n            try {\r\n                const profile = await axios.get(`http://localhost:5000/images/${currentUser.id}`); \r\n                let newimageSource = profile.data.data.imageData;\r\n                let finalimageSource = newimageSource.replaceAll(\"\\\\\", \"/\").replace(\"../client/public\", \"\");\r\n                if (finalimageSource.includes(\".png\")) {\r\n                    finalimageSource = finalimageSource.replace(\".png\", \"_small.png\");\r\n                }\r\n                if (finalimageSource.includes(\".jpeg\")) {\r\n                    finalimageSource = finalimageSource.replace(\".jpeg\", \"_small.jpeg\");\r\n                }\r\n                if (finalimageSource.includes(\".jpg\")) {\r\n                    finalimageSource = finalimageSource.replace(\".jpg\", \"_small.jpg\");\r\n                }\r\n                setCurrentImage(finalimageSource);\r\n            } catch (e) {\r\n                setCurrentImage(\"/imgs/turnipSmall.png\");\r\n                console.log(e);\r\n            }\r\n        }\r\n        getImage();\r\n        return () => {\r\n            socketRef.current.off(\"disconnect\");\r\n        };\r\n        \r\n\r\n        \r\n    }, [setMessages])\r\n\r\n\r\n    function receivedMessage(message) {\r\n        setMessages(oldMessages => [...oldMessages, message]);\r\n        console.log(message);\r\n        scrollDown();\r\n    }\r\n\r\n    function sendMessage(e) {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            image: currentImage,\r\n            email: currentUser.email,\r\n            name: currentUser.displayName,\r\n            body: message,\r\n            id: ID,\r\n        };\r\n        socketRef.current.emit(\"SEND_MESSAGE\", messageObject);\r\n        setMessage(\"\");\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    function scrollDown() {\r\n        var objDiv = document.getElementById(\"chat\");\r\n        objDiv.scrollTop = objDiv.scrollHeight;\r\n    }\r\n    return (\r\n        \r\n        <div>\r\n            <div id=\"chat\" className=\"chat-box\">\r\n                {messages.map((message, index) => {\r\n                    if (message.id === ID) {\r\n                        if (currentUser && currentUser.email === message.email) {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className=\"chat-user\" >\r\n                                        {message.name}\r\n                                        <img src={message.image} className=\"round-profile\" alt=\"Image\"/>\r\n                                        <br/>\r\n                                        <div class=\"chat-bubble-user\">\r\n                                        {message.body}\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className=\"chat-other chat-bubble\">\r\n                                        <img src={message.image} class=\"round-profile\" alt=\"Image\"/>\r\n                                        {message.name}\r\n                                        <br/>\r\n                                        <div class=\"chat-bubble-other\">\r\n                                        {message.body}\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        \r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <div>\r\n                                {message.body}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            {currentUser ?\r\n            \r\n            <form onSubmit={sendMessage}>\r\n                <textarea className=\"chat-text-field\" value={message} onChange={handleChange} placeholder=\"Message...\" />\r\n                <button className=\"chat-submit\">Send</button>\r\n            </form>\r\n            : \r\n            null\r\n            }\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Chat;","C:\\554workspace\\finalproject\\client\\src\\components\\Navigation.js",["137","138","139","140","141"],"import React, { useContext } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport SignOutButton from './SignOut';\r\nimport '../App.css';\r\nimport Navbar from 'react-bootstrap/Navbar'; \r\nimport Nav from 'react-bootstrap/Nav'; \r\nimport button from 'react-bootstrap/Button'; \r\nimport {doSignOut} from '../firebase/FirebaseFunctions';\r\n\r\nconst Navigation = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  console.log(currentUser)\r\n  return <div>{currentUser ? <NavigationAuth /> : <NavigationNonAuth />}</div>;\r\n};\r\n\r\nconst NavigationAuth = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <nav className=\"navigation\">\r\n    <div class = \"topnav\">\r\n        \r\n          <Link activeClassName=\"active\" to=\"/\">Turnip Exchange</Link>\r\n          <Link activeClassName=\"active\" to=\"/\">Home</Link>\r\n          <Link to={'/account/' + currentUser.id}>Account</Link>\r\n          <Link to=\"#signout\" onClick={doSignOut}> Sign Out</Link>\r\n          {/* <NavLink exact to=\"/\" activeClassName=\"active\" className=\"logo\">\r\n              Landing\r\n          </NavLink>\r\n          \r\n         \r\n            <NavLink exact to={'/account/' + currentUser.id} activeClassName=\"active\">\r\n              Account\r\n            </NavLink>\r\n         \r\n            <NavLink exact to=\"/chat\" activeClassName=\"active\">\r\n              Chat\r\n            </NavLink> */}   \r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst NavigationNonAuth = () => {\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <div class = \"topnav\">\r\n      <Link to=\"/\">Turnip Exchange</Link>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to='/signup' >Sign Up</Link>\r\n          <Link to=\"/signin\">Sign In</Link>\r\n      </div>\r\n      {/* <ul>\r\n        <li>\r\n          <NavLink exact to=\"/\" activeClassName=\"active\">\r\n            Landing\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/signup\" activeClassName=\"active\">\r\n            Sign-up\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li>\r\n          <NavLink exact to=\"/signin\" activeClassName=\"active\">\r\n            Sign-In\r\n          </NavLink>\r\n        </li>\r\n      </ul> */}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","C:\\554workspace\\finalproject\\client\\src\\components\\UploadProfilePic.js",["142"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport '../App.css';\r\n//import DefaultImg from \"../public/imgs/turnip.png\";\r\n\r\nconst axios = require('axios');\r\nfunction UploadProfilePic() {\r\n    \r\n    const { currentUser } = useContext(AuthContext);\r\n    const [multerImage, setMulterImage] = useState(\"/imgs/turnip.png\");\r\n\r\n    useEffect(() => {\r\n        async function getImage() {\r\n            try {\r\n                const profile = await axios.get(`http://localhost:5000/images/${currentUser.email}`); \r\n                let newimageSource = profile.data.data.imageData;\r\n                let finalimageSource = newimageSource.replaceAll(\"\\\\\", \"/\").replace(\"../client/public\", \"\");\r\n                \r\n                setMulterImage(finalimageSource);\r\n                console.log(multerImage);\r\n            } catch (e) {\r\n                setMulterImage(\"/imgs/turnip.png\");\r\n                console.log(e);\r\n            }\r\n        }\r\n        getImage();\r\n    }, [multerImage]);\r\n\r\n    const uploadImage = (e) => {\r\n        let imageFormObj = new FormData();\r\n        imageFormObj.append(\"userId\", currentUser.id);\r\n        imageFormObj.append(\"userEmail\", currentUser.email);\r\n        imageFormObj.append(\"imageName\", \"multer-image-\" + Date.now());\r\n        imageFormObj.append(\"imageData\", e.target.files[0]);\r\n        axios.delete(`http://localhost:5000/images/${currentUser.email}`)\r\n\r\n        axios.post('http://localhost:5000/images/uploadmulter', imageFormObj)\r\n            .then((data) => {\r\n                if (data.data.success) {\r\n                    alert(\"Image successfully uploaded\");\r\n                    //setMulterImage(\"/imgs/turnip.png\");\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                alert(err);\r\n                setMulterImage(\"/imgs/turnip.png\");\r\n            })\r\n        };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input type=\"file\"\r\n                onChange={uploadImage}\r\n            />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadProfilePic","C:\\554workspace\\finalproject\\client\\src\\index.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\Account.js",["143","144","145","146","147","148","149","150","151"],"C:\\554workspace\\finalproject\\client\\src\\components\\SignIn.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\Post.js",["152","153","154"],"C:\\554workspace\\finalproject\\client\\src\\components\\SignUp.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\ChangePassword.js",[],"C:\\554workspace\\finalproject\\client\\src\\firebase\\Auth.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\PostPage.js",["155","156","157"],"C:\\554workspace\\finalproject\\client\\src\\components\\SignOut.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\Comments.js",["158","159","160","161","162"],{"ruleId":"163","severity":1,"message":"164","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":14},{"ruleId":"163","severity":1,"message":"167","line":7,"column":8,"nodeType":"165","messageId":"166","endLine":7,"endColumn":15},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"163","severity":1,"message":"172","line":2,"column":7,"nodeType":"165","messageId":"166","endLine":2,"endColumn":12},{"ruleId":"163","severity":1,"message":"173","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":15},{"ruleId":"163","severity":1,"message":"174","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":14},{"ruleId":"163","severity":1,"message":"175","line":5,"column":45,"nodeType":"165","messageId":"166","endLine":5,"endColumn":54},{"ruleId":"163","severity":1,"message":"176","line":5,"column":86,"nodeType":"165","messageId":"166","endLine":5,"endColumn":92},{"ruleId":"163","severity":1,"message":"177","line":52,"column":13,"nodeType":"165","messageId":"166","endLine":52,"endColumn":24},{"ruleId":"178","severity":1,"message":"179","line":78,"column":8,"nodeType":"180","endLine":78,"endColumn":10,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":98,"column":19,"nodeType":"184","messageId":"185","endLine":98,"endColumn":21},{"ruleId":"163","severity":1,"message":"186","line":1,"column":38,"nodeType":"165","messageId":"166","endLine":1,"endColumn":48},{"ruleId":"163","severity":1,"message":"187","line":38,"column":11,"nodeType":"165","messageId":"166","endLine":38,"endColumn":16},{"ruleId":"163","severity":1,"message":"188","line":41,"column":13,"nodeType":"165","messageId":"166","endLine":41,"endColumn":19},{"ruleId":"163","severity":1,"message":"189","line":41,"column":21,"nodeType":"165","messageId":"166","endLine":41,"endColumn":30},{"ruleId":"163","severity":1,"message":"190","line":43,"column":22,"nodeType":"165","messageId":"166","endLine":43,"endColumn":33},{"ruleId":"178","severity":1,"message":"191","line":113,"column":8,"nodeType":"180","endLine":113,"endColumn":10,"suggestions":"192"},{"ruleId":"163","severity":1,"message":"186","line":1,"column":38,"nodeType":"165","messageId":"166","endLine":1,"endColumn":48},{"ruleId":"163","severity":1,"message":"173","line":3,"column":8,"nodeType":"165","messageId":"166","endLine":3,"endColumn":15},{"ruleId":"163","severity":1,"message":"174","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":14},{"ruleId":"163","severity":1,"message":"193","line":4,"column":16,"nodeType":"165","messageId":"166","endLine":4,"endColumn":24},{"ruleId":"163","severity":1,"message":"175","line":5,"column":45,"nodeType":"165","messageId":"166","endLine":5,"endColumn":54},{"ruleId":"163","severity":1,"message":"176","line":5,"column":86,"nodeType":"165","messageId":"166","endLine":5,"endColumn":92},{"ruleId":"163","severity":1,"message":"194","line":6,"column":10,"nodeType":"165","messageId":"166","endLine":6,"endColumn":21},{"ruleId":"178","severity":1,"message":"179","line":76,"column":8,"nodeType":"180","endLine":76,"endColumn":15,"suggestions":"195"},{"ruleId":"163","severity":1,"message":"196","line":11,"column":16,"nodeType":"165","messageId":"166","endLine":11,"endColumn":21},{"ruleId":"178","severity":1,"message":"197","line":52,"column":8,"nodeType":"180","endLine":52,"endColumn":21,"suggestions":"198"},{"ruleId":"199","severity":1,"message":"200","line":93,"column":41,"nodeType":"201","endLine":93,"endColumn":105},{"ruleId":"199","severity":1,"message":"200","line":106,"column":41,"nodeType":"201","endLine":106,"endColumn":101},{"ruleId":"163","severity":1,"message":"202","line":2,"column":16,"nodeType":"165","messageId":"166","endLine":2,"endColumn":23},{"ruleId":"163","severity":1,"message":"203","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":21},{"ruleId":"163","severity":1,"message":"204","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":14},{"ruleId":"163","severity":1,"message":"205","line":7,"column":8,"nodeType":"165","messageId":"166","endLine":7,"endColumn":11},{"ruleId":"163","severity":1,"message":"206","line":8,"column":8,"nodeType":"165","messageId":"166","endLine":8,"endColumn":14},{"ruleId":"178","severity":1,"message":"207","line":27,"column":8,"nodeType":"180","endLine":27,"endColumn":21,"suggestions":"208"},{"ruleId":"163","severity":1,"message":"203","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":21},{"ruleId":"163","severity":1,"message":"209","line":4,"column":8,"nodeType":"165","messageId":"166","endLine":4,"endColumn":22},{"ruleId":"163","severity":1,"message":"210","line":5,"column":8,"nodeType":"165","messageId":"166","endLine":5,"endColumn":24},{"ruleId":"163","severity":1,"message":"173","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":15},{"ruleId":"163","severity":1,"message":"176","line":8,"column":86,"nodeType":"165","messageId":"166","endLine":8,"endColumn":92},{"ruleId":"163","severity":1,"message":"211","line":10,"column":8,"nodeType":"165","messageId":"166","endLine":10,"endColumn":26},{"ruleId":"163","severity":1,"message":"187","line":51,"column":11,"nodeType":"165","messageId":"166","endLine":51,"endColumn":16},{"ruleId":"163","severity":1,"message":"212","line":56,"column":20,"nodeType":"165","messageId":"166","endLine":56,"endColumn":29},{"ruleId":"178","severity":1,"message":"213","line":171,"column":8,"nodeType":"180","endLine":171,"endColumn":16,"suggestions":"214"},{"ruleId":"163","severity":1,"message":"215","line":1,"column":29,"nodeType":"165","messageId":"166","endLine":1,"endColumn":38},{"ruleId":"163","severity":1,"message":"216","line":1,"column":40,"nodeType":"165","messageId":"166","endLine":1,"endColumn":48},{"ruleId":"163","severity":1,"message":"217","line":14,"column":49,"nodeType":"165","messageId":"166","endLine":14,"endColumn":53},{"ruleId":"163","severity":1,"message":"175","line":4,"column":45,"nodeType":"165","messageId":"166","endLine":4,"endColumn":54},{"ruleId":"163","severity":1,"message":"218","line":4,"column":56,"nodeType":"165","messageId":"166","endLine":4,"endColumn":60},{"ruleId":"178","severity":1,"message":"219","line":88,"column":8,"nodeType":"180","endLine":88,"endColumn":10,"suggestions":"220"},{"ruleId":"163","severity":1,"message":"215","line":1,"column":38,"nodeType":"165","messageId":"166","endLine":1,"endColumn":47},{"ruleId":"163","severity":1,"message":"221","line":1,"column":49,"nodeType":"165","messageId":"166","endLine":1,"endColumn":55},{"ruleId":"163","severity":1,"message":"175","line":4,"column":45,"nodeType":"165","messageId":"166","endLine":4,"endColumn":54},{"ruleId":"163","severity":1,"message":"218","line":4,"column":56,"nodeType":"165","messageId":"166","endLine":4,"endColumn":60},{"ruleId":"163","severity":1,"message":"176","line":4,"column":86,"nodeType":"165","messageId":"166","endLine":4,"endColumn":92},"no-unused-vars","'turnip' is defined but never used.","Identifier","unusedVar","'Account' is defined but never used.","no-native-reassign",["222"],"no-negated-in-lhs",["223"],"'axios' is assigned a value but never used.","'noImage' is defined but never used.","'Link' is defined but never used.","'CardMedia' is defined but never used.","'Button' is defined but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'postId' and 'queueId'. Either include them or remove the dependency array.","ArrayExpression",["224"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'regex' is assigned a value but never used.","'buying' is assigned a value but never used.","'setBuying' is assigned a value but never used.","'setAuthUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authUser.email'. Either include it or remove the dependency array.",["225"],"'Redirect' is defined but never used.","'AuthContext' is defined but never used.",["226"],"'setID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.id' and 'receivedMessage'. Either include them or remove the dependency array.",["227"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'NavLink' is defined but never used.","'SignOutButton' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'button' is defined but never used.","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.",["228"],"'ChangePassword' is defined but never used.","'UploadProfilePic' is defined but never used.","'CurrentUserAccount' is defined but never used.","'setUserId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'multerImage'. Either include it or remove the dependency array.",["229"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'sell' is assigned a value but never used.","'Grid' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser.id', 'currentUser.inGameName', 'postId', and 'queueId'. Either include them or remove the dependency array.",["230"],"'useRef' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},"Update the dependencies array to be: [postId, queueId]",{"range":"245","text":"246"},"Update the dependencies array to be: [authUser.email]",{"range":"247","text":"248"},"Update the dependencies array to be: [postId, queueId, track]",{"range":"249","text":"250"},"Update the dependencies array to be: [currentUser.id, receivedMessage, setMessages]",{"range":"251","text":"252"},"Update the dependencies array to be: [currentUser.email, multerImage]",{"range":"253","text":"254"},"Update the dependencies array to be: [multerImage, userId]",{"range":"255","text":"256"},"Update the dependencies array to be: [currentUser.id, currentUser.inGameName, postId, queueId]",{"range":"257","text":"258"},[2440,2442],"[postId, queueId]",[3722,3724],"[authUser.email]",[2222,2229],"[postId, queueId, track]",[1996,2009],"[currentUser.id, receivedMessage, setMessages]",[1031,1044],"[currentUser.email, multerImage]",[6170,6178],"[multerImage, userId]",[2734,2736],"[currentUser.id, currentUser.inGameName, postId, queueId]"]