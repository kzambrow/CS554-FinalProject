[{"C:\\554workspace\\finalproject\\client\\src\\components\\App.js":"1","C:\\554workspace\\finalproject\\client\\src\\components\\UploadProfilePic.js":"2","C:\\554workspace\\finalproject\\client\\src\\index.js":"3","C:\\554workspace\\finalproject\\client\\src\\components\\Landing.js":"4","C:\\554workspace\\finalproject\\client\\src\\components\\Landings.js":"5","C:\\554workspace\\finalproject\\client\\src\\components\\Account.js":"6","C:\\554workspace\\finalproject\\client\\src\\components\\Navigation.js":"7","C:\\554workspace\\finalproject\\client\\src\\components\\SignIn.js":"8","C:\\554workspace\\finalproject\\client\\src\\components\\Chat.js":"9","C:\\554workspace\\finalproject\\client\\src\\components\\SignUp.js":"10","C:\\554workspace\\finalproject\\client\\src\\components\\PrivateRoute.js":"11","C:\\554workspace\\finalproject\\client\\src\\firebase\\Auth.js":"12","C:\\554workspace\\finalproject\\client\\src\\components\\SignOut.js":"13","C:\\554workspace\\finalproject\\client\\src\\components\\ChangePassword.js":"14","C:\\554workspace\\finalproject\\client\\src\\components\\SocialSignIn.js":"15","C:\\554workspace\\finalproject\\client\\src\\firebase\\FirebaseFunctions.js":"16","C:\\554workspace\\finalproject\\client\\src\\firebase\\Firebase.js":"17","C:\\554workspace\\finalproject\\client\\src\\reportWebVitals.js":"18","C:\\554workspace\\finalproject\\client\\src\\components\\Post.js":"19"},{"size":1150,"mtime":1608054921696,"results":"20","hashOfConfig":"21"},{"size":2133,"mtime":1608097045097,"results":"22","hashOfConfig":"21"},{"size":530,"mtime":1608003471252,"results":"23","hashOfConfig":"21"},{"size":2983,"mtime":1608003471243,"results":"24","hashOfConfig":"21"},{"size":3056,"mtime":1608003471243,"results":"25","hashOfConfig":"21"},{"size":9066,"mtime":1608062692486,"results":"26","hashOfConfig":"21"},{"size":1573,"mtime":1607664778497,"results":"27","hashOfConfig":"21"},{"size":3040,"mtime":1608003471245,"results":"28","hashOfConfig":"21"},{"size":3410,"mtime":1608003471241,"results":"29","hashOfConfig":"21"},{"size":2707,"mtime":1608003471247,"results":"30","hashOfConfig":"21"},{"size":499,"mtime":1606360438330,"results":"31","hashOfConfig":"21"},{"size":1682,"mtime":1608003471249,"results":"32","hashOfConfig":"21"},{"size":260,"mtime":1606360438334,"results":"33","hashOfConfig":"21"},{"size":2672,"mtime":1608003471240,"results":"34","hashOfConfig":"21"},{"size":739,"mtime":1608003471247,"results":"35","hashOfConfig":"21"},{"size":1641,"mtime":1608003471251,"results":"36","hashOfConfig":"21"},{"size":537,"mtime":1607998502505,"results":"37","hashOfConfig":"21"},{"size":375,"mtime":1606360438355,"results":"38","hashOfConfig":"21"},{"size":4489,"mtime":1608054921697,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1yyacow",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},"C:\\554workspace\\finalproject\\client\\src\\components\\App.js",[],["89","90"],"C:\\554workspace\\finalproject\\client\\src\\components\\UploadProfilePic.js",["91","92"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport '../App.css';\r\n//import DefaultImg from \"../public/imgs/turnip.png\";\r\n\r\nconst axios = require('axios');\r\nfunction UploadProfilePic() {\r\n    \r\n    const { currentUser } = useContext(AuthContext);\r\n    const [multerImage, setMulterImage] = useState(\"/imgs/turnip.png\");\r\n\r\n    useEffect(() => {\r\n        async function getImage() {\r\n            try {\r\n                const profile = await axios.get(`http://localhost:5000/images/${currentUser.email}`); \r\n                let newimageSource = profile.data.data.imageData;\r\n                let finalimageSource = newimageSource.replaceAll(\"\\\\\", \"/\").replace(\"../client/public\", \"\");\r\n                \r\n                setMulterImage(finalimageSource);\r\n                console.log(multerImage);\r\n            } catch (e) {\r\n                setMulterImage(\"/imgs/turnip.png\");\r\n                console.log(e);\r\n            }\r\n        }\r\n        getImage();\r\n    }, [multerImage]);\r\n\r\n    const uploadImage = (e) => {\r\n        let imageFormObj = new FormData();\r\n        imageFormObj.append(\"userEmail\", currentUser.email);\r\n        imageFormObj.append(\"imageName\", \"multer-image-\" + Date.now());\r\n        imageFormObj.append(\"imageData\", e.target.files[0]);\r\n        axios.delete(`http://localhost:5000/images/${currentUser.email}`)\r\n\r\n        axios.post('http://localhost:5000/images/uploadmulter', imageFormObj)\r\n            .then((data) => {\r\n                if (data.data.success) {\r\n                    alert(\"Image successfully uploaded\");\r\n                    setMulterImage(\"/imgs/turnip.png\");\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                alert(err);\r\n                setMulterImage(\"/imgs/turnip.png\");\r\n            })\r\n        };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input type=\"file\"\r\n                onChange={uploadImage}\r\n            />\r\n            </form>\r\n            <img src={(multerImage)} alt=\"upload-image\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadProfilePic",["93","94"],"C:\\554workspace\\finalproject\\client\\src\\index.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\Landing.js",["95"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport noImage from '../img/no-image.png';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport '../App.css';\r\n\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n\t\tmarginRight: 'auto',\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n\t},\r\n\ttitleHead: {\r\n\t\tborderBottom: '1px solid #1e8678',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tgrid: {\r\n\t\tflexGrow: 1,\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\tmedia: {\r\n\t\theight: '100%',\r\n\t\twidth: '100%'\r\n\t},\r\n\tbutton: {\r\n\t\tcolor: '#1e8678',\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 12\r\n\t}\r\n});\r\nconst Landing = (props) => {\r\n\tconst regex = /(<([^>]+)>)/gi;\r\n\tconst classes = useStyles();\r\n\tconst [ loading, setLoading ] = useState(true);\r\n\tconst [ showsData, setShowsData ] = useState(undefined);\r\n\tconst [visible, setVisible] = useState(6);\r\n\t\r\n\tlet card = null;\r\n\r\n\t\r\n\tuseEffect(() => {\r\n\t\r\n\t\tasync function fetchData() {\r\n\t\t\ttry {\r\n\t\t\t\t//getting data for main page\r\n\t\t\t\tconst { data } = await axios.get('http://localhost:5000/post/buy');\r\n\t\t\t\tsetShowsData(data);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\t\r\n\t\r\n\tconst showMore = () => {\r\n\t\tsetVisible((prevValue) => prevValue + 6);\r\n\t}\r\n\t\r\n\tconst buildCard = (show) => {\r\n\t\treturn (\r\n\t\t\t<Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id}>\r\n\t\t\t\t<Card className={classes.card} variant='outlined'>\r\n\t\t\t\t\t<CardActionArea>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\t\t\t\tcomponent='img'\r\n\t\t\t\t\t\t\t\timage={show.image && show.image.original ? show.image.original : noImage}\r\n\t\t\t\t\t\t\t\ttitle='show image'\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<CardContent>\r\n\t\t\r\n\t\t\t\t\t\t\t\t<Typography variant='body2' color='textSecondary' component='p'>\r\n\t\t\t\t\t\t\t\t\tType: Buying\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPosted by: {show.creator} \r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPrice: {show.price}\r\n\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tTicket Price: {show.ticketPrice}\r\n\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tRating: {show.rating}\r\n\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tdatePosted: {show.Date}\r\n\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\texpirationTime: {show.endTime}\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</CardContent>\r\n\r\n\t\t\t\t\t</CardActionArea>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t};\r\n\r\n\r\n\t\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Loading....</h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} \r\n\telse{\r\n\t\tcard =\r\n\t\tshowsData &&\r\n\t\tshowsData.data.slice(0,visible).map((show) => {\r\n\t\t\treturn buildCard(show);\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button> <Link to =  {\"/sell\" }> Selling </Link> </Button>\r\n\t\t\t\t\r\n\t\t\t\t<Grid container className={classes.grid} spacing={5}>\r\n\t\t\t\t{card}\r\n\t\t\t\t</Grid>\r\n\t\t\t<button onClick = {showMore}>Load More</button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Landing;","C:\\554workspace\\finalproject\\client\\src\\components\\Landings.js",["96"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport noImage from '../img/no-image.png';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport '../App.css';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n\t\tmarginRight: 'auto',\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n\t},\r\n\ttitleHead: {\r\n\t\tborderBottom: '1px solid #1e8678',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tgrid: {\r\n\t\tflexGrow: 1,\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\tmedia: {\r\n\t\theight: '100%',\r\n\t\twidth: '100%'\r\n\t},\r\n\tbutton: {\r\n\t\tcolor: '#1e8678',\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 12\r\n\t}\r\n});\r\nconst Landings = (props) => {\r\n\tconst regex = /(<([^>]+)>)/gi;\r\n\tconst classes = useStyles();\r\n \tconst [ loading, setLoading ] = useState(true);\r\n\tconst [ showsData, setShowsData ] = useState(undefined);\r\n\tconst [visible, setVisible] = useState(6);\r\n\t\r\n\tlet card = null;\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('on load useeffect');\r\n\t\tasync function fetchData() {\r\n\t\t\ttry {\r\n\t\t\t\t//Assuming this is the address of the database (Will change if different)\r\n\t\t\t\tconst { data } = await axios.get('http://localhost:5000/post/sell');\r\n\t\t\t\tsetShowsData(data);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\r\n\r\n\t\r\n\tconst showMore = () => {\r\n\t\tsetVisible((prevValue) => prevValue + 6);\r\n\t}\r\n\t\r\n\r\n\tconst buildCard = (show) => {\r\n\t\treturn (\r\n\t\t\t<Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id}>\r\n\t\t\t\t<Card className={classes.card} variant='outlined'>\r\n\t\t\t\t\t<CardActionArea>\r\n\r\n\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\t\t\t\tcomponent='img'\r\n\t\t\t\t\t\t\t\timage={show.image && show.image.original ? show.image.original : noImage}\r\n\t\t\t\t\t\t\t\ttitle='show image'\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<CardContent>\r\n\r\n\t\t\t\t\t\t\t\t<Typography variant='body2' color='textSecondary' component='p'>\r\n\t\t\t\t\t\t\t\t\tType: Selling\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPosted by: {show.creator} \r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPrice: {show.price}\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tTicket Price: {show.ticketPrice}\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tRating: {show.rating}\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tdatePosted: {show.Date}\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\texpirationTime: {show.endTime}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\r\n\t\t\t\t\t</CardActionArea>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t};\r\n\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Loading....</h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else{\r\n\t\tcard =\r\n\t\tshowsData &&\r\n\t\tshowsData.data.slice(0,visible).map((show) => {\r\n\t\t\treturn buildCard(show);\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button> <Link to =  {\"/\" }> Buying </Link> </Button>\r\n\t\t\t\t\r\n\t\t\t\t<Grid container className={classes.grid} spacing={5}>\r\n\t\t\t\t{card}\r\n\t\t\t\t</Grid>\r\n\t\t\t<Button onClick = {showMore}>Load More</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Landings;","C:\\554workspace\\finalproject\\client\\src\\components\\Account.js",["97","98","99","100","101","102"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport SignOutButton from './SignOut';\r\nimport '../App.css';\r\nimport ChangePassword from './ChangePassword';\r\nimport UploadProfilePic from './UploadProfilePic';\r\nimport noImage from '../img/no-image.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { AuthContext } from '../firebase/Auth';\r\n\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n\t\tmarginRight: 'auto',\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n\t},\r\n\ttitleHead: {\r\n\t\tborderBottom: '1px solid #1e8678',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tgrid: {\r\n\t\tflexGrow: 1,\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\tmedia: {\r\n\t\theight: '100%',\r\n\t\twidth: '100%'\r\n\t},\r\n\tbutton: {\r\n\t\tcolor: '#1e8678',\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 12\r\n\t}\r\n});\r\n\r\n//TODO\r\n//provide links to change password\r\n//display user info\r\n//display different information for authenticated vs non authenticated\r\n//ask about updating user schema to include island code, nintendo ID\r\n\r\nfunction Account(props){\r\n    const ProfilePosts = (props) => {\r\n        const regex = /(<([^>]+)>)/gi;\r\n        const classes = useStyles();\r\n        const [ loading, setLoading ] = useState(true);\r\n        const [ buying, setBuying ] = useState(true);\r\n        //const [ searchData, setSearchData ] = useState(undefined);\r\n        const [ profileData, setProfileData ] = useState(undefined);\r\n        const [ searchTerm, setSearchTerm ] = useState('');\r\n\r\n        useEffect(() => {\r\n            async function fetchData() {\r\n                try {\r\n                    //getting data for user profile\r\n                    const { data } = await axios.get('http://localhost:5000/post/buy');\r\n                    setProfileData(data);\r\n                    setLoading(false);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            }\r\n            fetchData();\r\n        }, []);\r\n    \r\n        //set Data for the previous Page\r\n        // const setPrevPage = () => {\r\n        //     if (pageData.page >= 1) {\r\n        //       const prevData = {\r\n        //         next: pageData.page,\r\n        //         previous: pageData.page - 2,\r\n        //         page: pageData.page - 1,\r\n                \r\n        //       };\r\n        //       setPageData(prevData);\r\n        //     }\r\n        //   };\r\n        \r\n        //   // Set Data for next Page\r\n        //   const setNextPage = () => {\r\n        //       const nextData = {\r\n        //         previous: pageData.page,\r\n        //         next: pageData.page + 2,\r\n        //         page: pageData.page + 1,\r\n                \r\n        //       };\r\n        //       setPageData(nextData);\r\n        //   };\r\n    \r\n        //   const DoPagination = (\r\n        //     <div>\r\n        //     <Button>\r\n        //     <Link\r\n        //       className=\"btn btn-dark\"\r\n        //       to={\"/page/\" + pageData.previous}\r\n        //       onClick={setPrevPage}\r\n        //     >\r\n        //       Previous\r\n        //     </Link>\r\n        //     </Button>\r\n            \r\n        //     <Button>\r\n        //     <Link\r\n        //       className=\"btn btn-dark\"\r\n        //       to={\"/page/\" + pageData.next}\r\n        //       onClick={setNextPage}\r\n        //     >\r\n        //       Next\r\n        //     </Link>\r\n        //     </Button>\r\n        //     </div>\r\n        //   );\r\n    \r\n        //   const DoPaginationf = (\r\n        //     <Button>\r\n        //     <Link\r\n        //       className=\"btn btn-dark\"\r\n        //       to={\"/page/\" + pageData.next}\r\n        //       onClick={setNextPage}\r\n        //     >\r\n        //       Next\r\n        //     </Link>\r\n        //     </Button>\r\n        //   );\r\n        \r\n        const buildCard = (show) => {\r\n            return (\r\n                <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id}>\r\n                    <Card className={classes.card} variant='outlined'>\r\n                        <CardActionArea>\r\n                            \r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    component='img'\r\n                                    image={show.image && show.image.original ? show.image.original : noImage}\r\n                                    title='show image'\r\n                                />\r\n    \r\n                                <CardContent>\r\n            \r\n                                    <Typography variant='body2' color='textSecondary' component='p'>\r\n                                        Type: {show.sell ? \"Selling\": \"Buying\"}\r\n                                        <br></br>\r\n                                        Price: {show.price}\r\n                                        <br></br>\r\n                                        Ticket Price: {show.ticketPrice}\r\n                                        <br></br>\r\n                                        Rating: {show.rating}\r\n                                        <br></br>\r\n                                        datePosted: {show.Date}\r\n                                        <br></br>\r\n                                        expirationTime: {show.endTime}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            \r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n            );\r\n        };\r\n        \r\n        let card = null;\r\n        card =\r\n            profileData &&\r\n            profileData.data.map((show) => {\r\n                return buildCard(show);\r\n        });\r\n        if (loading) {\r\n            return (\r\n                <div>\r\n                    <h2>Loading....</h2>\r\n                </div>\r\n            );\r\n        // } else if(pageData.page >= 1) {\r\n        //     return (\r\n        //         <div>\r\n        //             <br />\r\n        //             <br />\r\n        //             <Button> <Link to =  {\"/sell\" }> Selling </Link> </Button>\r\n        //             {DoPagination}\r\n        //             <Grid container className={classes.grid} spacing={5}>\r\n        //                 {card}\r\n        //             </Grid>\r\n        //         </div>\r\n        //     );\r\n        }\r\n        else{\r\n            return (\r\n                //This only appears on Page 1 \r\n                <div>\r\n                    <br />\r\n                    <br />\r\n                    <Button> <Link to =  {\"/sell\" }> Selling </Link> </Button>\r\n                    {/* {DoPaginationf} */}\r\n                    <Grid container className={classes.grid} spacing={5}>\r\n                        {card}\r\n                    </Grid>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n    function AccountInfo(){\r\n        const {currentUser}= useContext(AuthContext);\r\n        const [userData, setUserData] = useState(undefined); \r\n\r\n        useEffect(() => {\r\n            async function getData(){\r\n                const userInfo = await axios.get(`http://localhost:5000/user/email/${currentUser.email}`); \r\n                //console.log(userInfo); \r\n                setUserData(userInfo); \r\n                console.log(userInfo);\r\n            };\r\n            getData();\r\n        }, []);\r\n\r\n        const classes = useStyles();\r\n        console.log(\"userData is \", userData);\r\n        let card = null; \r\n        \r\n        userData && (card = \r\n            <Card className={classes.card} variant='outlined'>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        component='img'\r\n                        image={noImage}\r\n                        title='show image'\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant='body2' color='textSecondary' component='p'>\r\n                            <br></br>\r\n                            Username: {userData.data.data.displayName}\r\n                            <br></br>\r\n                            Island Code: ABCD \r\n                            <br></br>\r\n                            Ingame Name: GAMER1\r\n                            <br></br>\r\n                            Nintendo ID: 1234567 \r\n\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        );\r\n        \r\n        return(\r\n            <Grid container className={classes.grid} spacing={5}>\r\n                {card}\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <h2>Account Page</h2>\r\n            <ProfilePosts />\r\n            <ChangePassword />\r\n            <SignOutButton />\r\n            <AccountInfo />\r\n            <UploadProfilePic />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Account","C:\\554workspace\\finalproject\\client\\src\\components\\Navigation.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\SignIn.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\Chat.js",["103","104"],"import React, {useContext, useState, useEffect, useRef} from \"react\";\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport io from \"socket.io-client\";\r\nimport '../App.css';\r\n\r\n\r\nconst Chat = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [ID, setID] = useState(\"\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const socketRef = useRef();\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io('http://localhost:5000', {\r\n            transports: ['websocket'],\r\n            upgrade: false\r\n        });\r\n        socketRef.current.on(\"RECEIVE_MESSAGE\", function(message) {\r\n            receivedMessage(message);\r\n        });\r\n        return () => {\r\n            socketRef.current.off(\"disconnect\");\r\n        };\r\n\r\n        \r\n    }, [setMessages])\r\n\r\n\r\n    function receivedMessage(message) {\r\n        setMessages(oldMessages => [...oldMessages, message]);\r\n        console.log(message);\r\n        scrollDown();\r\n    }\r\n\r\n    function sendMessage(e) {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            name: currentUser.displayName,\r\n            body: message,\r\n            id: ID,\r\n        };\r\n        socketRef.current.emit(\"SEND_MESSAGE\", messageObject);\r\n        setMessage(\"\");\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    function scrollDown() {\r\n        var objDiv = document.getElementById(\"chat\");\r\n        objDiv.scrollTop = objDiv.scrollHeight;\r\n    }\r\n    return (\r\n        <div>\r\n            <div id=\"chat\" className=\"chat-box\">\r\n                {messages.map((message, index) => {\r\n                    if (message.id === ID) {\r\n                        if (currentUser.displayName === message.name) {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className=\"chat-user\">\r\n                                        {message.name}\r\n                                        <br/>\r\n                                        {message.body}\r\n                                        <br/>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className=\"chat-other\">\r\n                                        {message.name}\r\n                                        <br/>\r\n                                        {message.body}\r\n                                        <br/>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        \r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <div>\r\n                                {message.body}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <form onSubmit={sendMessage}>\r\n                <textarea className=\"chat-text-field\" value={message} onChange={handleChange} placeholder=\"Message...\" />\r\n                <button className=\"chat-submit\">Send</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Chat;","C:\\554workspace\\finalproject\\client\\src\\components\\SignUp.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\PrivateRoute.js",[],"C:\\554workspace\\finalproject\\client\\src\\firebase\\Auth.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\SignOut.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\ChangePassword.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\SocialSignIn.js",[],"C:\\554workspace\\finalproject\\client\\src\\firebase\\FirebaseFunctions.js",["105"],"import firebase from 'firebase/app';\r\nconst axios = require('axios');\r\n\r\nasync function doCreateUserWithEmailAndPassword(email, password, displayName) {\r\n    await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n    firebase.auth().currentUser.updateProfile({ displayName: displayName });\r\n\r\n}\r\n\r\nasync function doChangePassword(email, oldPassword, newPassword) {\r\n    let credential = firebase.auth.EmailAuthProvider.credential(\r\n        email,\r\n        oldPassword\r\n    );\r\n    await firebase.auth().currentUser.reauthenticateWithCredential(credential);\r\n    await firebase.auth().currentUser.updatePassword(newPassword);\r\n    await doSignOut();\r\n}\r\n\r\nasync function doSignInWithEmailAndPassword(email, password) {\r\n    await firebase.auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nasync function doSocialSignIn(provider) {\r\n    let socialProvider = null;\r\n    if (provider === 'google') {\r\n        socialProvider = new firebase.auth.GoogleAuthProvider();\r\n    } else if (provider === 'facebook') {\r\n        socialProvider = new firebase.auth.FacebookAuthProvider();\r\n    }\r\n    await firebase.auth().signInWithPopup(socialProvider);\r\n}\r\n\r\nasync function doPasswordReset(email) {\r\n    await firebase.auth().sendPasswordResetEmail(email);\r\n}\r\n\r\nasync function doPasswordUpdate(password) {\r\n    await firebase.auth().updatePassword(password);\r\n}\r\n\r\nasync function doSignOut() {\r\n    await firebase.auth().signOut();\r\n}\r\n\r\nexport {\r\n    doCreateUserWithEmailAndPassword,\r\n    doSocialSignIn,\r\n    doSignInWithEmailAndPassword,\r\n    doPasswordReset,\r\n    doPasswordUpdate,\r\n    doSignOut,\r\n    doChangePassword\r\n};","C:\\554workspace\\finalproject\\client\\src\\firebase\\Firebase.js",[],["106","107"],"C:\\554workspace\\finalproject\\client\\src\\reportWebVitals.js",[],["108","109"],"C:\\554workspace\\finalproject\\client\\src\\components\\Post.js",["110"],"import React, { useContext, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n//import { doCreateUserWithEmailAndPassword } from '../firebase/FirebaseFunctions';\r\nimport { AuthContext } from '../firebase/Auth';\r\n//import SocialSignIn from './SocialSignIn';\r\nconst axios = require('axios');\r\n\r\nfunction Post() {\r\n    const { currentUser } = useContext(AuthContext);\r\n    //const [pwMatch, setPwMatch] = useState('');\r\n\r\n    const handlePost = async (e) => {\r\n        e.preventDefault();\r\n        const { price, userId, ticketPrice, islandCode, sellTag, description, endTime } = e.target.elements;\r\n\r\n\r\n        try {\r\n            await axios.post('http://localhost:5000/Post/addPost', {\r\n                price: price.value,\r\n                userId: userId.value,\r\n                ticketPrice: ticketPrice.value,\r\n                islandCode: islandCode.value,\r\n                sellTag: sellTag.value,\r\n                description: description.value,\r\n                endTime: endTime.value\r\n            })\r\n\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    };\r\n\r\n    if (!currentUser) {\r\n        return <Redirect to=\"/signup\" />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"post-main\">\r\n            <p className=\"post\" align=\"center\">Post</p>\r\n\r\n            <form className=\"form2\" onSubmit={handlePost}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Price\"\r\n                        name=\"price\"\r\n                        id=\"price\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"UserID\"\r\n                        name=\"userId\"\r\n                        id=\"userId\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Ticket Price\"\r\n                        name=\"ticketPrice\"\r\n                        id=\"ticketPrice\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Island Code\"\r\n                        name=\"islandCode\"\r\n                        id=\"islandCode\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Sell Tag\"\r\n                        name=\"sellTag\"\r\n                        id=\"sellTag\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Description\"\r\n                        name=\"description\"\r\n                        id=\"description\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"End Time\"\r\n                        name=\"endTime\"\r\n                        id=\"endTime\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className=\"submit\" id=\"submitButton\" name=\"submitButton\" type=\"submit\">\r\n                    Post\r\n        </button>\r\n            </form>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n",{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":27,"column":8,"nodeType":"117","endLine":27,"endColumn":21,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":58,"column":13,"nodeType":"121","endLine":58,"endColumn":59},{"ruleId":"111","replacedBy":"122"},{"ruleId":"113","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":38,"column":8,"nodeType":"126","messageId":"127","endLine":38,"endColumn":13},{"ruleId":"124","severity":1,"message":"125","line":39,"column":8,"nodeType":"126","messageId":"127","endLine":39,"endColumn":13},{"ruleId":"124","severity":1,"message":"125","line":50,"column":15,"nodeType":"126","messageId":"127","endLine":50,"endColumn":20},{"ruleId":"124","severity":1,"message":"128","line":53,"column":17,"nodeType":"126","messageId":"127","endLine":53,"endColumn":23},{"ruleId":"124","severity":1,"message":"129","line":53,"column":25,"nodeType":"126","messageId":"127","endLine":53,"endColumn":34},{"ruleId":"124","severity":1,"message":"130","line":56,"column":17,"nodeType":"126","messageId":"127","endLine":56,"endColumn":27},{"ruleId":"124","severity":1,"message":"131","line":56,"column":29,"nodeType":"126","messageId":"127","endLine":56,"endColumn":42},{"ruleId":"115","severity":1,"message":"116","line":220,"column":12,"nodeType":"117","endLine":220,"endColumn":14,"suggestions":"132"},{"ruleId":"124","severity":1,"message":"133","line":9,"column":16,"nodeType":"126","messageId":"127","endLine":9,"endColumn":21},{"ruleId":"115","severity":1,"message":"134","line":27,"column":8,"nodeType":"117","endLine":27,"endColumn":21,"suggestions":"135"},{"ruleId":"124","severity":1,"message":"136","line":2,"column":7,"nodeType":"126","messageId":"127","endLine":2,"endColumn":12},{"ruleId":"111","replacedBy":"137"},{"ruleId":"113","replacedBy":"138"},{"ruleId":"111","replacedBy":"139"},{"ruleId":"113","replacedBy":"140"},{"ruleId":"124","severity":1,"message":"141","line":1,"column":29,"nodeType":"126","messageId":"127","endLine":1,"endColumn":37},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.","ArrayExpression",["144"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["142"],["143"],"no-unused-vars","'regex' is assigned a value but never used.","Identifier","unusedVar","'buying' is assigned a value but never used.","'setBuying' is assigned a value but never used.","'searchTerm' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.",["145"],"'setID' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'receivedMessage'. Either include it or remove the dependency array.",["146"],"'axios' is assigned a value but never used.",["142"],["143"],["142"],["143"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},"Update the dependencies array to be: [currentUser.email, multerImage]",{"range":"153","text":"154"},"Update the dependencies array to be: [currentUser.email]",{"range":"155","text":"156"},"Update the dependencies array to be: [receivedMessage, setMessages]",{"range":"157","text":"158"},[1031,1044],"[currentUser.email, multerImage]",[7497,7499],"[currentUser.email]",[821,834],"[receivedMessage, setMessages]"]