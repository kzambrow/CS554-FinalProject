[{"C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\index.js":"1","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\EditAccount.js":"2","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\Landing.js":"3","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\GetCode.js":"4","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\SignUp.js":"5","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\Post.js":"6","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\Account.js":"7","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\PostPage.js":"8","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\Chat.js":"9","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\Navigation.js":"10","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\SignIn.js":"11","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\Landings.js":"12","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\ChangePassword.js":"13","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\JoinQueue.js":"14"},{"size":578,"mtime":1608320581336,"results":"15","hashOfConfig":"16"},{"size":3872,"mtime":1608432293200,"results":"17","hashOfConfig":"16"},{"size":3454,"mtime":1608498583873,"results":"18","hashOfConfig":"16"},{"size":3910,"mtime":1608256338544,"results":"19","hashOfConfig":"16"},{"size":3319,"mtime":1608499377008,"results":"20","hashOfConfig":"16"},{"size":5178,"mtime":1608512333657,"results":"21","hashOfConfig":"16"},{"size":10452,"mtime":1608512758820,"results":"22","hashOfConfig":"16"},{"size":5285,"mtime":1608417513623,"results":"23","hashOfConfig":"16"},{"size":5320,"mtime":1608498583871,"results":"24","hashOfConfig":"16"},{"size":1558,"mtime":1608429248706,"results":"25","hashOfConfig":"16"},{"size":2068,"mtime":1608498583874,"results":"26","hashOfConfig":"16"},{"size":3218,"mtime":1608498583873,"results":"27","hashOfConfig":"16"},{"size":2672,"mtime":1608239012105,"results":"28","hashOfConfig":"16"},{"size":2602,"mtime":1608256338546,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"s1ckud",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},"C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\index.js",[],["67","68"],"C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\EditAccount.js",["69"],"import React, { useContext } from 'react';\r\nimport { Redirect, NavLink, Link } from 'react-router-dom';\r\nimport { AuthContext } from '../firebase/Auth';\r\n//import SocialSignIn from './SocialSignIn';\r\nimport UploadProfilePic from './UploadProfilePic';\r\nconst axios = require('axios');\r\n\r\nfunction EditAccount() {\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n    const handleEdit = async (e) => {\r\n        //console.log(currentUser);\r\n        e.preventDefault();\r\n        const { Username, islandName, inGameName } = e.target.elements;\r\n        let user = Username.value;\r\n        let island = islandName.value;\r\n        let inGame = inGameName.value;\r\n        if (Username.value === \"\") {\r\n            user = currentUser.displayName;\r\n        }\r\n        if (islandName.value === \"\") {\r\n            island = currentUser.islandName;\r\n        }\r\n        if (inGameName.value === \"\") {\r\n            inGame = currentUser.inGameName;\r\n        }\r\n        if (islandName.value === \"\" && currentUser.islandName === undefined) {\r\n            island = \"No Name\";\r\n        }\r\n        if (inGameName.value === \"\" && currentUser.inGameName === undefined) {\r\n            inGame = \"No Name\";\r\n        }\r\n        \r\n        await axios.post('http://localhost:5000/user/editUser', {\r\n            id: currentUser.id,\r\n            displayName: user,\r\n            inGameName: inGame,\r\n            islandName: island\r\n        })\r\n        .then((data) => {\r\n            if (data.data.success) {\r\n                alert(\"Profile successfully updated!\");\r\n                //setMulterImage(\"/imgs/turnip.png\");\r\n\r\n            }\r\n        })\r\n\r\n        .catch ((error) => {\r\n            alert(error);\r\n        })\r\n    };\r\n\r\n    if (!currentUser) {\r\n        return <Redirect to=\"/signup\" />;\r\n    }\r\n\r\n    return (\r\n        <div className=\"editAcc\">\r\n            <div class=\"center\">\r\n                    <UploadProfilePic />\r\n            </div>\r\n            <p className=\"sign center\" >Edit Account Info</p>\r\n            <br />\r\n            <form className=\"form2\" onSubmit={handleEdit}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label for=\"Username\">\r\n                    </label>\r\n                    <input\r\n                        className=\"un form-control center\"\r\n                        type=\"text\"\r\n                        \r\n                        placeholder=\"Username\"\r\n                        name=\"Username\"\r\n                        id=\"Username\"\r\n                    />\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                <label for=\"inGameName\">\r\n                </label>\r\n                    <input\r\n                        className=\"un form-control center\"\r\n                        type=\"text\"\r\n                        \r\n                        placeholder=\"In Game Name\"\r\n                        name=\"inGameName\"\r\n                        id=\"inGameName\"\r\n                    />\r\n                </div>\r\n                <br />\r\n                <div className=\"form-group\">\r\n                <label for=\"islandName\">\r\n                </label>\r\n                    <input\r\n                        className=\"un form-control center\"\r\n                        type=\"text\"\r\n                        \r\n                        placeholder=\"Island Name\"\r\n                        name=\"islandName\"\r\n                        id=\"islandName\"\r\n                    />\r\n                </div>\r\n                <br />\r\n                <button className=\"submit\" id=\"submitButton\" name=\"submitButton\" type=\"submit\">\r\n                    Save Info\r\n                </button>\r\n            </form>\r\n            <br />\r\n            <Link exact to=\"/changePassword\">\r\n                    Change your Password\r\n            </Link>\r\n            <br />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditAccount;\r\n",["70","71"],"C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\Landing.js",["72","73"],"C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\GetCode.js",["74","75","76","77","78","79","80"],"C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\SignUp.js",[],"C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\Post.js",["81","82","83"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n//import { doCreateUserWithEmailAndPassword } from '../firebase/FirebaseFunctions';\r\nimport { AuthContext } from '../firebase/Auth';\r\n//import SocialSignIn from './SocialSignIn';\r\nconst axios = require('axios');\r\n\r\nfunction Post() {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [ posted, setPosted ] = useState(false);\r\n    var button;\r\n\r\n    const handlePost = async (e) => {\r\n        e.preventDefault();\r\n        const { price, ticketPrice, islandCode, sell, description, endTime } = e.target.elements;\r\n\r\n\r\n        try {\r\n            await axios.post('http://localhost:5000/Post/addPost', {\r\n                creator: currentUser.id,\r\n                sell: button,\r\n                price: price.value,\r\n                ticketPrice: ticketPrice.value,\r\n                islandCode: islandCode.value,\r\n                description: description.value,\r\n                endTime: endTime.value\r\n            })\r\n            setPosted(true);\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    };\r\n\r\n    if (!currentUser) {\r\n        return <Redirect to=\"/signup\" />;\r\n    }\r\n\r\n    if (posted) {\r\n        return <Redirect to={\"/account/\" + currentUser.id} />;\r\n    }\r\n\r\n    //const redir = async () => {\r\n    //    return <Redirect to=\"/home\" />;\r\n    //}\r\n\r\n    const sellButton = async () => {\r\n        button = true;\r\n    }\r\n\r\n    const buyButton = async () => {\r\n        button = false;\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-post \">\r\n            <h1 className=\"post center\">Post</h1>\r\n            <br>\r\n            </br>\r\n\r\n            <form className=\"form2 center\" onSubmit={handlePost}>\r\n                <div className=\"form-group center\">\r\n                <label for=\"price\">Price  <br></br></label>\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"number\"\r\n                        name=\"price\"\r\n                        id=\"price\"\r\n                        required\r\n                    />\r\n                </div>\r\n                {/* <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Creator\"\r\n                        name=\"creator\"\r\n                        id=\"creator\"\r\n                        required\r\n                    />\r\n                </div> */}\r\n                <div className=\"form-group center\">\r\n                <label for=\"ticketPrice\">Items Required<br></br></label>\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                       \r\n                       \r\n                        name=\"ticketPrice\"\r\n                        id=\"ticketPrice\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group center\">\r\n                    <label for = \"islandCode\"> Island Code <br></br></label>\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                       \r\n                        \r\n                        name=\"islandCode\"\r\n                        id=\"islandCode\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group center\">\r\n                </div>\r\n                <div id=\"sell\" class=\"dropdown\" >\r\n                    <div className=\"radio center\">\r\n                        <label>\r\n                            <input name=\"test\" type=\"radio\" onChange={sellButton} />Selling</label>\r\n                        <label>\r\n                            <input name=\"test\" type=\"radio\" onChange={buyButton} />Buying</label>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"form-group center\">\r\n                    <label for = \"description\">Description <br></br></label>\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        \r\n                        \r\n                        name=\"description\"\r\n                        id=\"description\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group center\">\r\n                    <label for = \"endTime\"> End Time:</label>\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"datetime-local\"\r\n                    \r\n                        name=\"endTime\"\r\n                        id=\"endTime\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className=\"submit center\" id=\"submitButton\" name=\"submitButton\" type=\"submit\" >\r\n                    Post\r\n                </button>\r\n            </form>\r\n            <br />\r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\Account.js",["84","85","86","87","88","89","90","91","92","93"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport SignOutButton from './SignOut';\r\nimport '../App.css';\r\nimport ChangePassword from './ChangePassword';\r\nimport UploadProfilePic from './UploadProfilePic';\r\nimport noImage from '../img/no-image.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport CurrentUserAccount from './CurrentUserAccount';\r\n\r\n\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        marginTop: 100,\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n    },\r\n    card2: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n        marginRight: 0,\r\n        marginTop: 0,\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n    },\r\n\ttitleHead: {\r\n\t\tborderBottom: '1px solid #1e8678',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tgrid: {\r\n\t\tflexGrow: 1,\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\tmedia: {\r\n\t\theight: '100%',\r\n\t\twidth: '100%'\r\n\t},\r\n});\r\n\r\n//TODO\r\n//Add nintendo id attribute to user \r\n\r\nfunction Account(props){\r\n    //console.log(props.match.params.id); \r\n    const regex = /(<([^>]+)>)/gi;\r\n    const classes = useStyles();\r\n    const [loading, setLoading ] = useState(true);\r\n    const [profilePost, setProfilePost ] = useState(undefined); \r\n    const [userData, setUserData] = useState(undefined); \r\n    const [userId, setUserId] = useState(props.match.params.id); \r\n    const [multerImage, setMulterImage] = useState(\"/imgs/turnip.png\");\r\n    const [postId, setPostId] = useState(undefined);\r\n    const[isDelete, setIsDelete] = useState(false); \r\n    const { currentUser } = useContext(AuthContext);\r\n    //console.log(currentUser.id); \r\n\r\n    //Get all the posts posted by the user\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const { data } = await axios.get(`http://localhost:5000/post/byUser/${userId}`);\r\n                setProfilePost(data);\r\n                setLoading(false);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [userId, isDelete]);\r\n    \r\n    useEffect(() =>{\r\n        async function deletePost(){\r\n                console.log('delete post id is ', userId);\r\n                try {\r\n                    const post = await axios.get(`http://localhost:5000/post/byUser/${userId}`); \r\n                    if(post){\r\n                    setPostId(post.data.data._id);\r\n                    }\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            };\r\n            deletePost();\r\n    }, [isDelete]);\r\n    \r\n    useEffect(() =>{\r\n        async function deletePost2(){\r\n            try{\r\n                if(postId){\r\n                    await axios.delete(`http://localhost:5000/post/delete/${postId}`)\r\n                }\r\n            }catch (e){\r\n            console.log(e);\r\n            }\r\n        };\r\n        deletePost2();\r\n    }, [postId]);\r\n  \r\n    const buildCard = (show) => {\r\n        console.log('show is', show.archived);\r\n        return (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id}>\r\n                <Card className={classes.card} variant='outlined'>\r\n                    \r\n                    <CardMedia\r\n\t\t\t\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\t\t\t\tcomponent='img'\r\n\t\t\t\t\t\t\t\timage='/imgs/turnip.png'\r\n\t\t\t\t\t\t\t\talt = 'No image'\r\n\t\t\t\t\t\t\t\ttitle='show image'\r\n\t\t\t\t\t\t\t/>\r\n                            <CardContent >\r\n                                <Typography variant='body2' color='textSecondary' component='p'>\r\n                                    Type: {show.sell ? \"Selling\": \"Buying\"}\r\n                                    <br></br>\r\n                                    Price: {show.price}\r\n                                    <br></br>\r\n                                    Items Required: {show.ticketPrice}\r\n                                    <br></br>\r\n                                    Rating: {show.rating}\r\n                                    <br></br>\r\n                                    datePosted: {show.Date}\r\n                                    <br></br>\r\n                                    expirationTime: {show.endTime}\r\n                                    <br></br>\r\n                                    Archived: {show.archived}\r\n                                    <br></br>\r\n                                    <br></br>\r\n                                    {currentUser && currentUser.id && currentUser.id === userId &&  (\r\n                                        <button onClick = { () => setIsDelete(true)}>Delete Post</button>\r\n                                    )}\r\n                                \r\n                                    <br></br>\r\n                                    <br></br>\r\n                                </Typography>\r\n                            </CardContent>\r\n                   \r\n                </Card>\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n\r\n    \r\n    console.log('profilePost is ', profilePost); \r\n    let card = null;\r\n    card =\r\n        profilePost && profilePost.data && (\r\n        buildCard(profilePost.data)\r\n        );\r\n\r\n    //GET User Info to be displayed on the side\r\n    useEffect(() => {\r\n        async function getData(){\r\n            const userInfo = await axios.get(`http://localhost:5000/user/${userId}`); \r\n            //console.log(userInfo); \r\n            setUserData(userInfo);  \r\n        };\r\n        getData();\r\n            setLoading(false);\r\n    }, [userId]);\r\n\r\n    //get User profile image\r\n    useEffect(() => {\r\n        async function getImage() {\r\n            \r\n            try {\r\n                const profile = await axios.get(`http://localhost:5000/images/${userId}`); \r\n                let newimageSource = profile.data.data.imageData;\r\n                let finalimageSource = newimageSource.replaceAll(\"\\\\\", \"/\").replace(\"../client/public\", \"\");\r\n                if (finalimageSource.includes(\".png\")) {\r\n                    finalimageSource = finalimageSource.replace(\".png\", \"_medium.png\");\r\n                }\r\n                if (finalimageSource.includes(\".jpeg\")) {\r\n                    finalimageSource = finalimageSource.replace(\".jpeg\", \"_medium.jpeg\");\r\n                }\r\n                if (finalimageSource.includes(\".jpg\")) {\r\n                    finalimageSource = finalimageSource.replace(\".jpg\", \"_medium.jpg\");\r\n                }\r\n                setMulterImage(finalimageSource);\r\n                console.log('multer image is ' + multerImage);\r\n            } catch (e) {\r\n                setMulterImage(\"/imgs/turnip.png\");\r\n                console.log(e);\r\n            }\r\n        }\r\n        getImage();\r\n    }, [userId]);\r\n\r\n\r\n    //console.log('userData is, ' + userData);\r\n    //console.log('userData email is, ' + userData.data.data.email);\r\n\r\n    let userCard = null; \r\n\r\n        //non authenticated view\r\n         userData && (userCard = \r\n\r\n            <Card className={classes.card2} variant='outlined'>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        component='img'\r\n                        image={multerImage}\r\n                        title='show image'\r\n                    />\r\n                    <CardContent >\r\n                        <Typography variant='body2' color='textSecondary' component='p'>\r\n                            <br></br>\r\n                            Username: {userData.data.data.displayName}\r\n                            <br></br>\r\n                            Island Code: {userData.data.data.islandName} \r\n                            <br></br>\r\n                            Ingame Name: {userData.data.data.inGameName}\r\n                            <br></br>\r\n                            Nintendo ID: 1234567 \r\n                            <br></br>\r\n                            Stars: {userData.data.data.star}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        );\r\n        \r\n        //authenticated view \r\n        userData && multerImage && currentUser && currentUser.id === userId && (userCard = \r\n            <Card className={classes.card2} variant='outlined'>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        component='img'\r\n                        image={multerImage}\r\n                        title='show image'\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant='body2' color='textSecondary' component='p'>\r\n                        <br></br>\r\n                            Username: {userData.data.data.displayName}\r\n                            <br></br>\r\n                            Island Code: {userData.data.data.islandName} \r\n                            <br></br>\r\n                            Ingame Name: {userData.data.data.inGameName}\r\n                            <br></br>\r\n                            Nintendo ID: 1234567 \r\n                            <br></br>\r\n                            Email: {currentUser.email}\r\n                            <br></br>\r\n                            Stars: {userData.data.data.star}\r\n                            <br></br>\r\n                            <br></br>\r\n                            <Link to = '/editaccount'> Edit Profile</Link>\r\n                            <br></br>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n    \r\n    )\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                <h2>Loading....</h2>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                <br />\r\n                <br />\r\n                    {userCard}\r\n                <div>\r\n                <Grid container className={classes.grid} spacing={5}>\r\n                    {card}\r\n                </Grid>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Account; ","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\PostPage.js",["94","95","96"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport '../App.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\n\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport GetWaitingInfo from './GetWaitingInfo';\r\nimport Comments from './Comments';\r\n// import { Beforeunload } from 'react-beforeunload';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 250,\r\n        height: 'auto',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        borderRadius: 5,\r\n        border: '1px solid #1e8678',\r\n        boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n    },\r\n    titleHead: {\r\n        borderBottom: '1px solid #1e8678',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        flexGrow: 1,\r\n        flexDirection: 'row'\r\n    },\r\n    media: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        color: '#1e8678',\r\n        fontWeight: 'bold',\r\n        fontSize: 12\r\n    }\r\n});\r\n\r\n//TODO\r\n//provide links to change password\r\n//display user info\r\n//display different information for authenticated vs non authenticated\r\n//ask about updating user schema to include island code, nintendo ID\r\n\r\n\r\nfunction PostPage(props) {\r\n    const postId = props.match.params.id;\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(true);\r\n    const [postData, setPostData] = useState(undefined);\r\n    const [queueId, setQueueId] = useState(undefined);\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const cleanup = () => {\r\n            console.log('removing from queue!!!')\r\n            axios.post('http://localhost:5000/queue/leave', { queueId: queueId })\r\n\r\n        }\r\n        window.addEventListener('beforeunload', cleanup);\r\n\r\n        async function fetchData() {\r\n            try {\r\n                //getting data for user profile\r\n                const post = await axios.get(\"http://localhost:5000/post/\" + postId);\r\n                setPostData(post.data.data);\r\n                const queue = await axios.post(\"http://localhost:5000/queue/join\", {\r\n                    userId: currentUser.id,\r\n                    postId: postId,\r\n                    inGameName: currentUser.inGameName\r\n                })\r\n                setQueueId(queue.data.data._id);\r\n                setLoading(false);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        fetchData();\r\n        return () => {\r\n            window.removeEventListener('beforeunload', cleanup);\r\n        }\r\n    }, []);\r\n    if (!currentUser) {\r\n        return <Redirect to=\"/signup\" />;\r\n    }\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                <h2>Loading....</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else {\r\n        // function handleModalLeave(){\r\n        //     axios.post('http://localhost:5000/queue/',{queueId: queueId});\r\n        // }\r\n        return (\r\n            <div>\r\n            <div>\r\n                {/* <Beforeunload onBeforeunload={() => {\r\n                    axios.post('http://localhost:5000/queue/leave', { queueId: queueId })\r\n\r\n                }}> */}\r\n                    <br />\r\n                    <br />\r\n                    {/* <Button> <Link to={\"/sell\"}> Selling </Link> </Button> */}\r\n                    {/* {DoPaginationf} */}\r\n\r\n                    <Card className={classes.card} variant='outlined'>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n\r\n                                <Typography variant='body2' color='textSecondary' component='p'>\r\n                                    <br></br>\r\n                                        Description: {postData.description}\r\n                                    <br></br>\r\n                                        Ticket Price: {postData.ticketPrice}<br />\r\n                                    <br />\r\n                                    <Button onClick={async() => {\r\n                                        await axios.post('http://localhost:5000/queue/leave', { queueId: queueId });\r\n                                        \r\n                                    }}><Link to= {\"/\"}>Leave Island</Link></Button>\r\n\r\n                                    {/* <br></br>\r\n                                        Rating: {show.rating}\r\n                                    <br></br>\r\n                                        datePosted: {show.Date}\r\n                                    <br></br>\r\n                                        expirationTime: {show.endTime} */}\r\n                                </Typography>\r\n                            </CardContent>\r\n\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <br />\r\n                    <GetWaitingInfo queueId={queueId} postId={postId} />\r\n                    \r\n\r\n                {/* </Beforeunload > */}\r\n                \r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Comments postInfo={postData}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PostPage","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\Chat.js",["97","98","99","100"],"import React, {useContext, useState, useEffect, useRef} from \"react\";\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport io from \"socket.io-client\";\r\nimport '../App.css';\r\nconst axios = require('axios');\r\n\r\n\r\n\r\nconst Chat = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [ID, setID] = useState(\"\");\r\n    const [currentImage, setCurrentImage] = useState(\"/imgs/turnipSmall.png\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const socketRef = useRef();\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io('http://localhost:5000', {\r\n            transports: ['websocket'],\r\n            upgrade: false\r\n        });\r\n        socketRef.current.on(\"RECEIVE_MESSAGE\", function(message) {\r\n            receivedMessage(message);\r\n        });\r\n        async function getImage() {\r\n            try {\r\n                const profile = await axios.get(`http://localhost:5000/images/${currentUser.id}`); \r\n                let newimageSource = profile.data.data.imageData;\r\n                let finalimageSource = newimageSource.replaceAll(\"\\\\\", \"/\").replace(\"../client/public\", \"\");\r\n                if (finalimageSource.includes(\".png\")) {\r\n                    finalimageSource = finalimageSource.replace(\".png\", \"_small.png\");\r\n                }\r\n                if (finalimageSource.includes(\".jpeg\")) {\r\n                    finalimageSource = finalimageSource.replace(\".jpeg\", \"_small.jpeg\");\r\n                }\r\n                if (finalimageSource.includes(\".jpg\")) {\r\n                    finalimageSource = finalimageSource.replace(\".jpg\", \"_small.jpg\");\r\n                }\r\n                setCurrentImage(finalimageSource);\r\n            } catch (e) {\r\n                setCurrentImage(\"/imgs/turnipSmall.png\");\r\n                console.log(e);\r\n            }\r\n        }\r\n        getImage();\r\n        return () => {\r\n            socketRef.current.off(\"disconnect\");\r\n        };\r\n        \r\n    }, [setMessages])\r\n\r\n\r\n    function receivedMessage(message) {\r\n        setMessages(oldMessages => [...oldMessages, message]);\r\n        console.log(message);\r\n        scrollDown();\r\n    }\r\n\r\n    function sendMessage(e) {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            image: currentImage,\r\n            email: currentUser.email,\r\n            name: currentUser.displayName,\r\n            body: message,\r\n            id: ID,\r\n        };\r\n        socketRef.current.emit(\"SEND_MESSAGE\", messageObject);\r\n        setMessage(\"\");\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    function scrollDown() {\r\n        var objDiv = document.getElementById(\"chat\");\r\n        objDiv.scrollTop = objDiv.scrollHeight;\r\n    }\r\n    return (\r\n        \r\n        <div>\r\n            <div id=\"chat\" className=\"chat-box\">\r\n                {messages.map((message, index) => {\r\n                    if (message.id === ID) {\r\n                        if (currentUser && currentUser.email === message.email) {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className=\"chat-user\" >\r\n                                        {message.name}\r\n                                        <img src={message.image} className=\"round-profile\" alt=\"Image\"/>\r\n                                        <br/>\r\n                                        <div class=\"chat-bubble-user\">\r\n                                        {message.body}\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className=\"chat-other chat-bubble\">\r\n                                        <img src={message.image} class=\"round-profile\" alt=\"Image\"/>\r\n                                        {message.name}\r\n                                        <br/>\r\n                                        <div class=\"chat-bubble-other\">\r\n                                        {message.body}\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        \r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <div>\r\n                                {message.body}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            {currentUser ?\r\n            \r\n            <form onSubmit={sendMessage}>\r\n                <label className=\"center\" for = \"chat-text-field\">Enter message</label>\r\n                <textarea id = \"chat-text-field\" className=\"chat-text-field\" value={message} onChange={handleChange} />\r\n                <button className=\"chat-submit\">Send</button>\r\n            </form>\r\n            : \r\n            null\r\n            }\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Chat;","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\Navigation.js",["101","102","103","104","105"],"C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\SignIn.js",["106"],"import React, { useContext } from 'react';\r\nimport SocialSignIn from './SocialSignIn';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport {\r\n  doSignInWithEmailAndPassword,\r\n  doPasswordReset\r\n} from '../firebase/FirebaseFunctions';\r\n\r\nfunction SignIn() {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const handleLogin = async (event) => {\r\n    event.preventDefault();\r\n    let { email, password } = event.target.elements;\r\n\r\n    try {\r\n      await doSignInWithEmailAndPassword(email.value, password.value);\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  const passwordReset = (event) => {\r\n    event.preventDefault();\r\n    let email = document.getElementById('email').value;\r\n    if (email) {\r\n      doPasswordReset(email);\r\n      alert('Password reset email was sent');\r\n    } else {\r\n      alert(\r\n        'Please enter an email address below before you click the forgot password link'\r\n      );\r\n    }\r\n  };\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div >\r\n      <div className=\"signin-in\">\r\n        <p className=\"sign center\">Sign In</p>\r\n        <form className=\"form1\" onSubmit={handleLogin}>\r\n          <label for=\"email\" className=\"center\">Email</label>\r\n          <input\r\n            className=\"un form-control\"\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            required\r\n          />\r\n          <label for=\"password\" className=\"center\">Password</label>\r\n          <input \r\n          className=\"pass form-control\"\r\n          id=\"password\"\r\n          type=\"password\"  \r\n          name=\"password\"\r\n          required\r\n          />\r\n          <button className=\"submit center\">Sign In</button>\r\n          <br/>\r\n          <br/>\r\n          <button className=\"forgot center\" onClick={passwordReset}>Forgot Password</button>\r\n        </form>\r\n              <br />\r\n              <br />\r\n        <SocialSignIn />\r\n      </div>\r\n      <br />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\Landings.js",[],"C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\ChangePassword.js",[],"C:\\Users\\jacky\\OneDrive\\Desktop\\Courses\\CS 554 Web Programming II\\final_project\\cs554-Finalproject\\client\\src\\components\\JoinQueue.js",["107","108","109","110","111","112","113","114","115","116","117","118","119","120","121"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport SignOutButton from './SignOut';\r\nimport '../App.css';\r\nimport ChangePassword from './ChangePassword';\r\nimport UploadProfilePic from './UploadProfilePic';\r\nimport noImage from '../img/no-image.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { AuthContext } from '../firebase/Auth';\r\nconst axios = require('axios');\r\n\r\nfunction JoinQueue(props) {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [userId, setUserId] = useState(undefined);\r\n    const [postId, setPostId] = useState(props.location.postId);\r\n    const [postInfo, setPostInfo] = useState(undefined);\r\n\r\n    const GetUser = () => {\r\n        useEffect(() => {\r\n            async function getData() {\r\n                const userInfo = await axios.get(`http://localhost:5000/user/email/${currentUser.email}`);\r\n                //console.log(userInfo); \r\n                setUserId(userInfo.data.data._id);\r\n                console.log(userInfo.data.data._id);\r\n            };\r\n            getData();\r\n        }, []);\r\n        return(<div></div>);\r\n    }\r\n    function PostInfo() {\r\n        useEffect(() => {\r\n            async function getData() {\r\n                const post = await axios.get(`http://localhost:5000/post/${postId}}`);\r\n                setPostInfo(post);\r\n                //console.log(userInfo); \r\n                // console.log(userInfo.data.data._id);\r\n            };\r\n            getData();\r\n        }, []);\r\n\r\n        if (postInfo && postInfo.success === true) {\r\n            return (\r\n                <div className=\"postInfo\">\r\n                    Type: Buying\r\n                    <br></br>\r\n\t\t\t\t\tPosted by: {postInfo.data.creator}\r\n                    <br></br>\r\n\t\t\t\t\tPrice: {postInfo.data.price}\r\n                    <br></br>\r\n\t\t\t\t\tTicket Price: {postInfo.data.ticketPrice}\r\n                    <br></br>\r\n\t\t\t\t\tRating: {postInfo.data.rating}\r\n                    <br></br>\r\n\t\t\t\t\tdatePosted: {postInfo.data.createdAt}\r\n                    <br></br>\r\n\t\t\t\t\texpirationTime: {postInfo.data.endTime}\r\n                </div>\r\n            )\r\n        } else if (postInfo && postInfo.success === false) {\r\n            return (\r\n                <div>\r\n                    Error<br />\r\n                    {postInfo.error}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <GetUser />\r\n            <PostInfo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JoinQueue",{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":2,"column":20,"nodeType":"128","messageId":"129","endLine":2,"endColumn":27},{"ruleId":"122","replacedBy":"130"},{"ruleId":"124","replacedBy":"131"},{"ruleId":"126","severity":1,"message":"132","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":14},{"ruleId":"126","severity":1,"message":"133","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":15},{"ruleId":"126","severity":1,"message":"134","line":3,"column":8,"nodeType":"128","messageId":"129","endLine":3,"endColumn":15},{"ruleId":"126","severity":1,"message":"135","line":4,"column":10,"nodeType":"128","messageId":"129","endLine":4,"endColumn":14},{"ruleId":"126","severity":1,"message":"136","line":5,"column":45,"nodeType":"128","messageId":"129","endLine":5,"endColumn":54},{"ruleId":"126","severity":1,"message":"137","line":5,"column":86,"nodeType":"128","messageId":"129","endLine":5,"endColumn":92},{"ruleId":"126","severity":1,"message":"138","line":52,"column":13,"nodeType":"128","messageId":"129","endLine":52,"endColumn":24},{"ruleId":"139","severity":1,"message":"140","line":78,"column":8,"nodeType":"141","endLine":78,"endColumn":10,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":98,"column":19,"nodeType":"145","messageId":"146","endLine":98,"endColumn":21},{"ruleId":"126","severity":1,"message":"147","line":1,"column":29,"nodeType":"128","messageId":"129","endLine":1,"endColumn":38},{"ruleId":"126","severity":1,"message":"135","line":2,"column":10,"nodeType":"128","messageId":"129","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"148","line":15,"column":49,"nodeType":"128","messageId":"129","endLine":15,"endColumn":53},{"ruleId":"126","severity":1,"message":"149","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":21},{"ruleId":"126","severity":1,"message":"150","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":22},{"ruleId":"126","severity":1,"message":"151","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":24},{"ruleId":"126","severity":1,"message":"134","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":15},{"ruleId":"126","severity":1,"message":"137","line":8,"column":86,"nodeType":"128","messageId":"129","endLine":8,"endColumn":92},{"ruleId":"126","severity":1,"message":"152","line":10,"column":8,"nodeType":"128","messageId":"129","endLine":10,"endColumn":26},{"ruleId":"126","severity":1,"message":"153","line":55,"column":11,"nodeType":"128","messageId":"129","endLine":55,"endColumn":16},{"ruleId":"126","severity":1,"message":"154","line":60,"column":20,"nodeType":"128","messageId":"129","endLine":60,"endColumn":29},{"ruleId":"139","severity":1,"message":"155","line":94,"column":8,"nodeType":"141","endLine":94,"endColumn":18,"suggestions":"156"},{"ruleId":"139","severity":1,"message":"157","line":198,"column":8,"nodeType":"141","endLine":198,"endColumn":16,"suggestions":"158"},{"ruleId":"126","severity":1,"message":"136","line":4,"column":45,"nodeType":"128","messageId":"129","endLine":4,"endColumn":54},{"ruleId":"126","severity":1,"message":"159","line":4,"column":56,"nodeType":"128","messageId":"129","endLine":4,"endColumn":60},{"ruleId":"139","severity":1,"message":"160","line":88,"column":8,"nodeType":"141","endLine":88,"endColumn":10,"suggestions":"161"},{"ruleId":"126","severity":1,"message":"162","line":11,"column":16,"nodeType":"128","messageId":"129","endLine":11,"endColumn":21},{"ruleId":"139","severity":1,"message":"163","line":50,"column":8,"nodeType":"141","endLine":50,"endColumn":21,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":91,"column":41,"nodeType":"167","endLine":91,"endColumn":105},{"ruleId":"165","severity":1,"message":"166","line":104,"column":41,"nodeType":"167","endLine":104,"endColumn":101},{"ruleId":"126","severity":1,"message":"127","line":2,"column":16,"nodeType":"128","messageId":"129","endLine":2,"endColumn":23},{"ruleId":"126","severity":1,"message":"149","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":21},{"ruleId":"126","severity":1,"message":"168","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":14},{"ruleId":"126","severity":1,"message":"169","line":7,"column":8,"nodeType":"128","messageId":"129","endLine":7,"endColumn":11},{"ruleId":"126","severity":1,"message":"170","line":8,"column":8,"nodeType":"128","messageId":"129","endLine":8,"endColumn":14},{"ruleId":"171","severity":1,"message":"172","line":49,"column":13,"nodeType":"173","endLine":49,"endColumn":23},{"ruleId":"126","severity":1,"message":"149","line":2,"column":8,"nodeType":"128","messageId":"129","endLine":2,"endColumn":21},{"ruleId":"126","severity":1,"message":"150","line":4,"column":8,"nodeType":"128","messageId":"129","endLine":4,"endColumn":22},{"ruleId":"126","severity":1,"message":"151","line":5,"column":8,"nodeType":"128","messageId":"129","endLine":5,"endColumn":24},{"ruleId":"126","severity":1,"message":"134","line":6,"column":8,"nodeType":"128","messageId":"129","endLine":6,"endColumn":15},{"ruleId":"126","severity":1,"message":"135","line":7,"column":10,"nodeType":"128","messageId":"129","endLine":7,"endColumn":14},{"ruleId":"126","severity":1,"message":"174","line":8,"column":10,"nodeType":"128","messageId":"129","endLine":8,"endColumn":14},{"ruleId":"126","severity":1,"message":"175","line":8,"column":16,"nodeType":"128","messageId":"129","endLine":8,"endColumn":30},{"ruleId":"126","severity":1,"message":"176","line":8,"column":32,"nodeType":"128","messageId":"129","endLine":8,"endColumn":43},{"ruleId":"126","severity":1,"message":"136","line":8,"column":45,"nodeType":"128","messageId":"129","endLine":8,"endColumn":54},{"ruleId":"126","severity":1,"message":"159","line":8,"column":56,"nodeType":"128","messageId":"129","endLine":8,"endColumn":60},{"ruleId":"126","severity":1,"message":"177","line":8,"column":62,"nodeType":"128","messageId":"129","endLine":8,"endColumn":72},{"ruleId":"126","severity":1,"message":"178","line":8,"column":74,"nodeType":"128","messageId":"129","endLine":8,"endColumn":84},{"ruleId":"126","severity":1,"message":"137","line":8,"column":86,"nodeType":"128","messageId":"129","endLine":8,"endColumn":92},{"ruleId":"126","severity":1,"message":"179","line":14,"column":12,"nodeType":"128","messageId":"129","endLine":14,"endColumn":18},{"ruleId":"126","severity":1,"message":"180","line":15,"column":20,"nodeType":"128","messageId":"129","endLine":15,"endColumn":29},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar",["181"],["182"],"'turnip' is defined but never used.","'Account' is defined but never used.","'noImage' is defined but never used.","'Link' is defined but never used.","'CardMedia' is defined but never used.","'Button' is defined but never used.","'currentUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'postId' and 'queueId'. Either include them or remove the dependency array.","ArrayExpression",["183"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'sell' is assigned a value but never used.","'SignOutButton' is defined but never used.","'ChangePassword' is defined but never used.","'UploadProfilePic' is defined but never used.","'CurrentUserAccount' is defined but never used.","'regex' is assigned a value but never used.","'setUserId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["184"],"React Hook useEffect has a missing dependency: 'multerImage'. Either include it or remove the dependency array.",["185"],"'Grid' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser.id', 'currentUser.inGameName', 'postId', and 'queueId'. Either include them or remove the dependency array.",["186"],"'setID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.id' and 'receivedMessage'. Either include them or remove the dependency array.",["187"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Navbar' is defined but never used.","'Nav' is defined but never used.","'button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'makeStyles' is defined but never used.","'userId' is assigned a value but never used.","'setPostId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},"Update the dependencies array to be: [postId, queueId]",{"range":"198","text":"199"},"Update the dependencies array to be: [isDelete, userId]",{"range":"200","text":"201"},"Update the dependencies array to be: [multerImage, userId]",{"range":"202","text":"203"},"Update the dependencies array to be: [currentUser.id, currentUser.inGameName, postId, queueId]",{"range":"204","text":"205"},"Update the dependencies array to be: [currentUser.id, receivedMessage, setMessages]",{"range":"206","text":"207"},[2440,2442],"[postId, queueId]",[2954,2964],"[isDelete, userId]",[7029,7037],"[multerImage, userId]",[2734,2736],"[currentUser.id, currentUser.inGameName, postId, queueId]",[1984,1997],"[currentUser.id, receivedMessage, setMessages]"]