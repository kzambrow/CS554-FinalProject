[{"C:\\554workspace\\finalproject\\client\\src\\reportWebVitals.js":"1","C:\\554workspace\\finalproject\\client\\src\\components\\PostPage.js":"2","C:\\554workspace\\finalproject\\client\\src\\firebase\\FirebaseFunctions.js":"3","C:\\554workspace\\finalproject\\client\\src\\firebase\\Firebase.js":"4","C:\\554workspace\\finalproject\\client\\src\\components\\Chat.js":"5","C:\\554workspace\\finalproject\\client\\src\\index.js":"6","C:\\554workspace\\finalproject\\client\\src\\components\\Landing.js":"7","C:\\554workspace\\finalproject\\client\\src\\components\\Landings.js":"8","C:\\554workspace\\finalproject\\client\\src\\components\\Account.js":"9","C:\\554workspace\\finalproject\\client\\src\\components\\Navigation.js":"10","C:\\554workspace\\finalproject\\client\\src\\components\\SignIn.js":"11","C:\\554workspace\\finalproject\\client\\src\\components\\Post.js":"12","C:\\554workspace\\finalproject\\client\\src\\components\\SignUp.js":"13","C:\\554workspace\\finalproject\\client\\src\\components\\JoinQueue.js":"14","C:\\554workspace\\finalproject\\client\\src\\components\\PrivateRoute.js":"15","C:\\554workspace\\finalproject\\client\\src\\components\\SignOut.js":"16","C:\\554workspace\\finalproject\\client\\src\\components\\ChangePassword.js":"17","C:\\554workspace\\finalproject\\client\\src\\components\\UploadProfilePic.js":"18","C:\\554workspace\\finalproject\\client\\src\\components\\SocialSignIn.js":"19","C:\\554workspace\\finalproject\\client\\src\\components\\App.js":"20","C:\\554workspace\\finalproject\\client\\src\\components\\EditAccount.js":"21","C:\\554workspace\\finalproject\\client\\src\\firebase\\Auth.js":"22"},{"size":375,"mtime":1608147521913,"results":"23","hashOfConfig":"24"},{"size":6532,"mtime":1608167277017,"results":"25","hashOfConfig":"24"},{"size":1711,"mtime":1608147521909,"results":"26","hashOfConfig":"24"},{"size":537,"mtime":1608147521908,"results":"27","hashOfConfig":"24"},{"size":5118,"mtime":1608182216802,"results":"28","hashOfConfig":"24"},{"size":530,"mtime":1608147521912,"results":"29","hashOfConfig":"24"},{"size":3755,"mtime":1608167277015,"results":"30","hashOfConfig":"24"},{"size":3247,"mtime":1608167277016,"results":"31","hashOfConfig":"24"},{"size":10328,"mtime":1608233543863,"results":"32","hashOfConfig":"24"},{"size":1573,"mtime":1608147521900,"results":"33","hashOfConfig":"24"},{"size":3040,"mtime":1608147521904,"results":"34","hashOfConfig":"24"},{"size":4869,"mtime":1608147521900,"results":"35","hashOfConfig":"24"},{"size":3236,"mtime":1608147521905,"results":"36","hashOfConfig":"24"},{"size":2602,"mtime":1608147521898,"results":"37","hashOfConfig":"24"},{"size":499,"mtime":1608147521902,"results":"38","hashOfConfig":"24"},{"size":260,"mtime":1608147521905,"results":"39","hashOfConfig":"24"},{"size":2672,"mtime":1608147521895,"results":"40","hashOfConfig":"24"},{"size":2073,"mtime":1608182565329,"results":"41","hashOfConfig":"24"},{"size":739,"mtime":1608147521906,"results":"42","hashOfConfig":"24"},{"size":1604,"mtime":1608233045905,"results":"43","hashOfConfig":"24"},{"size":3625,"mtime":1608233495502,"results":"44","hashOfConfig":"24"},{"size":1909,"mtime":1608167277018,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1yyacow",{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\554workspace\\finalproject\\client\\src\\reportWebVitals.js",[],["99","100"],"C:\\554workspace\\finalproject\\client\\src\\components\\PostPage.js",["101","102","103","104","105","106"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport '../App.css';\r\nimport noImage from '../img/no-image.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { AuthContext } from '../firebase/Auth';\r\n\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 250,\r\n        height: 'auto',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        borderRadius: 5,\r\n        border: '1px solid #1e8678',\r\n        boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n    },\r\n    titleHead: {\r\n        borderBottom: '1px solid #1e8678',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        flexGrow: 1,\r\n        flexDirection: 'row'\r\n    },\r\n    media: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        color: '#1e8678',\r\n        fontWeight: 'bold',\r\n        fontSize: 12\r\n    }\r\n});\r\n\r\n//TODO\r\n//provide links to change password\r\n//display user info\r\n//display different information for authenticated vs non authenticated\r\n//ask about updating user schema to include island code, nintendo ID\r\n\r\nfunction PostPage(props) {\r\n    const postId = props.match.params.id;\r\n\r\n    const GetPost = () => {\r\n        const classes = useStyles();\r\n        const [loading, setLoading] = useState(true);\r\n        const [postData, setPostData] = useState(undefined);\r\n        const { currentUser } = useContext(AuthContext);\r\n\r\n\r\n        useEffect(() => {\r\n            async function fetchData() {\r\n                try {\r\n                    //getting data for user profile\r\n                    const post = await axios.get(\"http://localhost:5000/post/\" + postId);\r\n                    setPostData(post.data.data);\r\n                    const queue = await axios.post(\"http://localhost:5000/queue/join\", {\r\n                        userId: currentUser.id,\r\n                        postId: postId\r\n                    })\r\n                    setLoading(false);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            }\r\n            fetchData();\r\n        }, []);\r\n\r\n\r\n        if (loading) {\r\n            return (\r\n                <div>\r\n                    <h2>Loading....</h2>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                //This only appears on Page 1 \r\n                <div>\r\n                    <br />\r\n                    <br />\r\n                    {/* <Button> <Link to={\"/sell\"}> Selling </Link> </Button> */}\r\n                    {/* {DoPaginationf} */}\r\n\r\n                    <Card className={classes.card} variant='outlined'>\r\n                        <CardActionArea>\r\n\r\n                            {/* <CardMedia\r\n                                className={classes.media}\r\n                                component='img'\r\n                                image={show.image && show.image.original ? show.image.original : noImage}\r\n                                title='show image'\r\n                            /> */}\r\n\r\n                            <CardContent>\r\n\r\n                                <Typography variant='body2' color='textSecondary' component='p'>\r\n                                    <br></br>\r\n                                        Description: {postData.description}\r\n                                    <br></br>\r\n                                        Ticket Price: {postData.ticketPrice}\r\n                                    {/* <br></br>\r\n                                        Rating: {show.rating}\r\n                                    <br></br>\r\n                                        datePosted: {show.Date}\r\n                                    <br></br>\r\n                                        expirationTime: {show.endTime} */}\r\n                                </Typography>\r\n                            </CardContent>\r\n\r\n                        </CardActionArea>\r\n                    </Card>\r\n\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n    function GetCode() {\r\n\r\n        const { currentUser } = useContext(AuthContext);\r\n        const [islandCode, setIslandCode] = useState(undefined);\r\n        const classes = useStyles();\r\n        useEffect(() => {\r\n            const getCode = async () => {\r\n                // const userInfo = await axios.get(`http://localhost:5000/user/email/${currentUser.email}`);\r\n                try {\r\n                    const queue = await axios.post('http://localhost:5000/queue/find', {\r\n                        userId: currentUser.id,\r\n                        postId: postId\r\n                    })\r\n                    const code = await axios.post('http://localhost:5000/queue/getCode', {\r\n                        postId: postId,\r\n                        queueId: queue.data.data._id\r\n                    })\r\n                    setIslandCode(code.data.data);\r\n                } catch (e) {\r\n                    console.log(e.response)\r\n                }\r\n            }\r\n            getCode();\r\n\r\n        }, []);\r\n        let card = null;\r\n\r\n        islandCode && (card =\r\n            <Card className={classes.card} variant='outlined'>\r\n                <CardActionArea>\r\n                    {/* <CardMedia\r\n                        className={classes.media}\r\n                        component='img'\r\n                        image={noImage}\r\n                        title='show image'\r\n                    /> */}\r\n                    <CardContent>\r\n                        <Typography variant='body2' color='textSecondary' component='p'>\r\n                            <br></br>\r\n                            Code: {islandCode}\r\n                            <br></br>\r\n                            Island Code: ABCD\r\n                            <br></br>\r\n                            Ingame Name: GAMER1\r\n                            <br></br>\r\n                            Nintendo ID: 1234567\r\n\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        );\r\n\r\n        return (\r\n            <Grid container className={classes.grid} spacing={5}>\r\n                {card}\r\n            </Grid>\r\n\r\n        );\r\n    };\r\n    return (\r\n        <div>\r\n            <GetPost />\r\n            <GetCode />\r\n            <br />\r\n            <Link className='showlink' to='/'>Homepage</Link>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PostPage",["107","108"],"C:\\554workspace\\finalproject\\client\\src\\firebase\\FirebaseFunctions.js",["109"],"import firebase from 'firebase/app';\r\nconst axios = require('axios');\r\n\r\nasync function doCreateUserWithEmailAndPassword(email, password, displayName, islandName, inGameName) {\r\n    await firebase.auth().createUserWithEmailAndPassword(email, password);\r\n    firebase.auth().currentUser.updateProfile({ displayName: displayName , islandName:islandName, inGameName:inGameName});\r\n\r\n}\r\n\r\nasync function doChangePassword(email, oldPassword, newPassword) {\r\n    let credential = firebase.auth.EmailAuthProvider.credential(\r\n        email,\r\n        oldPassword\r\n    );\r\n    await firebase.auth().currentUser.reauthenticateWithCredential(credential);\r\n    await firebase.auth().currentUser.updatePassword(newPassword);\r\n    await doSignOut();\r\n}\r\n\r\nasync function doSignInWithEmailAndPassword(email, password) {\r\n    await firebase.auth().signInWithEmailAndPassword(email, password);\r\n}\r\n\r\nasync function doSocialSignIn(provider) {\r\n    let socialProvider = null;\r\n    if (provider === 'google') {\r\n        socialProvider = new firebase.auth.GoogleAuthProvider();\r\n    } else if (provider === 'facebook') {\r\n        socialProvider = new firebase.auth.FacebookAuthProvider();\r\n    }\r\n    await firebase.auth().signInWithPopup(socialProvider);\r\n}\r\n\r\nasync function doPasswordReset(email) {\r\n    await firebase.auth().sendPasswordResetEmail(email);\r\n}\r\n\r\nasync function doPasswordUpdate(password) {\r\n    await firebase.auth().updatePassword(password);\r\n}\r\n\r\nasync function doSignOut() {\r\n    await firebase.auth().signOut();\r\n}\r\n\r\nexport {\r\n    doCreateUserWithEmailAndPassword,\r\n    doSocialSignIn,\r\n    doSignInWithEmailAndPassword,\r\n    doPasswordReset,\r\n    doPasswordUpdate,\r\n    doSignOut,\r\n    doChangePassword\r\n};","C:\\554workspace\\finalproject\\client\\src\\firebase\\Firebase.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\Chat.js",["110","111","112","113"],"import React, {useContext, useState, useEffect, useRef} from \"react\";\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport io from \"socket.io-client\";\r\nimport '../App.css';\r\nconst axios = require('axios');\r\n\r\n\r\n\r\nconst Chat = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [ID, setID] = useState(\"\");\r\n    const [currentImage, setCurrentImage] = useState(\"/imgs/turnipSmall.png\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const socketRef = useRef();\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io('http://localhost:5000', {\r\n            transports: ['websocket'],\r\n            upgrade: false\r\n        });\r\n        socketRef.current.on(\"RECEIVE_MESSAGE\", function(message) {\r\n            receivedMessage(message);\r\n        });\r\n        async function getImage() {\r\n            try {\r\n                const profile = await axios.get(`http://localhost:5000/images/${currentUser.email}`); \r\n                let newimageSource = profile.data.data.imageData;\r\n                let finalimageSource = newimageSource.replaceAll(\"\\\\\", \"/\").replace(\"../client/public\", \"\");\r\n                if (finalimageSource.includes(\".png\")) {\r\n                    finalimageSource = finalimageSource.replace(\".png\", \"_small.png\");\r\n                }\r\n                if (finalimageSource.includes(\".jpeg\")) {\r\n                    finalimageSource = finalimageSource.replace(\".jpeg\", \"_small.jpeg\");\r\n                }\r\n                if (finalimageSource.includes(\".jpg\")) {\r\n                    finalimageSource = finalimageSource.replace(\".jpg\", \"_small.jpg\");\r\n                }\r\n                setCurrentImage(finalimageSource);\r\n            } catch (e) {\r\n                setCurrentImage(\"/imgs/turnipSmall.png\");\r\n                console.log(e);\r\n            }\r\n        }\r\n        getImage();\r\n        return () => {\r\n            socketRef.current.off(\"disconnect\");\r\n        };\r\n        \r\n\r\n        \r\n    }, [setMessages])\r\n\r\n\r\n    function receivedMessage(message) {\r\n        setMessages(oldMessages => [...oldMessages, message]);\r\n        console.log(message);\r\n        scrollDown();\r\n    }\r\n\r\n    function sendMessage(e) {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            image: currentImage,\r\n            email: currentUser.email,\r\n            name: currentUser.displayName,\r\n            body: message,\r\n            id: ID,\r\n        };\r\n        socketRef.current.emit(\"SEND_MESSAGE\", messageObject);\r\n        setMessage(\"\");\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    function scrollDown() {\r\n        var objDiv = document.getElementById(\"chat\");\r\n        objDiv.scrollTop = objDiv.scrollHeight;\r\n    }\r\n    return (\r\n        <div>\r\n            <div id=\"chat\" className=\"chat-box\">\r\n                {messages.map((message, index) => {\r\n                    if (message.id === ID) {\r\n                        if (currentUser.email === message.email) {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className=\"chat-user\" >\r\n                                        {message.name}\r\n                                        <img src={message.image} className=\"round-profile\" alt=\"Image\"/>\r\n                                        <br/>\r\n                                        <div class=\"chat-bubble-user\">\r\n                                        {message.body}\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className=\"chat-other chat-bubble\">\r\n                                        <img src={message.image} class=\"round-profile\" alt=\"Image\"/>\r\n                                        {message.name}\r\n                                        <br/>\r\n                                        <div class=\"chat-bubble-other\">\r\n                                        {message.body}\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        \r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <div>\r\n                                {message.body}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <form onSubmit={sendMessage}>\r\n                <textarea className=\"chat-text-field\" value={message} onChange={handleChange} placeholder=\"Message...\" />\r\n                <button className=\"chat-submit\">Send</button>\r\n            </form>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Chat;","C:\\554workspace\\finalproject\\client\\src\\index.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\Landing.js",["114","115","116","117","118"],"import React, { useState, useEffect,useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport noImage from '../img/no-image.png';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport '../App.css';\r\nimport turnip from '../img/turnip.png'\r\nimport { AuthContext } from '../firebase/Auth';\r\n\r\n\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n\t\tmarginRight: 'auto',\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n\t},\r\n\ttitleHead: {\r\n\t\tborderBottom: '1px solid #1e8678',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tgrid: {\r\n\t\tflexGrow: 1,\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\tmedia: {\r\n\t\theight: '100%',\r\n\t\twidth: '100%'\r\n\t},\r\n\tbutton: {\r\n\t\tcolor: '#1e8678',\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 12\r\n\t}\r\n});\r\nconst Landing = (props) => {\r\n\tconst regex = /(<([^>]+)>)/gi;\r\n\tconst classes = useStyles();\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [showsData, setShowsData] = useState(undefined);\r\n\tconst [visible, setVisible] = useState(4);\r\n\tconst [userData, setUserData] = useState(undefined);\r\n\r\n\r\n\tlet card = null;\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tasync function fetchData() {\r\n\t\t\ttry {\r\n\t\t\t\t//getting data for main page\r\n\t\t\t\tconst { data } = await axios.get('http://localhost:5000/post/buy');\r\n\t\t\t\tsetShowsData(data);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\r\n\tconst showMore = () => {\r\n\t\tsetVisible((prevValue) => prevValue + 4);\r\n\t}\r\n\r\n\tconst buildCard = (show) => {\r\n\t\treturn (\r\n\t\t\t<Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id}>\r\n\t\t\t\t<Card className={classes.card} variant='outlined'>\r\n\r\n\r\n\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\t\tcomponent='img'\r\n\t\t\t\t\t\timage={turnip}\r\n\t\t\t\t\t\ttitle='show image'\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t<CardContent>\r\n\r\n\t\t\t\t\t\t<Typography variant='body2' color='textSecondary' component='p'>\r\n\t\t\t\t\t\t\tType: Buying\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPosted by: {show.creator}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPrice: {show.price}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tTicket Price: {show.ticketPrice}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tDescription: {show.description ? <p>{show.description}</p> : \"None available\"}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tdatePosted: {show.createdAt}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\texpirationTime: {show.endTime}<br />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\r\n\t\t\t\t\t{/* <Button><Link to={'/joinqueue'} postId={show.id}></Link></Button> */}\r\n\t\t\t\t\t<Button><Link to={`/posts/${show._id}`} userInfo={userData}> More Info</Link></Button>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t};\r\n\r\n\tconst UserInfo = () => {\r\n\t\tconst { currentUser } = useContext(AuthContext);\r\n\t\tconst classes = useStyles();\r\n\t\tuseEffect(() => {\r\n\t\t\tasync function getData() {\r\n\t\t\t\tif (currentUser) {\r\n\t\t\t\t\tconst userInfo = await axios.get(`http://localhost:5000/user/email/${currentUser.email}`);\r\n\t\t\t\t\t//console.log(userInfo); \r\n\t\t\t\t\tsetUserData(userInfo);\r\n\t\t\t\t\tconsole.log(userInfo);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tgetData();\r\n\t\t}, []);\r\n\t}\r\n\tUserInfo();\r\n\r\n\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Loading....</h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\telse {\r\n\t\tcard =\r\n\t\t\tshowsData &&\r\n\t\t\tshowsData.data.slice(0, visible).map((show) => {\r\n\t\t\t\treturn buildCard(show);\r\n\t\t\t});\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button> <Link to={\"/sell\"} userInfo={userData}> Selling </Link> </Button>\r\n\r\n\t\t\t\t<Grid container className={classes.grid} spacing={5}>\r\n\t\t\t\t\t{card}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Button style={{ display: visible >= showsData.data.length ? 'none' : 'block' }} onClick={showMore}>Load More</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Landing;","C:\\554workspace\\finalproject\\client\\src\\components\\Landings.js",["119","120"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport noImage from '../img/no-image.png';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport turnip from '../img/turnip.png'\r\nimport '../App.css';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n\t\tmarginRight: 'auto',\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n\t},\r\n\ttitleHead: {\r\n\t\tborderBottom: '1px solid #1e8678',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tgrid: {\r\n\t\tflexGrow: 1,\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\tmedia: {\r\n\t\theight: '100%',\r\n\t\twidth: '100%'\r\n\t},\r\n\tbutton: {\r\n\t\tcolor: '#1e8678',\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 12\r\n\t}\r\n});\r\nconst Landings = (props) => {\r\n\tconst regex = /(<([^>]+)>)/gi;\r\n\tconst classes = useStyles();\r\n \tconst [ loading, setLoading ] = useState(true);\r\n\tconst [ showsData, setShowsData ] = useState(undefined);\r\n\tconst [visible, setVisible] = useState(4);\r\n\t\r\n\tlet card = null;\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('on load useeffect');\r\n\t\tasync function fetchData() {\r\n\t\t\ttry {\r\n\t\t\t\t//Assuming this is the address of the database (Will change if different)\r\n\t\t\t\tconst { data } = await axios.get('http://localhost:5000/post/sell');\r\n\t\t\t\tsetShowsData(data);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\r\n\r\n\t\r\n\tconst showMore = () => {\r\n\t\tsetVisible((prevValue) => prevValue + 4);\r\n\t}\r\n\t\r\n\r\n\tconst buildCard = (show) => {\r\n\t\treturn (\r\n\t\t\t<Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id}>\r\n\t\t\t\t<Card className={classes.card} variant='outlined'>\r\n\t\t\t\t\t<CardActionArea>\r\n\r\n\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\t\t\t\tcomponent='img'\r\n\t\t\t\t\t\t\t\timage={turnip}\r\n\t\t\t\t\t\t\t\ttitle='show image'\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<CardContent>\r\n\r\n\t\t\t\t\t\t\t\t<Typography variant='body2' color='textSecondary' component='p'>\r\n\t\t\t\t\t\t\t\t\tType: Selling\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPosted by: {show.creator} \r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPrice: {show.price}\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tTicket Price: {show.ticketPrice}\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tDescription: {show.description ? <p>{show.description}</p> : \"None available\"}\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tdatePosted: {show.createdAt}\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\texpirationTime: {show.endTime}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\r\n\t\t\t\t\t</CardActionArea>\r\n\t\t\t\t\t<Button><Link to = {`/posts/${show._id}`}> More Info</Link></Button>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t};\r\n\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Loading....</h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else{\r\n\t\tcard =\r\n\t\tshowsData &&\r\n\t\tshowsData.data.slice(0,visible).map((show) => {\r\n\t\t\treturn buildCard(show);\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button> <Link to =  {\"/\" }> Buying </Link> </Button>\r\n\t\t\t\t\r\n\t\t\t\t<Grid container className={classes.grid} spacing={5}>\r\n\t\t\t\t{card}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Button style = {{display: visible >= showsData.data.length? 'none' : 'block'}} onClick = {showMore}>Load More</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Landings;","C:\\554workspace\\finalproject\\client\\src\\components\\Account.js",["121","122","123","124","125","126","127"],"C:\\554workspace\\finalproject\\client\\src\\components\\Navigation.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\SignIn.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\Post.js",["128","129","130"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n//import { doCreateUserWithEmailAndPassword } from '../firebase/FirebaseFunctions';\r\nimport { AuthContext } from '../firebase/Auth';\r\n//import SocialSignIn from './SocialSignIn';\r\nconst axios = require('axios');\r\n\r\nfunction Post() {\r\n    const { currentUser } = useContext(AuthContext);\r\n    var button;\r\n\r\n    const handlePost = async (e) => {\r\n        e.preventDefault();\r\n        const { price, creator, ticketPrice, islandCode, sell, description, endTime } = e.target.elements;\r\n\r\n\r\n        try {\r\n            console.log(button);\r\n            await axios.post('http://localhost:5000/Post/addPost', {\r\n                creator: creator.value,\r\n                sell: button,\r\n                price: price.value,\r\n                ticketPrice: ticketPrice.value,\r\n                islandCode: islandCode.value,\r\n                description: description.value,\r\n                endTime: endTime.value\r\n            })\r\n\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    };\r\n\r\n    if (!currentUser) {\r\n        return <Redirect to=\"/signup\" />;\r\n    }\r\n\r\n    const sellButton = async () => {\r\n        button = true;\r\n        console.log(button);\r\n    }\r\n\r\n    const buyButton = async () => {\r\n        button = false;\r\n        console.log(button);\r\n    }\r\n\r\n    return (\r\n        <div className=\"post-main\" align=\"center\">\r\n            <p className=\"post\" align=\"center\">Post</p>\r\n\r\n            <form className=\"form2\" onSubmit={handlePost}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"number\"\r\n                        align=\"center\"\r\n                        placeholder=\"Price\"\r\n                        name=\"price\"\r\n                        id=\"price\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Creator\"\r\n                        name=\"creator\"\r\n                        id=\"creator\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Ticket Price\"\r\n                        name=\"ticketPrice\"\r\n                        id=\"ticketPrice\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Island Code\"\r\n                        name=\"islandCode\"\r\n                        id=\"islandCode\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                </div>\r\n                <div id=\"sell\" class=\"dropdown\" name=\"sell\" align=\"center\" >\r\n                    <div className=\"radio\">\r\n                        <label>\r\n                            <input name=\"test\" type=\"radio\" onChange={sellButton} />Selling</label>\r\n                        <label>\r\n                            <input name=\"test\" type=\"radio\" onChange={buyButton} />Buying</label>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Description\"\r\n                        name=\"description\"\r\n                        id=\"description\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"date\"\r\n                        align=\"center\"\r\n                        placeholder=\"End Time\"\r\n                        name=\"endTime\"\r\n                        id=\"endTime\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className=\"submit\" id=\"submitButton\" name=\"submitButton\" type=\"submit\" align=\"center\">\r\n                    Post\r\n        </button>\r\n            </form>\r\n            <br />\r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","C:\\554workspace\\finalproject\\client\\src\\components\\SignUp.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\JoinQueue.js",["131","132","133","134","135","136","137","138","139","140","141","142","143","144","145"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport SignOutButton from './SignOut';\r\nimport '../App.css';\r\nimport ChangePassword from './ChangePassword';\r\nimport UploadProfilePic from './UploadProfilePic';\r\nimport noImage from '../img/no-image.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { AuthContext } from '../firebase/Auth';\r\nconst axios = require('axios');\r\n\r\nfunction JoinQueue(props) {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [userId, setUserId] = useState(undefined);\r\n    const [postId, setPostId] = useState(props.location.postId);\r\n    const [postInfo, setPostInfo] = useState(undefined);\r\n\r\n    const GetUser = () => {\r\n        useEffect(() => {\r\n            async function getData() {\r\n                const userInfo = await axios.get(`http://localhost:5000/user/email/${currentUser.email}`);\r\n                //console.log(userInfo); \r\n                setUserId(userInfo.data.data._id);\r\n                console.log(userInfo.data.data._id);\r\n            };\r\n            getData();\r\n        }, []);\r\n        return(<div></div>);\r\n    }\r\n    function PostInfo() {\r\n        useEffect(() => {\r\n            async function getData() {\r\n                const post = await axios.get(`http://localhost:5000/post/${postId}}`);\r\n                setPostInfo(post);\r\n                //console.log(userInfo); \r\n                // console.log(userInfo.data.data._id);\r\n            };\r\n            getData();\r\n        }, []);\r\n\r\n        if (postInfo && postInfo.success === true) {\r\n            return (\r\n                <div className=\"postInfo\">\r\n                    Type: Buying\r\n                    <br></br>\r\n\t\t\t\t\tPosted by: {postInfo.data.creator}\r\n                    <br></br>\r\n\t\t\t\t\tPrice: {postInfo.data.price}\r\n                    <br></br>\r\n\t\t\t\t\tTicket Price: {postInfo.data.ticketPrice}\r\n                    <br></br>\r\n\t\t\t\t\tRating: {postInfo.data.rating}\r\n                    <br></br>\r\n\t\t\t\t\tdatePosted: {postInfo.data.createdAt}\r\n                    <br></br>\r\n\t\t\t\t\texpirationTime: {postInfo.data.endTime}\r\n                </div>\r\n            )\r\n        } else if (postInfo && postInfo.success === false) {\r\n            return (\r\n                <div>\r\n                    Error<br />\r\n                    {postInfo.error}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <GetUser />\r\n            <PostInfo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JoinQueue","C:\\554workspace\\finalproject\\client\\src\\components\\PrivateRoute.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\SignOut.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\ChangePassword.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\UploadProfilePic.js",["146"],"C:\\554workspace\\finalproject\\client\\src\\components\\SocialSignIn.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\App.js",["147"],"C:\\554workspace\\finalproject\\client\\src\\components\\EditAccount.js",["148","149","150","151","152","153","154","155"],"C:\\554workspace\\finalproject\\client\\src\\firebase\\Auth.js",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":15},{"ruleId":"160","severity":1,"message":"164","line":5,"column":45,"nodeType":"162","messageId":"163","endLine":5,"endColumn":54},{"ruleId":"160","severity":1,"message":"165","line":5,"column":86,"nodeType":"162","messageId":"163","endLine":5,"endColumn":92},{"ruleId":"160","severity":1,"message":"166","line":61,"column":27,"nodeType":"162","messageId":"163","endLine":61,"endColumn":32},{"ruleId":"167","severity":1,"message":"168","line":71,"column":12,"nodeType":"169","endLine":71,"endColumn":14,"suggestions":"170"},{"ruleId":"167","severity":1,"message":"168","line":147,"column":12,"nodeType":"169","endLine":147,"endColumn":14,"suggestions":"171"},{"ruleId":"156","replacedBy":"172"},{"ruleId":"158","replacedBy":"173"},{"ruleId":"160","severity":1,"message":"174","line":2,"column":7,"nodeType":"162","messageId":"163","endLine":2,"endColumn":12},{"ruleId":"160","severity":1,"message":"175","line":11,"column":16,"nodeType":"162","messageId":"163","endLine":11,"endColumn":21},{"ruleId":"167","severity":1,"message":"176","line":52,"column":8,"nodeType":"169","endLine":52,"endColumn":21,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":92,"column":41,"nodeType":"180","endLine":92,"endColumn":105},{"ruleId":"178","severity":1,"message":"179","line":105,"column":41,"nodeType":"180","endLine":105,"endColumn":101},{"ruleId":"160","severity":1,"message":"161","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":15},{"ruleId":"160","severity":1,"message":"181","line":4,"column":16,"nodeType":"162","messageId":"163","endLine":4,"endColumn":30},{"ruleId":"160","severity":1,"message":"182","line":41,"column":8,"nodeType":"162","messageId":"163","endLine":41,"endColumn":13},{"ruleId":"160","severity":1,"message":"183","line":113,"column":9,"nodeType":"162","messageId":"163","endLine":113,"endColumn":16},{"ruleId":"167","severity":1,"message":"184","line":124,"column":6,"nodeType":"169","endLine":124,"endColumn":8,"suggestions":"185"},{"ruleId":"160","severity":1,"message":"161","line":3,"column":8,"nodeType":"162","messageId":"163","endLine":3,"endColumn":15},{"ruleId":"160","severity":1,"message":"182","line":40,"column":8,"nodeType":"162","messageId":"163","endLine":40,"endColumn":13},{"ruleId":"160","severity":1,"message":"186","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":24},{"ruleId":"160","severity":1,"message":"182","line":50,"column":15,"nodeType":"162","messageId":"163","endLine":50,"endColumn":20},{"ruleId":"160","severity":1,"message":"187","line":53,"column":17,"nodeType":"162","messageId":"163","endLine":53,"endColumn":23},{"ruleId":"160","severity":1,"message":"188","line":53,"column":25,"nodeType":"162","messageId":"163","endLine":53,"endColumn":34},{"ruleId":"160","severity":1,"message":"189","line":56,"column":17,"nodeType":"162","messageId":"163","endLine":56,"endColumn":27},{"ruleId":"160","severity":1,"message":"190","line":56,"column":29,"nodeType":"162","messageId":"163","endLine":56,"endColumn":42},{"ruleId":"167","severity":1,"message":"191","line":245,"column":12,"nodeType":"169","endLine":245,"endColumn":25,"suggestions":"192"},{"ruleId":"160","severity":1,"message":"193","line":1,"column":29,"nodeType":"162","messageId":"163","endLine":1,"endColumn":38},{"ruleId":"160","severity":1,"message":"194","line":1,"column":40,"nodeType":"162","messageId":"163","endLine":1,"endColumn":48},{"ruleId":"160","severity":1,"message":"195","line":14,"column":58,"nodeType":"162","messageId":"163","endLine":14,"endColumn":62},{"ruleId":"160","severity":1,"message":"196","line":2,"column":8,"nodeType":"162","messageId":"163","endLine":2,"endColumn":21},{"ruleId":"160","severity":1,"message":"197","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":22},{"ruleId":"160","severity":1,"message":"186","line":5,"column":8,"nodeType":"162","messageId":"163","endLine":5,"endColumn":24},{"ruleId":"160","severity":1,"message":"161","line":6,"column":8,"nodeType":"162","messageId":"163","endLine":6,"endColumn":15},{"ruleId":"160","severity":1,"message":"198","line":7,"column":10,"nodeType":"162","messageId":"163","endLine":7,"endColumn":14},{"ruleId":"160","severity":1,"message":"199","line":8,"column":10,"nodeType":"162","messageId":"163","endLine":8,"endColumn":14},{"ruleId":"160","severity":1,"message":"181","line":8,"column":16,"nodeType":"162","messageId":"163","endLine":8,"endColumn":30},{"ruleId":"160","severity":1,"message":"200","line":8,"column":32,"nodeType":"162","messageId":"163","endLine":8,"endColumn":43},{"ruleId":"160","severity":1,"message":"164","line":8,"column":45,"nodeType":"162","messageId":"163","endLine":8,"endColumn":54},{"ruleId":"160","severity":1,"message":"201","line":8,"column":56,"nodeType":"162","messageId":"163","endLine":8,"endColumn":60},{"ruleId":"160","severity":1,"message":"202","line":8,"column":62,"nodeType":"162","messageId":"163","endLine":8,"endColumn":72},{"ruleId":"160","severity":1,"message":"203","line":8,"column":74,"nodeType":"162","messageId":"163","endLine":8,"endColumn":84},{"ruleId":"160","severity":1,"message":"165","line":8,"column":86,"nodeType":"162","messageId":"163","endLine":8,"endColumn":92},{"ruleId":"160","severity":1,"message":"204","line":14,"column":12,"nodeType":"162","messageId":"163","endLine":14,"endColumn":18},{"ruleId":"160","severity":1,"message":"205","line":15,"column":20,"nodeType":"162","messageId":"163","endLine":15,"endColumn":29},{"ruleId":"167","severity":1,"message":"191","line":27,"column":8,"nodeType":"169","endLine":27,"endColumn":21,"suggestions":"206"},{"ruleId":"160","severity":1,"message":"197","line":14,"column":8,"nodeType":"162","messageId":"163","endLine":14,"endColumn":22},{"ruleId":"160","severity":1,"message":"207","line":4,"column":8,"nodeType":"162","messageId":"163","endLine":4,"endColumn":20},{"ruleId":"208","severity":1,"message":"209","line":18,"column":28,"nodeType":"210","messageId":"211","endLine":18,"endColumn":30},{"ruleId":"208","severity":1,"message":"209","line":21,"column":30,"nodeType":"210","messageId":"211","endLine":21,"endColumn":32},{"ruleId":"208","severity":1,"message":"209","line":24,"column":30,"nodeType":"210","messageId":"211","endLine":24,"endColumn":32},{"ruleId":"208","severity":1,"message":"209","line":27,"column":30,"nodeType":"210","messageId":"211","endLine":27,"endColumn":32},{"ruleId":"208","severity":1,"message":"209","line":27,"column":62,"nodeType":"210","messageId":"211","endLine":27,"endColumn":64},{"ruleId":"208","severity":1,"message":"209","line":30,"column":30,"nodeType":"210","messageId":"211","endLine":30,"endColumn":32},{"ruleId":"208","severity":1,"message":"209","line":30,"column":62,"nodeType":"210","messageId":"211","endLine":30,"endColumn":64},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'noImage' is defined but never used.","Identifier","unusedVar","'CardMedia' is defined but never used.","'Button' is defined but never used.","'queue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.id'. Either include it or remove the dependency array.","ArrayExpression",["214"],["215"],["212"],["213"],"'axios' is assigned a value but never used.","'setID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.email' and 'receivedMessage'. Either include them or remove the dependency array.",["216"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'CardActionArea' is defined but never used.","'regex' is assigned a value but never used.","'classes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser'. Either include it or remove the dependency array.",["217"],"'UploadProfilePic' is defined but never used.","'buying' is assigned a value but never used.","'setBuying' is assigned a value but never used.","'searchTerm' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.",["218"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'sell' is assigned a value but never used.","'SignOutButton' is defined but never used.","'ChangePassword' is defined but never used.","'Link' is defined but never used.","'Card' is defined but never used.","'CardContent' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'makeStyles' is defined but never used.","'userId' is assigned a value but never used.","'setPostId' is assigned a value but never used.",["219"],"'SocialSignIn' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"220","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"227","fix":"229"},"Update the dependencies array to be: [currentUser.id]",{"range":"230","text":"231"},{"range":"232","text":"231"},"Update the dependencies array to be: [currentUser.email, receivedMessage, setMessages]",{"range":"233","text":"234"},"Update the dependencies array to be: [currentUser]",{"range":"235","text":"236"},"Update the dependencies array to be: [currentUser.email, multerImage]",{"range":"237","text":"238"},{"range":"239","text":"238"},[2231,2233],"[currentUser.id]",[5138,5140],[1999,2012],"[currentUser.email, receivedMessage, setMessages]",[3126,3128],"[currentUser]",[8766,8779],"[currentUser.email, multerImage]",[1031,1044]]