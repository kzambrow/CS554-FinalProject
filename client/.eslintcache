<<<<<<< HEAD
[{"/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/components/App.js":"1","/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/components/ChangePassword.js":"2","/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/components/SocialSignIn.js":"3","/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/components/Account.js":"4","/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/firebase/FirebaseFunctions.js":"5","/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/components/SignOut.js":"6","/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/reportWebVitals.js":"7","/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/firebase/Firebase.js":"8"},{"size":1114,"mtime":1608056722746,"results":"9","hashOfConfig":"10"},{"size":2579,"mtime":1608056722746,"results":"11","hashOfConfig":"10"},{"size":707,"mtime":1608056722748,"results":"12","hashOfConfig":"10"},{"size":8747,"mtime":1608062560317,"results":"13","hashOfConfig":"10"},{"size":1588,"mtime":1608056722749,"results":"14","hashOfConfig":"10"},{"size":247,"mtime":1608056722748,"results":"15","hashOfConfig":"10"},{"size":362,"mtime":1608056722751,"results":"16","hashOfConfig":"10"},{"size":524,"mtime":1608056722749,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"hqh9le",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/components/App.js",[],["36","37"],"/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/components/ChangePassword.js",[],"/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/components/SocialSignIn.js",[],["38","39"],"/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/components/Account.js",["40","41","42","43","44","45"],"/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/firebase/FirebaseFunctions.js",["46"],"/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/components/SignOut.js",[],"/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/reportWebVitals.js",[],"/Users/yunxiangfan/Documents/Course Work/2020 Fall/CS554/Project/CS554-FinalProject/client/src/firebase/Firebase.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"47","replacedBy":"51"},{"ruleId":"49","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":50,"column":15,"nodeType":"55","messageId":"56","endLine":50,"endColumn":20},{"ruleId":"53","severity":1,"message":"57","line":53,"column":17,"nodeType":"55","messageId":"56","endLine":53,"endColumn":23},{"ruleId":"53","severity":1,"message":"58","line":53,"column":25,"nodeType":"55","messageId":"56","endLine":53,"endColumn":34},{"ruleId":"53","severity":1,"message":"59","line":56,"column":17,"nodeType":"55","messageId":"56","endLine":56,"endColumn":27},{"ruleId":"53","severity":1,"message":"60","line":56,"column":29,"nodeType":"55","messageId":"56","endLine":56,"endColumn":42},{"ruleId":"61","severity":1,"message":"62","line":220,"column":12,"nodeType":"63","endLine":220,"endColumn":14,"suggestions":"64"},{"ruleId":"53","severity":1,"message":"65","line":2,"column":7,"nodeType":"55","messageId":"56","endLine":2,"endColumn":12},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],["66"],["67"],"no-unused-vars","'regex' is assigned a value but never used.","Identifier","unusedVar","'buying' is assigned a value but never used.","'setBuying' is assigned a value but never used.","'searchTerm' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.","ArrayExpression",["68"],"'axios' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},"Update the dependencies array to be: [currentUser.email]",{"range":"71","text":"72"},[7314,7316],"[currentUser.email]"]
=======
[{"C:\\Users\\StevensUser\\Desktop\\554project\\CS554-FinalProject\\client\\src\\components\\Account.js":"1","C:\\Users\\StevensUser\\Desktop\\554project\\CS554-FinalProject\\client\\src\\components\\Landings.js":"2","C:\\Users\\StevensUser\\Desktop\\554project\\CS554-FinalProject\\client\\src\\components\\App.js":"3","C:\\Users\\StevensUser\\Desktop\\554project\\CS554-FinalProject\\client\\src\\components\\Landing.js":"4","C:\\Users\\StevensUser\\Desktop\\554project\\CS554-FinalProject\\client\\src\\components\\PostPage.js":"5"},{"size":9358,"mtime":1608062496625,"results":"6","hashOfConfig":"7"},{"size":3209,"mtime":1608063263188,"results":"8","hashOfConfig":"7"},{"size":1248,"mtime":1608063346527,"results":"9","hashOfConfig":"7"},{"size":3100,"mtime":1608063839063,"results":"10","hashOfConfig":"7"},{"size":3125,"mtime":1608064010388,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"187fknz",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\StevensUser\\Desktop\\554project\\CS554-FinalProject\\client\\src\\components\\Account.js",["24","25","26","27","28","29"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport SignOutButton from './SignOut';\r\nimport '../App.css';\r\nimport ChangePassword from './ChangePassword';\r\nimport UploadProfilePic from './UploadProfilePic';\r\nimport noImage from '../img/no-image.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { AuthContext } from '../firebase/Auth';\r\n\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n\t\tmarginRight: 'auto',\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n\t},\r\n\ttitleHead: {\r\n\t\tborderBottom: '1px solid #1e8678',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tgrid: {\r\n\t\tflexGrow: 1,\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\tmedia: {\r\n\t\theight: '100%',\r\n\t\twidth: '100%'\r\n\t},\r\n\tbutton: {\r\n\t\tcolor: '#1e8678',\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 12\r\n\t}\r\n});\r\n\r\n//TODO\r\n//provide links to change password\r\n//display user info\r\n//display different information for authenticated vs non authenticated\r\n//ask about updating user schema to include island code, nintendo ID\r\n\r\nfunction Account(props){\r\n    const ProfilePosts = (props) => {\r\n        const regex = /(<([^>]+)>)/gi;\r\n        const classes = useStyles();\r\n        const [ loading, setLoading ] = useState(true);\r\n        const [ buying, setBuying ] = useState(true);\r\n        //const [ searchData, setSearchData ] = useState(undefined);\r\n        const [ profileData, setProfileData ] = useState(undefined);\r\n        const [ searchTerm, setSearchTerm ] = useState('');\r\n\r\n        useEffect(() => {\r\n            async function fetchData() {\r\n                try {\r\n                    //getting data for user profile\r\n                    const { data } = await axios.get('http://localhost:5000/post/buy');\r\n                    setProfileData(data);\r\n                    setLoading(false);\r\n                } catch (e) {\r\n                    console.log(e);\r\n                }\r\n            }\r\n            fetchData();\r\n        }, []);\r\n    \r\n        //set Data for the previous Page\r\n        // const setPrevPage = () => {\r\n        //     if (pageData.page >= 1) {\r\n        //       const prevData = {\r\n        //         next: pageData.page,\r\n        //         previous: pageData.page - 2,\r\n        //         page: pageData.page - 1,\r\n                \r\n        //       };\r\n        //       setPageData(prevData);\r\n        //     }\r\n        //   };\r\n        \r\n        //   // Set Data for next Page\r\n        //   const setNextPage = () => {\r\n        //       const nextData = {\r\n        //         previous: pageData.page,\r\n        //         next: pageData.page + 2,\r\n        //         page: pageData.page + 1,\r\n                \r\n        //       };\r\n        //       setPageData(nextData);\r\n        //   };\r\n    \r\n        //   const DoPagination = (\r\n        //     <div>\r\n        //     <Button>\r\n        //     <Link\r\n        //       className=\"btn btn-dark\"\r\n        //       to={\"/page/\" + pageData.previous}\r\n        //       onClick={setPrevPage}\r\n        //     >\r\n        //       Previous\r\n        //     </Link>\r\n        //     </Button>\r\n            \r\n        //     <Button>\r\n        //     <Link\r\n        //       className=\"btn btn-dark\"\r\n        //       to={\"/page/\" + pageData.next}\r\n        //       onClick={setNextPage}\r\n        //     >\r\n        //       Next\r\n        //     </Link>\r\n        //     </Button>\r\n        //     </div>\r\n        //   );\r\n    \r\n        //   const DoPaginationf = (\r\n        //     <Button>\r\n        //     <Link\r\n        //       className=\"btn btn-dark\"\r\n        //       to={\"/page/\" + pageData.next}\r\n        //       onClick={setNextPage}\r\n        //     >\r\n        //       Next\r\n        //     </Link>\r\n        //     </Button>\r\n        //   );\r\n        \r\n        const buildCard = (show) => {\r\n            return (\r\n                <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id}>\r\n                    <Card className={classes.card} variant='outlined'>\r\n                        <CardActionArea>\r\n                            \r\n                                <CardMedia\r\n                                    className={classes.media}\r\n                                    component='img'\r\n                                    image={show.image && show.image.original ? show.image.original : noImage}\r\n                                    title='show image'\r\n                                />\r\n    \r\n                                <CardContent>\r\n            \r\n                                    <Typography variant='body2' color='textSecondary' component='p'>\r\n                                        Type: {show.sell ? \"Selling\": \"Buying\"}\r\n                                        <br></br>\r\n                                        Price: {show.price}\r\n                                        <br></br>\r\n                                        Ticket Price: {show.ticketPrice}\r\n                                        <br></br>\r\n                                        Rating: {show.rating}\r\n                                        <br></br>\r\n                                        datePosted: {show.Date}\r\n                                        <br></br>\r\n                                        expirationTime: {show.endTime}\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            \r\n                        </CardActionArea>\r\n                    </Card>\r\n                </Grid>\r\n            );\r\n        };\r\n        \r\n        let card = null;\r\n        card =\r\n            profileData &&\r\n            profileData.data.map((show) => {\r\n                return buildCard(show);\r\n        });\r\n        if (loading) {\r\n            return (\r\n                <div>\r\n                    <h2>Loading....</h2>\r\n                </div>\r\n            );\r\n        // } else if(pageData.page >= 1) {\r\n        //     return (\r\n        //         <div>\r\n        //             <br />\r\n        //             <br />\r\n        //             <Button> <Link to =  {\"/sell\" }> Selling </Link> </Button>\r\n        //             {DoPagination}\r\n        //             <Grid container className={classes.grid} spacing={5}>\r\n        //                 {card}\r\n        //             </Grid>\r\n        //         </div>\r\n        //     );\r\n        }\r\n        else{\r\n            return (\r\n                //This only appears on Page 1 \r\n                <div>\r\n                    <br />\r\n                    <br />\r\n                    <Button> <Link to =  {\"/sell\" }> Selling </Link> </Button>\r\n                    {/* {DoPaginationf} */}\r\n                    <Grid container className={classes.grid} spacing={5}>\r\n                        {card}\r\n                    </Grid>\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n    function AccountInfo(){\r\n\r\n        useEffect(() => {\r\n            async function getData(){\r\n                const userInfo = await axios.get(`http://localhost:5000/user/email/${currentUser.email}`); \r\n                //console.log(userInfo); \r\n                setUserData(userInfo); \r\n                console.log(userInfo);\r\n            };\r\n            getData();\r\n        }, []);\r\n        \r\n        const {currentUser}= useContext(AuthContext);\r\n        const [userData, setUserData] = useState(undefined); \r\n        const classes = useStyles();\r\n        async function getData(){\r\n            const userInfo = await axios.get(`http://localhost:5000/user/email/${currentUser.email}`); \r\n            console.log(userInfo); \r\n            setUserData(userInfo); \r\n            //console.log(userInfo);\r\n        }\r\n        getData(); \r\n        console.log(\"userData is \", userData);\r\n        let card = null; \r\n        \r\n        userData && (card = \r\n            <Card className={classes.card} variant='outlined'>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        component='img'\r\n                        image={noImage}\r\n                        title='show image'\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant='body2' color='textSecondary' component='p'>\r\n                            <br></br>\r\n                            Username: {userData.data.data.displayName}\r\n                            <br></br>\r\n                            Island Code: ABCD \r\n                            <br></br>\r\n                            Ingame Name: GAMER1\r\n                            <br></br>\r\n                            Nintendo ID: 1234567 \r\n\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        );\r\n        \r\n        return(\r\n            <Grid container className={classes.grid} spacing={5}>\r\n                {card}\r\n            </Grid>\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <h2>Account Page</h2>\r\n            <ProfilePosts />\r\n            <ChangePassword />\r\n            <SignOutButton />\r\n            <AccountInfo />\r\n            <UploadProfilePic />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Account","C:\\Users\\StevensUser\\Desktop\\554project\\CS554-FinalProject\\client\\src\\components\\Landings.js",["30"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport noImage from '../img/no-image.png';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport '../App.css';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n\t\tmarginRight: 'auto',\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n\t},\r\n\ttitleHead: {\r\n\t\tborderBottom: '1px solid #1e8678',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tgrid: {\r\n\t\tflexGrow: 1,\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\tmedia: {\r\n\t\theight: '100%',\r\n\t\twidth: '100%'\r\n\t},\r\n\tbutton: {\r\n\t\tcolor: '#1e8678',\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 12\r\n\t}\r\n});\r\nconst Landings = (props) => {\r\n\tconst regex = /(<([^>]+)>)/gi;\r\n\tconst classes = useStyles();\r\n \tconst [ loading, setLoading ] = useState(true);\r\n\tconst [ showsData, setShowsData ] = useState(undefined);\r\n\tconst [visible, setVisible] = useState(4);\r\n\t\r\n\tlet card = null;\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log('on load useeffect');\r\n\t\tasync function fetchData() {\r\n\t\t\ttry {\r\n\t\t\t\t//Assuming this is the address of the database (Will change if different)\r\n\t\t\t\tconst { data } = await axios.get('http://localhost:5000/post/sell');\r\n\t\t\t\tsetShowsData(data);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\r\n\r\n\t\r\n\tconst showMore = () => {\r\n\t\tsetVisible((prevValue) => prevValue + 4);\r\n\t}\r\n\t\r\n\r\n\tconst buildCard = (show) => {\r\n\t\treturn (\r\n\t\t\t<Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id}>\r\n\t\t\t\t<Card className={classes.card} variant='outlined'>\r\n\t\t\t\t\t<CardActionArea>\r\n\r\n\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\t\t\t\tcomponent='img'\r\n\t\t\t\t\t\t\t\timage={show.image && show.image.original ? show.image.original : noImage}\r\n\t\t\t\t\t\t\t\ttitle='show image'\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<CardContent>\r\n\r\n\t\t\t\t\t\t\t\t<Typography variant='body2' color='textSecondary' component='p'>\r\n\t\t\t\t\t\t\t\t\tType: Selling\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPosted by: {show.creator} \r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPrice: {show.price}\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tTicket Price: {show.ticketPrice}\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tRating: {show.rating}\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tdatePosted: {show.createdAt}\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\texpirationTime: {show.endTime}\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\r\n\t\t\t\t\t</CardActionArea>\r\n\t\t\t\t\t<Button><Link to = {`/posts/${show._id}`}> More Info</Link></Button>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t};\r\n\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Loading....</h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else{\r\n\t\tcard =\r\n\t\tshowsData &&\r\n\t\tshowsData.data.slice(0,visible).map((show) => {\r\n\t\t\treturn buildCard(show);\r\n\t\t});\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button> <Link to =  {\"/\" }> Buying </Link> </Button>\r\n\t\t\t\t\r\n\t\t\t\t<Grid container className={classes.grid} spacing={5}>\r\n\t\t\t\t{card}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Button style = {{display: visible >= showsData.data.length? 'none' : 'block'}} onClick = {showMore}>Load More</Button>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Landings;","C:\\Users\\StevensUser\\Desktop\\554project\\CS554-FinalProject\\client\\src\\components\\App.js",[],"C:\\Users\\StevensUser\\Desktop\\554project\\CS554-FinalProject\\client\\src\\components\\Landing.js",["31","32"],"C:\\Users\\StevensUser\\Desktop\\554project\\CS554-FinalProject\\client\\src\\components\\PostPage.js",["33","34","35"],{"ruleId":"36","severity":1,"message":"37","line":50,"column":15,"nodeType":"38","messageId":"39","endLine":50,"endColumn":20},{"ruleId":"36","severity":1,"message":"40","line":53,"column":17,"nodeType":"38","messageId":"39","endLine":53,"endColumn":23},{"ruleId":"36","severity":1,"message":"41","line":53,"column":25,"nodeType":"38","messageId":"39","endLine":53,"endColumn":34},{"ruleId":"36","severity":1,"message":"42","line":56,"column":17,"nodeType":"38","messageId":"39","endLine":56,"endColumn":27},{"ruleId":"36","severity":1,"message":"43","line":56,"column":29,"nodeType":"38","messageId":"39","endLine":56,"endColumn":42},{"ruleId":"44","severity":1,"message":"45","line":218,"column":12,"nodeType":"46","endLine":218,"endColumn":14,"suggestions":"47"},{"ruleId":"36","severity":1,"message":"37","line":39,"column":8,"nodeType":"38","messageId":"39","endLine":39,"endColumn":13},{"ruleId":"36","severity":1,"message":"48","line":4,"column":16,"nodeType":"38","messageId":"39","endLine":4,"endColumn":30},{"ruleId":"36","severity":1,"message":"37","line":38,"column":8,"nodeType":"38","messageId":"39","endLine":38,"endColumn":13},{"ruleId":"36","severity":1,"message":"48","line":5,"column":16,"nodeType":"38","messageId":"39","endLine":5,"endColumn":30},{"ruleId":"36","severity":1,"message":"49","line":5,"column":56,"nodeType":"38","messageId":"39","endLine":5,"endColumn":60},{"ruleId":"36","severity":1,"message":"50","line":5,"column":86,"nodeType":"38","messageId":"39","endLine":5,"endColumn":92},"no-unused-vars","'regex' is assigned a value but never used.","Identifier","unusedVar","'buying' is assigned a value but never used.","'setBuying' is assigned a value but never used.","'searchTerm' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.","ArrayExpression",["51"],"'CardActionArea' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.",{"desc":"52","fix":"53"},"Update the dependencies array to be: [currentUser.email]",{"range":"54","text":"55"},[7379,7381],"[currentUser.email]"]
>>>>>>> e48fe9045f620f96e7b39f5aefa9f5242e0e4448
