[{"C:\\554workspace\\finalproject\\client\\src\\components\\App.js":"1","C:\\554workspace\\finalproject\\client\\src\\index.js":"2","C:\\554workspace\\finalproject\\client\\src\\components\\Landing.js":"3","C:\\554workspace\\finalproject\\client\\src\\components\\Landings.js":"4","C:\\554workspace\\finalproject\\client\\src\\components\\Account.js":"5","C:\\554workspace\\finalproject\\client\\src\\components\\Navigation.js":"6","C:\\554workspace\\finalproject\\client\\src\\components\\SignIn.js":"7","C:\\554workspace\\finalproject\\client\\src\\components\\Chat.js":"8","C:\\554workspace\\finalproject\\client\\src\\components\\Post.js":"9","C:\\554workspace\\finalproject\\client\\src\\components\\PostPage.js":"10","C:\\554workspace\\finalproject\\client\\src\\components\\EditAccount.js":"11","C:\\554workspace\\finalproject\\client\\src\\components\\ChangePassword.js":"12","C:\\554workspace\\finalproject\\client\\src\\components\\JoinQueue.js":"13","C:\\554workspace\\finalproject\\client\\src\\components\\PrivateRoute.js":"14","C:\\554workspace\\finalproject\\client\\src\\firebase\\Auth.js":"15","C:\\554workspace\\finalproject\\client\\src\\components\\UploadProfilePic.js":"16","C:\\554workspace\\finalproject\\client\\src\\components\\SocialSignIn.js":"17","C:\\554workspace\\finalproject\\client\\src\\firebase\\Firebase.js":"18","C:\\554workspace\\finalproject\\client\\src\\components\\GetCode.js":"19","C:\\554workspace\\finalproject\\client\\src\\components\\SignUp.js":"20","C:\\554workspace\\finalproject\\client\\src\\components\\CurrentUserAccount.js":"21","C:\\554workspace\\finalproject\\client\\src\\firebase\\FirebaseFunctions.js":"22","C:\\554workspace\\finalproject\\client\\src\\components\\GetWaitingInfo.js":"23"},{"size":1824,"mtime":1608420052557,"results":"24","hashOfConfig":"25"},{"size":578,"mtime":1608326411842,"results":"26","hashOfConfig":"25"},{"size":3540,"mtime":1608348568649,"results":"27","hashOfConfig":"25"},{"size":3298,"mtime":1608348555529,"results":"28","hashOfConfig":"25"},{"size":9051,"mtime":1608418374737,"results":"29","hashOfConfig":"25"},{"size":2454,"mtime":1608418526549,"results":"30","hashOfConfig":"25"},{"size":3089,"mtime":1608430763283,"results":"31","hashOfConfig":"25"},{"size":5233,"mtime":1608418921313,"results":"32","hashOfConfig":"25"},{"size":5034,"mtime":1608420052558,"results":"33","hashOfConfig":"25"},{"size":5285,"mtime":1608418374742,"results":"34","hashOfConfig":"25"},{"size":3796,"mtime":1608418374741,"results":"35","hashOfConfig":"25"},{"size":2672,"mtime":1608147521895,"results":"36","hashOfConfig":"25"},{"size":2602,"mtime":1608147521898,"results":"37","hashOfConfig":"25"},{"size":499,"mtime":1608147521902,"results":"38","hashOfConfig":"25"},{"size":1909,"mtime":1608167277018,"results":"39","hashOfConfig":"25"},{"size":2135,"mtime":1608418374743,"results":"40","hashOfConfig":"25"},{"size":739,"mtime":1608147521906,"results":"41","hashOfConfig":"25"},{"size":537,"mtime":1608147521908,"results":"42","hashOfConfig":"25"},{"size":3910,"mtime":1608326411835,"results":"43","hashOfConfig":"25"},{"size":3323,"mtime":1608431480681,"results":"44","hashOfConfig":"25"},{"size":5589,"mtime":1608326411833,"results":"45","hashOfConfig":"25"},{"size":1711,"mtime":1608147521909,"results":"46","hashOfConfig":"25"},{"size":4075,"mtime":1608326411836,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1yyacow",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"53"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"53"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"53"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"53"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"53"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"53"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"53"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\554workspace\\finalproject\\client\\src\\components\\App.js",[],["105","106"],"C:\\554workspace\\finalproject\\client\\src\\index.js",[],["107","108"],"C:\\554workspace\\finalproject\\client\\src\\components\\Landing.js",["109","110"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Card, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport '../App.css';\r\nimport turnip from '../img/turnip.png'\r\nimport Account from './Account'; \r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n\t\tmarginRight: 'auto',\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n\t},\r\n\ttitleHead: {\r\n\t\tborderBottom: '1px solid #1e8678',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tgrid: {\r\n\t\tflexGrow: 1,\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\tmedia: {\r\n\t\theight: '100%',\r\n\t\twidth: '100%'\r\n\t},\r\n\tbutton: {\r\n\t\tcolor: '#1e8678',\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 12\r\n\t}\r\n});\r\nconst Landing = (props) => {\r\n\t\r\n\tconst classes = useStyles();\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [showsData, setShowsData] = useState(undefined);\r\n\tconst [visible, setVisible] = useState(4);\r\n\t\r\n\r\n\r\n\tlet card = null;\r\n\r\n\r\n\tuseEffect(() => {\r\n\r\n\t\tasync function fetchData() {\r\n\t\t\ttry {\r\n\t\t\t\t//getting data for main page\r\n\t\t\t\tconst { data } = await axios.get('http://localhost:5000/post/buy');\r\n\t\t\t\tsetShowsData(data);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tconsole.log(e);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\r\n\tconst showMore = () => {\r\n\t\tsetVisible((prevValue) => prevValue + 4);\r\n\t}\r\n\t\r\n\t\r\n\tconst buildCard = (show) => { \r\n\t\tconsole.log('show ID is ' + show.creator); \r\n\t\treturn (\r\n\t\t\t<Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id}>\r\n\t\t\t\t<Card className={classes.card} variant='outlined'>\r\n\t\t\t\t\t\t\t<CardMedia\r\n\t\t\t\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\t\t\t\tcomponent='img'\r\n\t\t\t\t\t\t\t\timage='/imgs/turnip.png'\r\n\t\t\t\t\t\t\t\talt = 'No image'\r\n\t\t\t\t\t\t\t\ttitle='show image'\r\n\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Typography variant='body2' color='textSecondary' component='p'>\r\n\t\t\t\t\t\t\t\t\tType: Buying\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPosted by: \r\n\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t{/* <Link to ={{pathname: '/account',\r\n\t\t\t\t\t\t\t\t\t\tstate:{\r\n\t\t\t\t\t\t\t\t\t\t\tuser:user\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}}>a</Link>\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t */}\r\n\t\t\t\t\t\t\t\t\t<Link to = {'/account/' + show.creator}> {show.displayName} </Link>\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tPrice: {show.price}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tTicket Price: {show.ticketPrice}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tDescription: {show.description ? <p>{show.description}</p> : \"None available\"}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\tdatePosted: {show.createdAt}\r\n\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\texpirationTime: {show.endTime}<br />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</CardContent>\r\n\r\n\t\t\t\t\t{/* <Button><Link to={'/joinqueue'} postId={show.id}></Link></Button> */}\r\n\t\t\t\t\t<Button><Link to={`/posts/${show._id}`} > More Info</Link></Button>\r\n\t\t\t\t</Card>\r\n\t\t\t</Grid>\r\n\t\t);\r\n\t};\r\n\r\n\r\n\r\n\tif (loading) {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Loading....</h2>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\telse {\r\n\t\tcard =\r\n\t\t\tshowsData &&\r\n\t\t\tshowsData.data.slice(0, visible).map((show) => {\r\n\t\t\t\treturn buildCard(show);\r\n\t\t\t});\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<br />\r\n\t\t\t\t<br />\r\n\t\t\t\t<Button style = {{position: 'absolute', left: '50%'}}> <Link to={\"/sell\"}> View Selling </Link> </Button>\r\n\t\t\t\t<br/><br/>\r\n\r\n\t\t\t\t<Grid container className={classes.grid} spacing={5}>\r\n\t\t\t\t\t{card}\r\n\t\t\t\t</Grid>\r\n\t\t\t\t<Button style={{ display: visible >= showsData.data.length ? 'none' : 'block' }} onClick={showMore}>Load More</Button>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default Landing;","C:\\554workspace\\finalproject\\client\\src\\components\\Landings.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\Account.js",["111","112","113","114","115","116","117","118","119"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport SignOutButton from './SignOut';\r\nimport '../App.css';\r\nimport ChangePassword from './ChangePassword';\r\nimport UploadProfilePic from './UploadProfilePic';\r\nimport noImage from '../img/no-image.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport CurrentUserAccount from './CurrentUserAccount';\r\n\r\n\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n\tcard: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        marginTop: 100,\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n    },\r\n    card2: {\r\n\t\tmaxWidth: 250,\r\n\t\theight: 'auto',\r\n\t\tmarginLeft: 'auto',\r\n        marginRight: 0,\r\n        marginTop: 0,\r\n\t\tborderRadius: 5,\r\n\t\tborder: '1px solid #1e8678',\r\n\t\tboxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n    },\r\n\ttitleHead: {\r\n\t\tborderBottom: '1px solid #1e8678',\r\n\t\tfontWeight: 'bold'\r\n\t},\r\n\tgrid: {\r\n\t\tflexGrow: 1,\r\n\t\tflexDirection: 'row'\r\n\t},\r\n\tmedia: {\r\n\t\theight: '100%',\r\n\t\twidth: '100%'\r\n\t},\r\n\tbutton: {\r\n\t\tcolor: '#1e8678',\r\n\t\tfontWeight: 'bold',\r\n\t\tfontSize: 12\r\n\t}\r\n});\r\n\r\n//TODO\r\n//Add nintendo id attribute to user \r\n//Change color on user links and more info \r\n//format account page\r\n\r\nfunction Account(props){\r\n    //console.log(props.match.params.id); \r\n    const regex = /(<([^>]+)>)/gi;\r\n    const classes = useStyles();\r\n    const [loading, setLoading ] = useState(true);\r\n    const [profilePost, setProfilePost ] = useState(undefined); \r\n    const [userData, setUserData] = useState(undefined); \r\n    const [userId, setUserId] = useState(props.match.params.id); \r\n    const [multerImage, setMulterImage] = useState(\"/imgs/turnip.png\");\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    //console.log(currentUser.id); \r\n\r\n    //Get all the posts posted by the user\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                const { data } = await axios.get(`http://localhost:5000/post/byUser/${userId}`);\r\n                setProfilePost(data);\r\n                setLoading(false);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, [userId]);\r\n    \r\n    const buildCard = (show) => {\r\n        return (\r\n            <Grid item xs={12} sm={6} md={4} lg={3} xl={2} key={show.id}>\r\n                <Card className={classes.card} variant='outlined'>\r\n                    <CardActionArea>\r\n                    <CardMedia\r\n\t\t\t\t\t\t\t\tclassName={classes.media}\r\n\t\t\t\t\t\t\t\tcomponent='img'\r\n\t\t\t\t\t\t\t\timage='/imgs/turnip.png'\r\n\t\t\t\t\t\t\t\talt = 'No image'\r\n\t\t\t\t\t\t\t\ttitle='show image'\r\n\t\t\t\t\t\t\t/>\r\n                            <CardContent>\r\n                                <Typography variant='body2' color='textSecondary' component='p'>\r\n                                    Type: {show.sell ? \"Selling\": \"Buying\"}\r\n                                    <br></br>\r\n                                    Price: {show.price}\r\n                                    <br></br>\r\n                                    Ticket Price: {show.ticketPrice}\r\n                                    <br></br>\r\n                                    Rating: {show.rating}\r\n                                    <br></br>\r\n                                    datePosted: {show.Date}\r\n                                    <br></br>\r\n                                    expirationTime: {show.endTime}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        \r\n                    </CardActionArea>\r\n                </Card>\r\n            </Grid>\r\n        );\r\n    };\r\n    \r\n    console.log('profilePost is ', profilePost); \r\n    let card = null;\r\n    card =\r\n        profilePost && profilePost.data &&(\r\n        buildCard(profilePost.data)\r\n    );\r\n\r\n    //GET User Info to be displayed on the side\r\n    useEffect(() => {\r\n        async function getData(){\r\n            const userInfo = await axios.get(`http://localhost:5000/user/${userId}`); \r\n            //console.log(userInfo); \r\n            setUserData(userInfo);  \r\n        };\r\n        getData();\r\n            setLoading(false);\r\n    }, [userId]);\r\n\r\n    //get User profile image\r\n    useEffect(() => {\r\n        async function getImage() {\r\n            \r\n            try {\r\n                const profile = await axios.get(`http://localhost:5000/images/${userId}`); \r\n                let newimageSource = profile.data.data.imageData;\r\n                let finalimageSource = newimageSource.replaceAll(\"\\\\\", \"/\").replace(\"../client/public\", \"\");\r\n                if (finalimageSource.includes(\".png\")) {\r\n                    finalimageSource = finalimageSource.replace(\".png\", \"_medium.png\");\r\n                }\r\n                if (finalimageSource.includes(\".jpeg\")) {\r\n                    finalimageSource = finalimageSource.replace(\".jpeg\", \"_medium.jpeg\");\r\n                }\r\n                if (finalimageSource.includes(\".jpg\")) {\r\n                    finalimageSource = finalimageSource.replace(\".jpg\", \"_medium.jpg\");\r\n                }\r\n                setMulterImage(finalimageSource);\r\n                console.log('multer image is ' + multerImage);\r\n            } catch (e) {\r\n                setMulterImage(\"/imgs/turnip.png\");\r\n                console.log(e);\r\n            }\r\n        }\r\n        getImage();\r\n    }, [userId]);\r\n\r\n\r\n    //console.log('userData is, ' + userData);\r\n    //console.log('userData email is, ' + userData.data.data.email);\r\n\r\n    let userCard = null; \r\n\r\n        //non authenticated view\r\n         userData && (userCard = \r\n\r\n            <Card className={classes.card2} variant='outlined'>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        component='img'\r\n                        image={multerImage}\r\n                        title='show image'\r\n                    />\r\n                    <CardContent >\r\n                        <Typography variant='body2' color='textSecondary' component='p'>\r\n                            <br></br>\r\n                            Username: {userData.data.data.displayName}\r\n                            <br></br>\r\n                            Island Code: {userData.data.data.islandName} \r\n                            <br></br>\r\n                            Ingame Name: {userData.data.data.inGameName}\r\n                            <br></br>\r\n                            Nintendo ID: 1234567 \r\n                            <br></br>\r\n                            Stars: {userData.data.data.star}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n        );\r\n        \r\n        //authenticated view \r\n        userData && multerImage && currentUser && currentUser.id === userId && (userCard = \r\n            <Card className={classes.card2} variant='outlined'>\r\n                <CardActionArea>\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        component='img'\r\n                        image={multerImage}\r\n                        title='show image'\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant='body2' color='textSecondary' component='p'>\r\n                        <br></br>\r\n                            Username: {userData.data.data.displayName}\r\n                            <br></br>\r\n                            Island Code: {userData.data.data.islandName} \r\n                            <br></br>\r\n                            Ingame Name: {userData.data.data.inGameName}\r\n                            <br></br>\r\n                            Nintendo ID: 1234567 \r\n                            <br></br>\r\n                            Email: {currentUser.email}\r\n                            <br></br>\r\n                            Stars: {userData.data.data.star}\r\n                            <br></br>\r\n                            <br></br>\r\n                            <Link to = '/editaccount'> Edit Profile</Link>\r\n                            <br></br>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n            </Card>\r\n    \r\n    )\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                <h2>Loading....</h2>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        return (\r\n            <div>\r\n                <br />\r\n                <br />\r\n                    {userCard}\r\n                <div>\r\n                <Grid container className={classes.grid} spacing={5}>\r\n                    {card}\r\n                </Grid>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Account; ","C:\\554workspace\\finalproject\\client\\src\\components\\Navigation.js",["120","121","122","123","124"],"import React, { useContext } from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport SignOutButton from './SignOut';\r\nimport '../App.css';\r\nimport Navbar from 'react-bootstrap/Navbar'; \r\nimport Nav from 'react-bootstrap/Nav'; \r\nimport button from 'react-bootstrap/Button'; \r\nimport {doSignOut} from '../firebase/FirebaseFunctions';\r\nconst Navigation = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  console.log(currentUser)\r\n  return <div>{currentUser ? <NavigationAuth /> : <NavigationNonAuth />}</div>;\r\n};\r\nconst NavigationAuth = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <nav className=\"navigation\">\r\n    <div class = \"topnav\">\r\n          <img class = \"logo\" src = \"/imgs/turnip_logo.png\" alt=\"No-img\"/>\r\n          <Link activeClassName=\"active\" to=\"/\">Turnip Exchange</Link>\r\n          <Link activeClassName=\"active\" to=\"/\">Home</Link>\r\n          <Link to={'/account/' + currentUser.id}>Account</Link>\r\n          <Link to={'/post/addpost'}>Add Post</Link>\r\n          <Link to=\"#signout\" onClick={doSignOut}> Sign Out</Link>\r\n          {/* <NavLink exact to=\"/\" activeClassName=\"active\" className=\"logo\">\r\n              Landing\r\n          </NavLink>\r\n          \r\n         \r\n            <NavLink exact to={'/account/' + currentUser.id} activeClassName=\"active\">\r\n              Account\r\n            </NavLink>\r\n         \r\n            <NavLink exact to=\"/chat\" activeClassName=\"active\">\r\n              Chat\r\n            </NavLink> */}   \r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nconst NavigationNonAuth = () => {\r\n  return (\r\n    <nav className=\"navigation\">\r\n      <div class = \"topnav\">\r\n          <img class = \"logo\" src = \"/imgs/turnip_logo.png\" alt=\"No-img\"/>\r\n          <Link to=\"/\">Turnip Exchange</Link>\r\n          <Link to=\"/\">Home</Link>\r\n          <Link to='/signup' >Sign Up</Link>\r\n          <Link to=\"/signin\">Sign In</Link>\r\n      </div>\r\n      {/* <ul>\r\n        <li>\r\n          <NavLink exact to=\"/\" activeClassName=\"active\">\r\n            Landing\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/signup\" activeClassName=\"active\">\r\n            Sign-up\r\n          </NavLink>\r\n        </li>\r\n        <li>\r\n          <NavLink exact to=\"/signin\" activeClassName=\"active\">\r\n            Sign-In\r\n          </NavLink>\r\n        </li>\r\n      </ul> */}\r\n    </nav>\r\n  );\r\n};\r\nexport default Navigation;","C:\\554workspace\\finalproject\\client\\src\\components\\SignIn.js",["125"],"C:\\554workspace\\finalproject\\client\\src\\components\\Chat.js",["126","127","128","129"],"import React, {useContext, useState, useEffect, useRef} from \"react\";\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport io from \"socket.io-client\";\r\nimport '../App.css';\r\nconst axios = require('axios');\r\n\r\n\r\n\r\nconst Chat = () => {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [ID, setID] = useState(\"\");\r\n    const [currentImage, setCurrentImage] = useState(\"/imgs/turnipSmall.png\");\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState(\"\");\r\n    const socketRef = useRef();\r\n\r\n    useEffect(() => {\r\n        socketRef.current = io('http://localhost:5000', {\r\n            transports: ['websocket'],\r\n            upgrade: false\r\n        });\r\n        socketRef.current.on(\"RECEIVE_MESSAGE\", function(message) {\r\n            receivedMessage(message);\r\n        });\r\n        async function getImage() {\r\n            try {\r\n                const profile = await axios.get(`http://localhost:5000/images/${currentUser.id}`); \r\n                let newimageSource = profile.data.data.imageData;\r\n                let finalimageSource = newimageSource.replaceAll(\"\\\\\", \"/\").replace(\"../client/public\", \"\");\r\n                if (finalimageSource.includes(\".png\")) {\r\n                    finalimageSource = finalimageSource.replace(\".png\", \"_small.png\");\r\n                }\r\n                if (finalimageSource.includes(\".jpeg\")) {\r\n                    finalimageSource = finalimageSource.replace(\".jpeg\", \"_small.jpeg\");\r\n                }\r\n                if (finalimageSource.includes(\".jpg\")) {\r\n                    finalimageSource = finalimageSource.replace(\".jpg\", \"_small.jpg\");\r\n                }\r\n                setCurrentImage(finalimageSource);\r\n            } catch (e) {\r\n                setCurrentImage(\"/imgs/turnipSmall.png\");\r\n                console.log(e);\r\n            }\r\n        }\r\n        getImage();\r\n        return () => {\r\n            socketRef.current.off(\"disconnect\");\r\n        };\r\n        \r\n    }, [setMessages])\r\n\r\n\r\n    function receivedMessage(message) {\r\n        setMessages(oldMessages => [...oldMessages, message]);\r\n        console.log(message);\r\n        scrollDown();\r\n    }\r\n\r\n    function sendMessage(e) {\r\n        e.preventDefault();\r\n        const messageObject = {\r\n            image: currentImage,\r\n            email: currentUser.email,\r\n            name: currentUser.displayName,\r\n            body: message,\r\n            id: ID,\r\n        };\r\n        socketRef.current.emit(\"SEND_MESSAGE\", messageObject);\r\n        setMessage(\"\");\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setMessage(e.target.value);\r\n    }\r\n\r\n    function scrollDown() {\r\n        var objDiv = document.getElementById(\"chat\");\r\n        objDiv.scrollTop = objDiv.scrollHeight;\r\n    }\r\n    return (\r\n        \r\n        <div>\r\n            <div id=\"chat\" className=\"chat-box\">\r\n                {messages.map((message, index) => {\r\n                    if (message.id === ID) {\r\n                        if (currentUser && currentUser.email === message.email) {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className=\"chat-user\" >\r\n                                        {message.name}\r\n                                        <img src={message.image} className=\"round-profile\" alt=\"Image\"/>\r\n                                        <br/>\r\n                                        <div class=\"chat-bubble-user\">\r\n                                        {message.body}\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        } else {\r\n                            return (\r\n                                <div key={index}>\r\n                                    <div className=\"chat-other chat-bubble\">\r\n                                        <img src={message.image} class=\"round-profile\" alt=\"Image\"/>\r\n                                        {message.name}\r\n                                        <br/>\r\n                                        <div class=\"chat-bubble-other\">\r\n                                        {message.body}\r\n                                        </div>\r\n                                        <br/>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        \r\n                    }\r\n                    return (\r\n                        <div>\r\n                            <div>\r\n                                {message.body}\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            {currentUser ?\r\n            \r\n            <form onSubmit={sendMessage}>\r\n                <textarea className=\"chat-text-field\" value={message} onChange={handleChange} placeholder=\"Message...\" />\r\n                <button className=\"chat-submit\">Send</button>\r\n            </form>\r\n            : \r\n            null\r\n            }\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Chat;","C:\\554workspace\\finalproject\\client\\src\\components\\Post.js",["130","131","132"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\n//import { doCreateUserWithEmailAndPassword } from '../firebase/FirebaseFunctions';\r\nimport { AuthContext } from '../firebase/Auth';\r\n//import SocialSignIn from './SocialSignIn';\r\nconst axios = require('axios');\r\n\r\nfunction Post() {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [ posted, setPosted ] = useState(false);\r\n    var button;\r\n\r\n    const handlePost = async (e) => {\r\n        e.preventDefault();\r\n        const { price, ticketPrice, islandCode, sell, description, endTime } = e.target.elements;\r\n\r\n\r\n        try {\r\n            await axios.post('http://localhost:5000/Post/addPost', {\r\n                creator: currentUser.id,\r\n                sell: button,\r\n                price: price.value,\r\n                ticketPrice: ticketPrice.value,\r\n                islandCode: islandCode.value,\r\n                description: description.value,\r\n                endTime: endTime.value\r\n            })\r\n            setPosted(true);\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n    };\r\n\r\n    if (!currentUser) {\r\n        return <Redirect to=\"/signup\" />;\r\n    }\r\n\r\n    if (posted) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    //const redir = async () => {\r\n    //    return <Redirect to=\"/home\" />;\r\n    //}\r\n\r\n    const sellButton = async () => {\r\n        button = true;\r\n    }\r\n\r\n    const buyButton = async () => {\r\n        button = false;\r\n    }\r\n\r\n    return (\r\n        <div className=\"add-post\" align=\"center\">\r\n            <h2 className=\"post\" align=\"center\">Post</h2>\r\n\r\n            <form className=\"form2\" onSubmit={handlePost}>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"number\"\r\n                        align=\"center\"\r\n                        placeholder=\"Price\"\r\n                        name=\"price\"\r\n                        id=\"price\"\r\n                        required\r\n                    />\r\n                </div>\r\n                {/* <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Creator\"\r\n                        name=\"creator\"\r\n                        id=\"creator\"\r\n                        required\r\n                    />\r\n                </div> */}\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Ticket Price\"\r\n                        name=\"ticketPrice\"\r\n                        id=\"ticketPrice\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Island Code\"\r\n                        name=\"islandCode\"\r\n                        id=\"islandCode\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                </div>\r\n                <div id=\"sell\" class=\"dropdown\" name=\"sell\" align=\"center\" >\r\n                    <div className=\"radio\">\r\n                        <label>\r\n                            <input name=\"test\" type=\"radio\" onChange={sellButton} />Selling</label>\r\n                        <label>\r\n                            <input name=\"test\" type=\"radio\" onChange={buyButton} />Buying</label>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"text\"\r\n                        align=\"center\"\r\n                        placeholder=\"Description\"\r\n                        name=\"description\"\r\n                        id=\"description\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input\r\n                        className=\"un form-control\"\r\n                        type=\"datetime-local\"\r\n                        align=\"center\"\r\n                        placeholder=\"End Time\"\r\n                        name=\"endTime\"\r\n                        id=\"endTime\"\r\n                        required\r\n                    />\r\n                </div>\r\n                <button className=\"submit\" id=\"submitButton\" name=\"submitButton\" type=\"submit\" align=\"center\">\r\n                    Post\r\n                </button>\r\n            </form>\r\n            <br />\r\n            \r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Post;\r\n","C:\\554workspace\\finalproject\\client\\src\\components\\PostPage.js",["133","134","135"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport '../App.css';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\n\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport GetWaitingInfo from './GetWaitingInfo';\r\nimport Comments from './Comments';\r\n// import { Beforeunload } from 'react-beforeunload';\r\n\r\nconst axios = require('axios');\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 250,\r\n        height: 'auto',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        borderRadius: 5,\r\n        border: '1px solid #1e8678',\r\n        boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n    },\r\n    titleHead: {\r\n        borderBottom: '1px solid #1e8678',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        flexGrow: 1,\r\n        flexDirection: 'row'\r\n    },\r\n    media: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        color: '#1e8678',\r\n        fontWeight: 'bold',\r\n        fontSize: 12\r\n    }\r\n});\r\n\r\n//TODO\r\n//provide links to change password\r\n//display user info\r\n//display different information for authenticated vs non authenticated\r\n//ask about updating user schema to include island code, nintendo ID\r\n\r\n\r\nfunction PostPage(props) {\r\n    const postId = props.match.params.id;\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState(true);\r\n    const [postData, setPostData] = useState(undefined);\r\n    const [queueId, setQueueId] = useState(undefined);\r\n    const { currentUser } = useContext(AuthContext);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        const cleanup = () => {\r\n            console.log('removing from queue!!!')\r\n            axios.post('http://localhost:5000/queue/leave', { queueId: queueId })\r\n\r\n        }\r\n        window.addEventListener('beforeunload', cleanup);\r\n\r\n        async function fetchData() {\r\n            try {\r\n                //getting data for user profile\r\n                const post = await axios.get(\"http://localhost:5000/post/\" + postId);\r\n                setPostData(post.data.data);\r\n                const queue = await axios.post(\"http://localhost:5000/queue/join\", {\r\n                    userId: currentUser.id,\r\n                    postId: postId,\r\n                    inGameName: currentUser.inGameName\r\n                })\r\n                setQueueId(queue.data.data._id);\r\n                setLoading(false);\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n        fetchData();\r\n        return () => {\r\n            window.removeEventListener('beforeunload', cleanup);\r\n        }\r\n    }, []);\r\n    if (!currentUser) {\r\n        return <Redirect to=\"/signup\" />;\r\n    }\r\n\r\n\r\n    if (loading) {\r\n        return (\r\n            <div>\r\n                <h2>Loading....</h2>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    else {\r\n        // function handleModalLeave(){\r\n        //     axios.post('http://localhost:5000/queue/',{queueId: queueId});\r\n        // }\r\n        return (\r\n            <div>\r\n            <div>\r\n                {/* <Beforeunload onBeforeunload={() => {\r\n                    axios.post('http://localhost:5000/queue/leave', { queueId: queueId })\r\n\r\n                }}> */}\r\n                    <br />\r\n                    <br />\r\n                    {/* <Button> <Link to={\"/sell\"}> Selling </Link> </Button> */}\r\n                    {/* {DoPaginationf} */}\r\n\r\n                    <Card className={classes.card} variant='outlined'>\r\n                        <CardActionArea>\r\n                            <CardContent>\r\n\r\n                                <Typography variant='body2' color='textSecondary' component='p'>\r\n                                    <br></br>\r\n                                        Description: {postData.description}\r\n                                    <br></br>\r\n                                        Ticket Price: {postData.ticketPrice}<br />\r\n                                    <br />\r\n                                    <Button onClick={async() => {\r\n                                        await axios.post('http://localhost:5000/queue/leave', { queueId: queueId });\r\n                                        \r\n                                    }}><Link to= {\"/\"}>Leave Island</Link></Button>\r\n\r\n                                    {/* <br></br>\r\n                                        Rating: {show.rating}\r\n                                    <br></br>\r\n                                        datePosted: {show.Date}\r\n                                    <br></br>\r\n                                        expirationTime: {show.endTime} */}\r\n                                </Typography>\r\n                            </CardContent>\r\n\r\n                        </CardActionArea>\r\n                    </Card>\r\n                    <br />\r\n                    <GetWaitingInfo queueId={queueId} postId={postId} />\r\n                    \r\n\r\n                {/* </Beforeunload > */}\r\n                \r\n            </div>\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <Comments postInfo={postData}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default PostPage","C:\\554workspace\\finalproject\\client\\src\\components\\EditAccount.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\ChangePassword.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\JoinQueue.js",["136","137","138","139","140","141","142","143","144","145","146","147","148","149","150"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport SignOutButton from './SignOut';\r\nimport '../App.css';\r\nimport ChangePassword from './ChangePassword';\r\nimport UploadProfilePic from './UploadProfilePic';\r\nimport noImage from '../img/no-image.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { AuthContext } from '../firebase/Auth';\r\nconst axios = require('axios');\r\n\r\nfunction JoinQueue(props) {\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [userId, setUserId] = useState(undefined);\r\n    const [postId, setPostId] = useState(props.location.postId);\r\n    const [postInfo, setPostInfo] = useState(undefined);\r\n\r\n    const GetUser = () => {\r\n        useEffect(() => {\r\n            async function getData() {\r\n                const userInfo = await axios.get(`http://localhost:5000/user/email/${currentUser.email}`);\r\n                //console.log(userInfo); \r\n                setUserId(userInfo.data.data._id);\r\n                console.log(userInfo.data.data._id);\r\n            };\r\n            getData();\r\n        }, []);\r\n        return(<div></div>);\r\n    }\r\n    function PostInfo() {\r\n        useEffect(() => {\r\n            async function getData() {\r\n                const post = await axios.get(`http://localhost:5000/post/${postId}}`);\r\n                setPostInfo(post);\r\n                //console.log(userInfo); \r\n                // console.log(userInfo.data.data._id);\r\n            };\r\n            getData();\r\n        }, []);\r\n\r\n        if (postInfo && postInfo.success === true) {\r\n            return (\r\n                <div className=\"postInfo\">\r\n                    Type: Buying\r\n                    <br></br>\r\n\t\t\t\t\tPosted by: {postInfo.data.creator}\r\n                    <br></br>\r\n\t\t\t\t\tPrice: {postInfo.data.price}\r\n                    <br></br>\r\n\t\t\t\t\tTicket Price: {postInfo.data.ticketPrice}\r\n                    <br></br>\r\n\t\t\t\t\tRating: {postInfo.data.rating}\r\n                    <br></br>\r\n\t\t\t\t\tdatePosted: {postInfo.data.createdAt}\r\n                    <br></br>\r\n\t\t\t\t\texpirationTime: {postInfo.data.endTime}\r\n                </div>\r\n            )\r\n        } else if (postInfo && postInfo.success === false) {\r\n            return (\r\n                <div>\r\n                    Error<br />\r\n                    {postInfo.error}\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <GetUser />\r\n            <PostInfo />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JoinQueue","C:\\554workspace\\finalproject\\client\\src\\components\\PrivateRoute.js",[],"C:\\554workspace\\finalproject\\client\\src\\firebase\\Auth.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\UploadProfilePic.js",["151"],"import React, { useContext, useState, useEffect } from 'react';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport '../App.css';\r\n//import DefaultImg from \"../public/imgs/turnip.png\";\r\n\r\nconst axios = require('axios');\r\nfunction UploadProfilePic() {\r\n    \r\n    const { currentUser } = useContext(AuthContext);\r\n    const [multerImage, setMulterImage] = useState(\"/imgs/turnip.png\");\r\n\r\n    useEffect(() => {\r\n        async function getImage() {\r\n            try {\r\n                const profile = await axios.get(`http://localhost:5000/images/${currentUser.email}`); \r\n                let newimageSource = profile.data.data.imageData;\r\n                let finalimageSource = newimageSource.replaceAll(\"\\\\\", \"/\").replace(\"../client/public\", \"\");\r\n                \r\n                setMulterImage(finalimageSource);\r\n                console.log(multerImage);\r\n            } catch (e) {\r\n                setMulterImage(\"/imgs/turnip.png\");\r\n                console.log(e);\r\n            }\r\n        }\r\n        getImage();\r\n    }, [multerImage]);\r\n    \r\n    const uploadImage = (e) => {\r\n        let imageFormObj = new FormData();\r\n        imageFormObj.append(\"userId\", currentUser.id);\r\n        imageFormObj.append(\"userEmail\", currentUser.email);\r\n        imageFormObj.append(\"imageName\", \"multer-image-\" + Date.now());\r\n        imageFormObj.append(\"imageData\", e.target.files[0]);\r\n        axios.delete(`http://localhost:5000/images/${currentUser.email}`)\r\n\r\n        axios.post('http://localhost:5000/images/uploadmulter', imageFormObj)\r\n            .then((data) => {\r\n                if (data.data.success) {\r\n                    alert(\"Image successfully uploaded\");\r\n                    //setMulterImage(\"/imgs/turnip.png\");\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                alert(err);\r\n                setMulterImage(\"/imgs/turnip.png\");\r\n            })\r\n        };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <input type=\"file\"\r\n                onChange={uploadImage}\r\n            />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UploadProfilePic","C:\\554workspace\\finalproject\\client\\src\\components\\SocialSignIn.js",[],"C:\\554workspace\\finalproject\\client\\src\\firebase\\Firebase.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\GetCode.js",["152","153","154","155","156","157","158"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport '../App.css';\r\nimport noImage from '../img/no-image.png';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, CardActionArea, CardContent, CardMedia, Grid, Typography, makeStyles, Button } from '@material-ui/core';\r\nimport { AuthContext } from '../firebase/Auth';\r\nimport Countdown from 'react-countdown';\r\n\r\n\r\nconst axios = require('axios');\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        maxWidth: 250,\r\n        height: 'auto',\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        borderRadius: 5,\r\n        border: '1px solid #1e8678',\r\n        boxShadow: '0 19px 38px rgba(0,0,0,0.30), 0 15px 12px rgba(0,0,0,0.22);'\r\n    },\r\n    titleHead: {\r\n        borderBottom: '1px solid #1e8678',\r\n        fontWeight: 'bold'\r\n    },\r\n    grid: {\r\n        flexGrow: 1,\r\n        flexDirection: 'row'\r\n    },\r\n    media: {\r\n        height: '100%',\r\n        width: '100%'\r\n    },\r\n    button: {\r\n        color: '#1e8678',\r\n        fontWeight: 'bold',\r\n        fontSize: 12\r\n    }\r\n});\r\n\r\n//TODO\r\n//provide links to change password\r\n//display user info\r\n//display different information for authenticated vs non authenticated\r\n//ask about updating user schema to include island code, nintendo ID\r\nfunction GetCode(props) {\r\n    const postId = props.postId;\r\n    const queueId = props.queueId;\r\n\r\n\r\n\r\n    const { currentUser } = useContext(AuthContext);\r\n    const [islandCode, setIslandCode] = useState(undefined);\r\n    // const [queueId, setQueueId] = useState(undefined);\r\n\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        const getCode = async () => {\r\n            // const userInfo = await axios.get(`http://localhost:5000/user/email/${currentUser.email}`);\r\n            try {\r\n                // const queue = await axios.post('http://localhost:5000/queue/find', {\r\n                //     userId: currentUser.id,\r\n                //     postId: postId\r\n                // })\r\n                // setQueueId(queue.data.data._id);\r\n                const code = await axios.post('http://localhost:5000/queue/getCode', {\r\n                    postId: postId,\r\n                    queueId: queueId\r\n                })\r\n                setIslandCode(code.data.data);\r\n            } catch (e) {\r\n                console.log(e.response)\r\n            }\r\n        }\r\n        // console.log(queueId)\r\n        if (queueId) getCode();\r\n\r\n    }, []);\r\n    let card = null;\r\n\r\n    islandCode && (card =\r\n        <Card className={classes.card} variant='outlined'>\r\n            <CardActionArea>\r\n                <CardContent>\r\n                    <Typography variant='body2' color='textSecondary' component='p'>\r\n                        <br></br>\r\n                            Code: {islandCode}\r\n                        <br></br>\r\n\r\n\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea><br />\r\n            Time left:\r\n            <Countdown date={Date.now() + 300000} />\r\n        </Card>\r\n    );\r\n    if (islandCode!='Waiting.....') {\r\n        return (\r\n            <Grid container className={classes.grid} spacing={5}>\r\n                {card}\r\n            </Grid>\r\n\r\n        );\r\n    } else {\r\n        return (\r\n            <Grid container className={classes.grid} spacing={5}>\r\n                <Card className={classes.card} variant='outlined'>\r\n                    <CardActionArea>\r\n                        <CardContent>\r\n                            <Typography variant='body2' color='textSecondary' component='p'>\r\n                                <br></br>\r\n                            Waiting.....\r\n                                <br></br>\r\n\r\n\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </CardActionArea><br />\r\n                </Card>\r\n            </Grid>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default GetCode;","C:\\554workspace\\finalproject\\client\\src\\components\\SignUp.js",[],"C:\\554workspace\\finalproject\\client\\src\\components\\CurrentUserAccount.js",["159","160","161","162","163","164"],"C:\\554workspace\\finalproject\\client\\src\\firebase\\FirebaseFunctions.js",["165"],"C:\\554workspace\\finalproject\\client\\src\\components\\GetWaitingInfo.js",["166","167","168","169","170","171","172","173"],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"174","replacedBy":"178"},{"ruleId":"176","replacedBy":"179"},{"ruleId":"180","severity":1,"message":"181","line":6,"column":8,"nodeType":"182","messageId":"183","endLine":6,"endColumn":14},{"ruleId":"180","severity":1,"message":"184","line":7,"column":8,"nodeType":"182","messageId":"183","endLine":7,"endColumn":15},{"ruleId":"180","severity":1,"message":"185","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":21},{"ruleId":"180","severity":1,"message":"186","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":22},{"ruleId":"180","severity":1,"message":"187","line":5,"column":8,"nodeType":"182","messageId":"183","endLine":5,"endColumn":24},{"ruleId":"180","severity":1,"message":"188","line":6,"column":8,"nodeType":"182","messageId":"183","endLine":6,"endColumn":15},{"ruleId":"180","severity":1,"message":"189","line":8,"column":86,"nodeType":"182","messageId":"183","endLine":8,"endColumn":92},{"ruleId":"180","severity":1,"message":"190","line":10,"column":8,"nodeType":"182","messageId":"183","endLine":10,"endColumn":26},{"ruleId":"180","severity":1,"message":"191","line":62,"column":11,"nodeType":"182","messageId":"183","endLine":62,"endColumn":16},{"ruleId":"180","severity":1,"message":"192","line":67,"column":20,"nodeType":"182","messageId":"183","endLine":67,"endColumn":29},{"ruleId":"193","severity":1,"message":"194","line":164,"column":8,"nodeType":"195","endLine":164,"endColumn":16,"suggestions":"196"},{"ruleId":"180","severity":1,"message":"197","line":2,"column":16,"nodeType":"182","messageId":"183","endLine":2,"endColumn":23},{"ruleId":"180","severity":1,"message":"185","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":21},{"ruleId":"180","severity":1,"message":"198","line":6,"column":8,"nodeType":"182","messageId":"183","endLine":6,"endColumn":14},{"ruleId":"180","severity":1,"message":"199","line":7,"column":8,"nodeType":"182","messageId":"183","endLine":7,"endColumn":11},{"ruleId":"180","severity":1,"message":"200","line":8,"column":8,"nodeType":"182","messageId":"183","endLine":8,"endColumn":14},{"ruleId":"201","severity":1,"message":"202","line":83,"column":13,"nodeType":"203","endLine":83,"endColumn":23},{"ruleId":"180","severity":1,"message":"204","line":11,"column":16,"nodeType":"182","messageId":"183","endLine":11,"endColumn":21},{"ruleId":"193","severity":1,"message":"205","line":50,"column":8,"nodeType":"195","endLine":50,"endColumn":21,"suggestions":"206"},{"ruleId":"207","severity":1,"message":"208","line":91,"column":41,"nodeType":"209","endLine":91,"endColumn":105},{"ruleId":"207","severity":1,"message":"208","line":104,"column":41,"nodeType":"209","endLine":104,"endColumn":101},{"ruleId":"180","severity":1,"message":"210","line":1,"column":29,"nodeType":"182","messageId":"183","endLine":1,"endColumn":38},{"ruleId":"180","severity":1,"message":"211","line":2,"column":10,"nodeType":"182","messageId":"183","endLine":2,"endColumn":14},{"ruleId":"180","severity":1,"message":"212","line":15,"column":49,"nodeType":"182","messageId":"183","endLine":15,"endColumn":53},{"ruleId":"180","severity":1,"message":"213","line":4,"column":45,"nodeType":"182","messageId":"183","endLine":4,"endColumn":54},{"ruleId":"180","severity":1,"message":"214","line":4,"column":56,"nodeType":"182","messageId":"183","endLine":4,"endColumn":60},{"ruleId":"193","severity":1,"message":"215","line":88,"column":8,"nodeType":"195","endLine":88,"endColumn":10,"suggestions":"216"},{"ruleId":"180","severity":1,"message":"185","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":21},{"ruleId":"180","severity":1,"message":"186","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":22},{"ruleId":"180","severity":1,"message":"187","line":5,"column":8,"nodeType":"182","messageId":"183","endLine":5,"endColumn":24},{"ruleId":"180","severity":1,"message":"188","line":6,"column":8,"nodeType":"182","messageId":"183","endLine":6,"endColumn":15},{"ruleId":"180","severity":1,"message":"211","line":7,"column":10,"nodeType":"182","messageId":"183","endLine":7,"endColumn":14},{"ruleId":"180","severity":1,"message":"217","line":8,"column":10,"nodeType":"182","messageId":"183","endLine":8,"endColumn":14},{"ruleId":"180","severity":1,"message":"218","line":8,"column":16,"nodeType":"182","messageId":"183","endLine":8,"endColumn":30},{"ruleId":"180","severity":1,"message":"219","line":8,"column":32,"nodeType":"182","messageId":"183","endLine":8,"endColumn":43},{"ruleId":"180","severity":1,"message":"213","line":8,"column":45,"nodeType":"182","messageId":"183","endLine":8,"endColumn":54},{"ruleId":"180","severity":1,"message":"214","line":8,"column":56,"nodeType":"182","messageId":"183","endLine":8,"endColumn":60},{"ruleId":"180","severity":1,"message":"220","line":8,"column":62,"nodeType":"182","messageId":"183","endLine":8,"endColumn":72},{"ruleId":"180","severity":1,"message":"221","line":8,"column":74,"nodeType":"182","messageId":"183","endLine":8,"endColumn":84},{"ruleId":"180","severity":1,"message":"189","line":8,"column":86,"nodeType":"182","messageId":"183","endLine":8,"endColumn":92},{"ruleId":"180","severity":1,"message":"222","line":14,"column":12,"nodeType":"182","messageId":"183","endLine":14,"endColumn":18},{"ruleId":"180","severity":1,"message":"223","line":15,"column":20,"nodeType":"182","messageId":"183","endLine":15,"endColumn":29},{"ruleId":"193","severity":1,"message":"224","line":27,"column":8,"nodeType":"195","endLine":27,"endColumn":21,"suggestions":"225"},{"ruleId":"180","severity":1,"message":"188","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":15},{"ruleId":"180","severity":1,"message":"211","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":14},{"ruleId":"180","severity":1,"message":"213","line":5,"column":45,"nodeType":"182","messageId":"183","endLine":5,"endColumn":54},{"ruleId":"180","severity":1,"message":"189","line":5,"column":86,"nodeType":"182","messageId":"183","endLine":5,"endColumn":92},{"ruleId":"180","severity":1,"message":"226","line":52,"column":13,"nodeType":"182","messageId":"183","endLine":52,"endColumn":24},{"ruleId":"193","severity":1,"message":"227","line":78,"column":8,"nodeType":"195","endLine":78,"endColumn":10,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":98,"column":19,"nodeType":"231","messageId":"232","endLine":98,"endColumn":21},{"ruleId":"180","severity":1,"message":"233","line":1,"column":38,"nodeType":"182","messageId":"183","endLine":1,"endColumn":48},{"ruleId":"180","severity":1,"message":"191","line":38,"column":11,"nodeType":"182","messageId":"183","endLine":38,"endColumn":16},{"ruleId":"180","severity":1,"message":"234","line":41,"column":13,"nodeType":"182","messageId":"183","endLine":41,"endColumn":19},{"ruleId":"180","severity":1,"message":"235","line":41,"column":21,"nodeType":"182","messageId":"183","endLine":41,"endColumn":30},{"ruleId":"180","severity":1,"message":"236","line":43,"column":22,"nodeType":"182","messageId":"183","endLine":43,"endColumn":33},{"ruleId":"193","severity":1,"message":"237","line":113,"column":8,"nodeType":"195","endLine":113,"endColumn":10,"suggestions":"238"},{"ruleId":"180","severity":1,"message":"239","line":2,"column":7,"nodeType":"182","messageId":"183","endLine":2,"endColumn":12},{"ruleId":"180","severity":1,"message":"233","line":1,"column":38,"nodeType":"182","messageId":"183","endLine":1,"endColumn":48},{"ruleId":"180","severity":1,"message":"188","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":15},{"ruleId":"180","severity":1,"message":"211","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":14},{"ruleId":"180","severity":1,"message":"240","line":4,"column":16,"nodeType":"182","messageId":"183","endLine":4,"endColumn":24},{"ruleId":"180","severity":1,"message":"213","line":5,"column":45,"nodeType":"182","messageId":"183","endLine":5,"endColumn":54},{"ruleId":"180","severity":1,"message":"189","line":5,"column":86,"nodeType":"182","messageId":"183","endLine":5,"endColumn":92},{"ruleId":"180","severity":1,"message":"241","line":6,"column":10,"nodeType":"182","messageId":"183","endLine":6,"endColumn":21},{"ruleId":"193","severity":1,"message":"227","line":76,"column":8,"nodeType":"195","endLine":76,"endColumn":15,"suggestions":"242"},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],["243"],["244"],"no-unused-vars","'turnip' is defined but never used.","Identifier","unusedVar","'Account' is defined but never used.","'SignOutButton' is defined but never used.","'ChangePassword' is defined but never used.","'UploadProfilePic' is defined but never used.","'noImage' is defined but never used.","'Button' is defined but never used.","'CurrentUserAccount' is defined but never used.","'regex' is assigned a value but never used.","'setUserId' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'multerImage'. Either include it or remove the dependency array.","ArrayExpression",["245"],"'NavLink' is defined but never used.","'Navbar' is defined but never used.","'Nav' is defined but never used.","'button' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'setID' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentUser.id' and 'receivedMessage'. Either include them or remove the dependency array.",["246"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useEffect' is defined but never used.","'Link' is defined but never used.","'sell' is assigned a value but never used.","'CardMedia' is defined but never used.","'Grid' is defined but never used.","React Hook useEffect has missing dependencies: 'currentUser.id', 'currentUser.inGameName', 'postId', and 'queueId'. Either include them or remove the dependency array.",["247"],"'Card' is defined but never used.","'CardActionArea' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'makeStyles' is defined but never used.","'userId' is assigned a value but never used.","'setPostId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentUser.email'. Either include it or remove the dependency array.",["248"],"'currentUser' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'postId' and 'queueId'. Either include them or remove the dependency array.",["249"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'buying' is assigned a value but never used.","'setBuying' is assigned a value but never used.","'setAuthUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'authUser.email'. Either include it or remove the dependency array.",["250"],"'axios' is assigned a value but never used.","'Redirect' is defined but never used.","'AuthContext' is defined but never used.",["251"],"no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [multerImage, userId]",{"range":"266","text":"267"},"Update the dependencies array to be: [currentUser.id, receivedMessage, setMessages]",{"range":"268","text":"269"},"Update the dependencies array to be: [currentUser.id, currentUser.inGameName, postId, queueId]",{"range":"270","text":"271"},"Update the dependencies array to be: [currentUser.email, multerImage]",{"range":"272","text":"273"},"Update the dependencies array to be: [postId, queueId]",{"range":"274","text":"275"},"Update the dependencies array to be: [authUser.email]",{"range":"276","text":"277"},"Update the dependencies array to be: [postId, queueId, track]",{"range":"278","text":"279"},[5628,5636],"[multerImage, userId]",[1984,1997],"[currentUser.id, receivedMessage, setMessages]",[2734,2736],"[currentUser.id, currentUser.inGameName, postId, queueId]",[1031,1044],"[currentUser.email, multerImage]",[2440,2442],"[postId, queueId]",[3722,3724],"[authUser.email]",[2222,2229],"[postId, queueId, track]"]